{"ast":null,"code":"import axios from \"@/plugins/axios\";\nimport defaultProfilePicture from \"@/assets/img/default-profile.jpg\";\nimport Cropper from \"cropperjs\";\nimport \"cropperjs/dist/cropper.css\";\nimport { ref, nextTick, onMounted } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { eventBus } from \"@/utils/eventBus\";\nimport { useStore } from \"vuex\";\nexport default {\n  name: \"Profile\",\n  setup() {\n    const router = useRouter();\n    const store = useStore();\n    const user = ref(null);\n    // Inicializamos el formulario con valores vacíos\n    const form = ref({\n      name: \"\",\n      apellidos: \"\",\n      email: \"\",\n      phone: \"\",\n      address: \"\",\n      password: \"\"\n    });\n    const imagePreview = ref(null);\n    const showCropper = ref(false);\n    const selectedFile = ref(null);\n    const cropperInstance = ref(null);\n    const croppedImage = ref(null);\n    const successMessage = ref(\"\");\n    const errorMessage = ref(\"\");\n    const cropperImage = ref(null);\n    const showEdit = ref(false);\n    const fetchProfile = async () => {\n      try {\n        const response = await axios.get(\"/users/me\");\n        user.value = response.data;\n        // Se carga el formulario con los datos actuales (menos la contraseña)\n        form.value = {\n          ...response.data,\n          password: \"\"\n        };\n      } catch (error) {\n        errorMessage.value = error.response?.data?.message || \"Error al cargar el perfil.\";\n      }\n    };\n    onMounted(() => {\n      fetchProfile();\n      // Escuchar actualizaciones globales para refrescar el perfil en tiempo real.\n      eventBus.on(\"profileUpdated\", updatedUser => {\n        user.value = updatedUser;\n        form.value = {\n          ...updatedUser,\n          password: \"\"\n        };\n        localStorage.setItem(\"user\", JSON.stringify(updatedUser));\n      });\n    });\n    const toggleEdit = () => {\n      showEdit.value = !showEdit.value;\n      // Al activar la edición, se carga el formulario con los datos actuales.\n      form.value = {\n        ...user.value,\n        password: \"\"\n      };\n    };\n    const onFileChange = event => {\n      const file = event.target.files[0];\n      if (file) {\n        selectedFile.value = file;\n        imagePreview.value = URL.createObjectURL(file);\n        showCropper.value = true;\n        nextTick(() => {\n          if (cropperImage.value) {\n            if (cropperInstance.value) {\n              cropperInstance.value.destroy();\n            }\n            cropperInstance.value = new Cropper(cropperImage.value, {\n              aspectRatio: 1,\n              viewMode: 1,\n              autoCropArea: 1,\n              responsive: true,\n              background: false,\n              minContainerWidth: 400,\n              minContainerHeight: 300\n            });\n            console.log(\"Cropper inicializado tras cargar la imagen.\");\n          } else {\n            errorMessage.value = \"No se encontró la imagen para recortar.\";\n          }\n        });\n      }\n    };\n    const cropImage = () => {\n      if (cropperInstance.value) {\n        const canvas = cropperInstance.value.getCroppedCanvas({\n          width: 200,\n          height: 200\n        });\n        croppedImage.value = canvas.toDataURL(\"image/jpeg\");\n        showCropper.value = false;\n        cropperInstance.value.destroy();\n        cropperInstance.value = null;\n        imagePreview.value = null;\n      }\n    };\n    const cancelCrop = () => {\n      showCropper.value = false;\n      imagePreview.value = null;\n      if (cropperInstance.value) {\n        cropperInstance.value.destroy();\n        cropperInstance.value = null;\n      }\n    };\n    const uploadWithoutCrop = () => {\n      if (selectedFile.value) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          const fileBase64 = e.target.result;\n          axios.post(\"/users/profile-picture\", {\n            profilePicture: fileBase64\n          }).then(response => {\n            user.value.profilePicture = response.data.profilePicture;\n            successMessage.value = \"¡Foto de perfil actualizada sin recorte!\";\n            errorMessage.value = \"\";\n            selectedFile.value = null;\n            showCropper.value = false;\n            croppedImage.value = null;\n          }).catch(error => {\n            errorMessage.value = error.response?.data?.message || \"Error al subir la foto de perfil.\";\n            successMessage.value = \"\";\n          });\n        };\n        reader.readAsDataURL(selectedFile.value);\n      } else {\n        errorMessage.value = \"No se ha seleccionado ninguna imagen.\";\n      }\n    };\n    const uploadProfilePicture = async () => {\n      if (!croppedImage.value) {\n        errorMessage.value = \"Por favor, recorta la imagen o elige subir sin recortar.\";\n        return;\n      }\n      try {\n        const response = await axios.post(\"/users/profile-picture\", {\n          profilePicture: croppedImage.value\n        });\n        user.value.profilePicture = response.data.profilePicture;\n        successMessage.value = \"¡Foto de perfil actualizada!\";\n        errorMessage.value = \"\";\n        croppedImage.value = null;\n      } catch (error) {\n        errorMessage.value = error.response?.data?.message || \"Error al subir la foto de perfil.\";\n        successMessage.value = \"\";\n      }\n    };\n    const deleteProfilePicture = async () => {\n      try {\n        await axios.delete(\"/users/profile-picture\");\n        user.value.profilePicture = null;\n        successMessage.value = \"¡Foto de perfil eliminada!\";\n        errorMessage.value = \"\";\n      } catch (error) {\n        errorMessage.value = error.response?.data?.message || \"Error al eliminar la foto de perfil.\";\n        successMessage.value = \"\";\n      }\n    };\n    const updateProfile = async () => {\n      const payload = {\n        ...form.value\n      };\n      if (!payload.password) {\n        delete payload.password;\n      }\n      try {\n        const response = await axios.put(\"/users/me\", payload);\n        user.value = response.data.user;\n        store.commit(\"UPDATE_USER_DATA\", response.data);\n        eventBus.emit(\"profileUpdated\", response.data);\n        successMessage.value = \"¡Perfil actualizado exitosamente!\";\n        errorMessage.value = \"\";\n        // Reiniciar formulario con datos actualizados\n        form.value = {\n          ...response.data.user,\n          password: \"\"\n        };\n      } catch (error) {\n        errorMessage.value = error.response?.data?.message || \"Error al actualizar el perfil.\";\n        successMessage.value = \"\";\n      }\n    };\n    const goToHome = () => {\n      router.push(\"/\");\n    };\n    return {\n      user,\n      form,\n      imagePreview,\n      showCropper,\n      selectedFile,\n      cropperImage,\n      croppedImage,\n      onFileChange,\n      cropImage,\n      cancelCrop,\n      uploadProfilePicture,\n      uploadWithoutCrop,\n      deleteProfilePicture,\n      updateProfile,\n      successMessage,\n      errorMessage,\n      goToHome,\n      defaultProfilePicture,\n      showEdit,\n      toggleEdit\n    };\n  }\n};","map":{"version":3,"names":["axios","defaultProfilePicture","Cropper","ref","nextTick","onMounted","useRouter","eventBus","useStore","name","setup","router","store","user","form","apellidos","email","phone","address","password","imagePreview","showCropper","selectedFile","cropperInstance","croppedImage","successMessage","errorMessage","cropperImage","showEdit","fetchProfile","response","get","value","data","error","message","on","updatedUser","localStorage","setItem","JSON","stringify","toggleEdit","onFileChange","event","file","target","files","URL","createObjectURL","destroy","aspectRatio","viewMode","autoCropArea","responsive","background","minContainerWidth","minContainerHeight","console","log","cropImage","canvas","getCroppedCanvas","width","height","toDataURL","cancelCrop","uploadWithoutCrop","reader","FileReader","onload","e","fileBase64","result","post","profilePicture","then","catch","readAsDataURL","uploadProfilePicture","deleteProfilePicture","delete","updateProfile","payload","put","commit","emit","goToHome","push"],"sources":["/home/lated/LatedServices/frontend/src/views/client/Profile.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <div class=\"row\">\n      <!-- Tarjeta de Detalles del Perfil -->\n      <div class=\"col-md-4 mb-4\">\n        <div class=\"card shadow-sm border-0\">\n          <div class=\"card-header bg-primary text-white d-flex align-items-center justify-content-between\">\n            <h5 class=\"m-0\">Tu Perfil</h5>\n            <div>\n              <!-- Icono lápiz para editar y flecha para volver a Home -->\n              <i class=\"bi bi-pencil me-2 fs-4\" style=\"cursor: pointer;\" @click=\"toggleEdit\"></i>\n              <i class=\"bi bi-arrow-left-circle fs-3\" style=\"cursor: pointer;\" @click=\"goToHome\"></i>\n            </div>\n          </div>\n          <div class=\"card-body text-center\">\n            <!-- Contenedor de imagen con botón para eliminar -->\n            <div class=\"profile-image-container mb-3\">\n              <img :src=\"user?.profilePicture || defaultProfilePicture\" alt=\"Foto Actual\" class=\"profile-img\" />\n              <button v-if=\"user?.profilePicture\" class=\"btn btn-danger btn-sm delete-btn\" @click=\"deleteProfilePicture\">\n                <i class=\"bi bi-trash\"></i>\n              </button>\n            </div>\n            <div class=\"profile-details\">\n              <p class=\"mb-1\"><i class=\"bi bi-person-fill\"></i> <strong>{{ user?.name || 'Nombre' }}</strong></p>\n              <p class=\"mb-1\"><i class=\"bi bi-card-text\"></i> <strong>{{ user?.apellidos || 'Apellidos' }}</strong></p>\n              <p class=\"mb-1\"><i class=\"bi bi-envelope\"></i> {{ user?.email || 'Email' }}</p>\n              <p class=\"mb-1\"><i class=\"bi bi-telephone\"></i> {{ user?.phone || 'Teléfono' }}</p>\n              <p class=\"mb-0\"><i class=\"bi bi-geo-alt\"></i> {{ user?.address || 'Dirección' }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Tarjeta de Modificar Perfil (se muestra al activar la edición) -->\n      <div v-if=\"showEdit\" class=\"col-md-8 mb-4\">\n        <div class=\"card shadow-sm border-0\">\n          <div class=\"card-header bg-primary text-white\">\n            <h5 class=\"m-0\">Modificar Perfil</h5>\n          </div>\n          <div class=\"card-body\">\n            <!-- Mensajes de alerta -->\n            <div v-if=\"successMessage\" class=\"alert alert-success\">\n              {{ successMessage }}\n            </div>\n            <div v-if=\"errorMessage\" class=\"alert alert-danger\">\n              {{ errorMessage }}\n            </div>\n  \n            <!-- Sección para actualizar la foto de perfil -->\n            <div class=\"mb-4\">\n              <h6>Actualizar Foto de Perfil</h6>\n              <!-- Vista actual o selector para nueva imagen -->\n              <div v-if=\"!showCropper\" class=\"text-center mb-3\">\n                <img :src=\"user?.profilePicture || defaultProfilePicture\" alt=\"Foto de Perfil\" class=\"profile-img-edit mb-2\" />\n                <div>\n                  <input type=\"file\" @change=\"onFileChange\" class=\"form-control\" />\n                </div>\n              </div>\n  \n              <!-- Interfaz de Cropper -->\n              <div v-if=\"showCropper\" class=\"text-center mb-3\">\n                <!-- Contenedor fijo para el recorte -->\n                <div class=\"cropper-wrapper mx-auto\">\n                  <img ref=\"cropperImage\" :src=\"imagePreview\" alt=\"Recortar imagen\" class=\"img-fluid\" />\n                </div>\n                <div class=\"mt-2\">\n                  <button class=\"btn btn-success me-2\" @click=\"cropImage\">Recortar Imagen</button>\n                  <button class=\"btn btn-primary me-2\" @click=\"uploadWithoutCrop\">Subir sin recortar</button>\n                  <button class=\"btn btn-secondary\" @click=\"cancelCrop\">Cancelar</button>\n                </div>\n              </div>\n              <!-- Vista previa de nueva foto recortada -->\n              <div v-if=\"croppedImage\" class=\"text-center\">\n                <h6>Nueva Foto Previa</h6>\n                <img :src=\"croppedImage\" alt=\"Imagen recortada\" class=\"profile-img-edit mb-2\" />\n                <div>\n                  <button class=\"btn btn-primary\" @click=\"uploadProfilePicture\">Confirmar Foto</button>\n                </div>\n              </div>\n            </div>\n  \n            <!-- Formulario para actualizar datos -->\n            <form @submit.prevent=\"updateProfile\">\n              <div class=\"mb-3\">\n                <label for=\"name\" class=\"form-label\">Nombre</label>\n                <input id=\"name\" v-model=\"form.name\" type=\"text\" class=\"form-control\" placeholder=\"Ingresa tu nombre\" />\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"apellidos\" class=\"form-label\">Apellidos</label>\n                <input id=\"apellidos\" v-model=\"form.apellidos\" type=\"text\" class=\"form-control\" placeholder=\"Ingresa tus apellidos\" />\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"email\" class=\"form-label\">Email</label>\n                <!-- Usualmente el email se mantiene sin editar -->\n                <input id=\"email\" v-model=\"form.email\" type=\"email\" class=\"form-control\" placeholder=\"Ingresa tu email\" disabled />\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"phone\" class=\"form-label\">Teléfono</label>\n                <input id=\"phone\" v-model=\"form.phone\" type=\"tel\" class=\"form-control\" placeholder=\"Ingresa tu teléfono\" />\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"address\" class=\"form-label\">Dirección</label>\n                <textarea id=\"address\" v-model=\"form.address\" class=\"form-control\" placeholder=\"Ingresa tu dirección\"></textarea>\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"password\" class=\"form-label\">Contraseña</label>\n                <input id=\"password\" v-model=\"form.password\" type=\"password\" class=\"form-control\" placeholder=\"Ingresa tu nueva contraseña\" />\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary w-100\">Actualizar Perfil</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"@/plugins/axios\";\nimport defaultProfilePicture from \"@/assets/img/default-profile.jpg\";\nimport Cropper from \"cropperjs\";\nimport \"cropperjs/dist/cropper.css\";\nimport { ref, nextTick, onMounted } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { eventBus } from \"@/utils/eventBus\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  name: \"Profile\",\n  setup() {\n    const router = useRouter();\n    const store = useStore();\n\n    const user = ref(null);\n    // Inicializamos el formulario con valores vacíos\n    const form = ref({\n      name: \"\",\n      apellidos: \"\",\n      email: \"\",\n      phone: \"\",\n      address: \"\",\n      password: \"\",\n    });\n    const imagePreview = ref(null);\n    const showCropper = ref(false);\n    const selectedFile = ref(null);\n    const cropperInstance = ref(null);\n    const croppedImage = ref(null);\n    const successMessage = ref(\"\");\n    const errorMessage = ref(\"\");\n    const cropperImage = ref(null);\n    const showEdit = ref(false);\n\n    const fetchProfile = async () => {\n      try {\n        const response = await axios.get(\"/users/me\");\n        user.value = response.data;\n        // Se carga el formulario con los datos actuales (menos la contraseña)\n        form.value = { ...response.data, password: \"\" };\n      } catch (error) {\n        errorMessage.value = error.response?.data?.message || \"Error al cargar el perfil.\";\n      }\n    };\n\n    onMounted(() => {\n      fetchProfile();\n      // Escuchar actualizaciones globales para refrescar el perfil en tiempo real.\n      eventBus.on(\"profileUpdated\", (updatedUser) => {\n        user.value = updatedUser;\n        form.value = { ...updatedUser, password: \"\" };\n        localStorage.setItem(\"user\", JSON.stringify(updatedUser));\n      });\n    });\n\n    const toggleEdit = () => {\n      showEdit.value = !showEdit.value;\n      // Al activar la edición, se carga el formulario con los datos actuales.\n      form.value = { ...user.value, password: \"\" };\n    };\n\n    const onFileChange = (event) => {\n      const file = event.target.files[0];\n      if (file) {\n        selectedFile.value = file;\n        imagePreview.value = URL.createObjectURL(file);\n        showCropper.value = true;\n        nextTick(() => {\n          if (cropperImage.value) {\n            if (cropperInstance.value) {\n              cropperInstance.value.destroy();\n            }\n            cropperInstance.value = new Cropper(cropperImage.value, {\n              aspectRatio: 1,\n              viewMode: 1,\n              autoCropArea: 1,\n              responsive: true,\n              background: false,\n              minContainerWidth: 400,\n              minContainerHeight: 300,\n            });\n            console.log(\"Cropper inicializado tras cargar la imagen.\");\n          } else {\n            errorMessage.value = \"No se encontró la imagen para recortar.\";\n          }\n        });\n      }\n    };\n\n    const cropImage = () => {\n      if (cropperInstance.value) {\n        const canvas = cropperInstance.value.getCroppedCanvas({ width: 200, height: 200 });\n        croppedImage.value = canvas.toDataURL(\"image/jpeg\");\n        showCropper.value = false;\n        cropperInstance.value.destroy();\n        cropperInstance.value = null;\n        imagePreview.value = null;\n      }\n    };\n\n    const cancelCrop = () => {\n      showCropper.value = false;\n      imagePreview.value = null;\n      if (cropperInstance.value) {\n        cropperInstance.value.destroy();\n        cropperInstance.value = null;\n      }\n    };\n\n    const uploadWithoutCrop = () => {\n      if (selectedFile.value) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          const fileBase64 = e.target.result;\n          axios\n            .post(\"/users/profile-picture\", { profilePicture: fileBase64 })\n            .then((response) => {\n              user.value.profilePicture = response.data.profilePicture;\n              successMessage.value = \"¡Foto de perfil actualizada sin recorte!\";\n              errorMessage.value = \"\";\n              selectedFile.value = null;\n              showCropper.value = false;\n              croppedImage.value = null;\n            })\n            .catch((error) => {\n              errorMessage.value =\n                error.response?.data?.message || \"Error al subir la foto de perfil.\";\n              successMessage.value = \"\";\n            });\n        };\n        reader.readAsDataURL(selectedFile.value);\n      } else {\n        errorMessage.value = \"No se ha seleccionado ninguna imagen.\";\n      }\n    };\n\n    const uploadProfilePicture = async () => {\n      if (!croppedImage.value) {\n        errorMessage.value = \"Por favor, recorta la imagen o elige subir sin recortar.\";\n        return;\n      }\n      try {\n        const response = await axios.post(\"/users/profile-picture\", { profilePicture: croppedImage.value });\n        user.value.profilePicture = response.data.profilePicture;\n        successMessage.value = \"¡Foto de perfil actualizada!\";\n        errorMessage.value = \"\";\n        croppedImage.value = null;\n      } catch (error) {\n        errorMessage.value = error.response?.data?.message || \"Error al subir la foto de perfil.\";\n        successMessage.value = \"\";\n      }\n    };\n\n    const deleteProfilePicture = async () => {\n      try {\n        await axios.delete(\"/users/profile-picture\");\n        user.value.profilePicture = null;\n        successMessage.value = \"¡Foto de perfil eliminada!\";\n        errorMessage.value = \"\";\n      } catch (error) {\n        errorMessage.value = error.response?.data?.message || \"Error al eliminar la foto de perfil.\";\n        successMessage.value = \"\";\n      }\n    };\n\n    const updateProfile = async () => {\n      const payload = { ...form.value };\n      if (!payload.password) {\n        delete payload.password;\n      }\n      try {\n        const response = await axios.put(\"/users/me\", payload);\n        user.value = response.data.user;\n        store.commit(\"UPDATE_USER_DATA\", response.data);\n        eventBus.emit(\"profileUpdated\", response.data);\n        successMessage.value = \"¡Perfil actualizado exitosamente!\";\n        errorMessage.value = \"\";\n        // Reiniciar formulario con datos actualizados\n        form.value = { ...response.data.user, password: \"\" };\n      } catch (error) {\n        errorMessage.value = error.response?.data?.message || \"Error al actualizar el perfil.\";\n        successMessage.value = \"\";\n      }\n    };\n\n    const goToHome = () => {\n      router.push(\"/\");\n    };\n\n    return {\n      user,\n      form,\n      imagePreview,\n      showCropper,\n      selectedFile,\n      cropperImage,\n      croppedImage,\n      onFileChange,\n      cropImage,\n      cancelCrop,\n      uploadProfilePicture,\n      uploadWithoutCrop,\n      deleteProfilePicture,\n      updateProfile,\n      successMessage,\n      errorMessage,\n      goToHome,\n      defaultProfilePicture,\n      showEdit,\n      toggleEdit,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  max-width: 900px;\n}\n.profile-img {\n  width: 120px;\n  height: 120px;\n  object-fit: cover;\n  border-radius: 50%;\n  border: 2px solid #345896;\n}\n.profile-img-edit {\n  width: 120px;\n  height: 120px;\n  object-fit: cover;\n  border-radius: 50%;\n  border: 2px solid #345896;\n}\n.card {\n  border-radius: 0.5rem;\n}\n.card-header {\n  font-weight: bold;\n}\n.cropper-wrapper {\n  width: 400px;\n  height: 300px;\n  overflow: hidden;\n  margin: 0 auto;\n  position: relative;\n}\n.cropper-wrapper img {\n  display: block;\n  max-width: 100%;\n  max-height: 100%;\n  object-fit: contain;\n}\n.alert {\n  margin-bottom: 1rem;\n}\n.profile-details p {\n  margin-bottom: 0.5rem;\n  font-size: 16px;\n  font-weight: bold;\n  color: #333;\n}\n.form-label {\n  font-weight: bold;\n}\nbutton {\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\nbutton[type=\"submit\"] {\n  background: #345896;\n  color: white;\n}\nbutton:hover {\n  opacity: 0.8;\n}\n.profile-image-container {\n  position: relative;\n  display: inline-block;\n}\n.delete-btn {\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  border: none;\n  background: rgba(220, 53, 69, 0.8);\n  color: #fff;\n  padding: 2px 6px;\n  border-radius: 50%;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}