{"ast":null,"code":"import axios from \"@/plugins/axios\";\nimport defaultProfilePicture from \"@/assets/img/default-profile.jpg\";\nimport Cropper from \"cropperjs\";\nimport \"cropperjs/dist/cropper.css\";\nimport { ref, nextTick, onMounted } from \"vue\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  name: \"Profile\",\n  setup() {\n    const router = useRouter();\n    const user = ref(null);\n    const form = ref({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      address: \"\"\n    });\n    const imagePreview = ref(null);\n    const showCropper = ref(false);\n    const selectedFile = ref(null);\n    const cropperInstance = ref(null);\n    const croppedImage = ref(null);\n    const successMessage = ref(\"\");\n    const errorMessage = ref(\"\");\n    const cropperImage = ref(null);\n    const fetchProfile = async () => {\n      try {\n        const response = await axios.get(\"/users/me\");\n        user.value = response.data;\n        form.value.name = response.data.name || \"\";\n        form.value.email = response.data.email || \"\";\n        form.value.phone = response.data.phone || \"\";\n        form.value.address = response.data.address || \"\";\n      } catch (error) {\n        errorMessage.value = error.response?.data?.message || \"Error al cargar el perfil.\";\n      }\n    };\n    onMounted(() => {\n      fetchProfile();\n    });\n    const onFileChange = event => {\n      const file = event.target.files[0];\n      if (file) {\n        selectedFile.value = file;\n        imagePreview.value = URL.createObjectURL(file);\n        showCropper.value = true;\n        nextTick(() => {\n          if (cropperImage.value) {\n            if (cropperInstance.value) {\n              cropperInstance.value.destroy();\n            }\n            cropperInstance.value = new Cropper(cropperImage.value, {\n              aspectRatio: 1,\n              viewMode: 1,\n              autoCropArea: 1,\n              responsive: true,\n              background: false\n            });\n            console.log(\"Cropper inicializado tras cargar la imagen.\");\n          } else {\n            errorMessage.value = \"No se encontró la imagen para recortar.\";\n          }\n        });\n      }\n    };\n    const cropImage = () => {\n      if (cropperInstance.value) {\n        const canvas = cropperInstance.value.getCroppedCanvas({\n          width: 200,\n          height: 200\n        });\n        croppedImage.value = canvas.toDataURL(\"image/jpeg\");\n        showCropper.value = false;\n        cropperInstance.value.destroy();\n        cropperInstance.value = null;\n        imagePreview.value = null;\n      }\n    };\n    const cancelCrop = () => {\n      showCropper.value = false;\n      imagePreview.value = null;\n      if (cropperInstance.value) {\n        cropperInstance.value.destroy();\n        cropperInstance.value = null;\n      }\n    };\n    const uploadWithoutCrop = () => {\n      if (selectedFile.value) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          const fileBase64 = e.target.result;\n          axios.post(\"/users/profile-picture\", {\n            profilePicture: fileBase64\n          }).then(response => {\n            user.value.profilePicture = response.data.profilePicture;\n            successMessage.value = \"¡Foto de perfil actualizada exitosamente sin recorte!\";\n            errorMessage.value = \"\";\n            selectedFile.value = null;\n            showCropper.value = false;\n            croppedImage.value = null;\n          }).catch(error => {\n            errorMessage.value = error.response?.data?.message || \"Error al subir la foto de perfil.\";\n            successMessage.value = \"\";\n          });\n        };\n        reader.readAsDataURL(selectedFile.value);\n      } else {\n        errorMessage.value = \"No se ha seleccionado ninguna imagen.\";\n      }\n    };\n    const uploadProfilePicture = async () => {\n      if (!croppedImage.value) {\n        errorMessage.value = \"Por favor, recorta la imagen antes de subirla o elige subir sin recortar.\";\n        return;\n      }\n      try {\n        const response = await axios.post(\"/users/profile-picture\", {\n          profilePicture: croppedImage.value\n        });\n        user.value.profilePicture = response.data.profilePicture;\n        successMessage.value = \"¡Foto de perfil actualizada exitosamente!\";\n        errorMessage.value = \"\";\n        croppedImage.value = null;\n      } catch (error) {\n        errorMessage.value = error.response?.data?.message || \"Error al subir la foto de perfil.\";\n        successMessage.value = \"\";\n      }\n    };\n    const updateProfile = async () => {\n      try {\n        const response = await axios.put(\"/users/me\", form.value);\n        user.value = response.data;\n        successMessage.value = \"¡Perfil actualizado exitosamente!\";\n        errorMessage.value = \"\";\n      } catch (error) {\n        errorMessage.value = error.response?.data?.message || \"Error al actualizar el perfil.\";\n        successMessage.value = \"\";\n      }\n    };\n    const goToHome = () => {\n      router.push(\"/\");\n    };\n    return {\n      user,\n      form,\n      imagePreview,\n      showCropper,\n      selectedFile,\n      cropperImage,\n      croppedImage,\n      onFileChange,\n      cropImage,\n      cancelCrop,\n      uploadProfilePicture,\n      uploadWithoutCrop,\n      updateProfile,\n      successMessage,\n      errorMessage,\n      goToHome,\n      defaultProfilePicture\n    };\n  }\n};","map":{"version":3,"names":["axios","defaultProfilePicture","Cropper","ref","nextTick","onMounted","useRouter","name","setup","router","user","form","email","phone","address","imagePreview","showCropper","selectedFile","cropperInstance","croppedImage","successMessage","errorMessage","cropperImage","fetchProfile","response","get","value","data","error","message","onFileChange","event","file","target","files","URL","createObjectURL","destroy","aspectRatio","viewMode","autoCropArea","responsive","background","console","log","cropImage","canvas","getCroppedCanvas","width","height","toDataURL","cancelCrop","uploadWithoutCrop","reader","FileReader","onload","e","fileBase64","result","post","profilePicture","then","catch","readAsDataURL","uploadProfilePicture","updateProfile","put","goToHome","push"],"sources":["/Users/macbookpro/project/LatedServices/frontend/src/views/client/Profile.vue"],"sourcesContent":["<template>\n    <div class=\"container mt-5\">\n      <div class=\"row\">\n        <!-- Tarjeta de Foto de Perfil y Recorte -->\n        <div class=\"col-md-4\">\n          <div class=\"card mb-4\">\n            <div class=\"card-header text-center\">Foto de Perfil</div>\n            <div class=\"card-body text-center\">\n              <!-- Foto actual -->\n              <div class=\"profile-picture-wrapper mx-auto\">\n                <img\n                  :src=\"user?.profilePicture || defaultProfilePicture\"\n                  alt=\"Foto de Perfil\"\n                  class=\"img-thumbnail shadow\"\n                />\n              </div>\n              <!-- Selector de archivo -->\n              <div class=\"mt-3\">\n                <input type=\"file\" @change=\"onFileChange\" class=\"form-control\" />\n              </div>\n              <!-- Interfaz de Cropper -->\n              <div v-if=\"showCropper\" class=\"mt-3\">\n                <div class=\"mx-auto\" style=\"max-width: 400px;\">\n                  <img\n                    ref=\"cropperImage\"\n                    :src=\"imagePreview\"\n                    alt=\"Imagen a recortar\"\n                    style=\"max-width: 100%;\"\n                  />\n                </div>\n                <div class=\"mt-2\">\n                  <button class=\"btn btn-success me-2\" @click=\"cropImage\">\n                    Recortar Imagen\n                  </button>\n                  <button class=\"btn btn-primary me-2\" @click=\"uploadWithoutCrop\">\n                    Subir sin recortar\n                  </button>\n                  <button class=\"btn btn-secondary\" @click=\"cancelCrop\">\n                    Cancelar\n                  </button>\n                </div>\n              </div>\n              <!-- Preview de imagen recortada -->\n              <div v-if=\"croppedImage\" class=\"mt-3\">\n                <h5>Nueva Foto Recortada</h5>\n                <div class=\"profile-picture-wrapper mx-auto mb-3\">\n                  <img\n                    :src=\"croppedImage\"\n                    alt=\"Imagen recortada\"\n                    class=\"img-thumbnail shadow\"\n                  />\n                </div>\n                <button class=\"btn btn-primary\" @click=\"uploadProfilePicture\">\n                  Subir Foto\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Tarjeta de Detalles y Actualización del Perfil -->\n        <div class=\"col-md-8\">\n          <div class=\"card mb-4\">\n            <div class=\"card-header\">Detalles del Perfil</div>\n            <div class=\"card-body\">\n              <!-- Mensajes -->\n              <div v-if=\"successMessage\" class=\"alert alert-success\" role=\"alert\">\n                {{ successMessage }}\n              </div>\n              <div v-if=\"errorMessage\" class=\"alert alert-danger\" role=\"alert\">\n                {{ errorMessage }}\n              </div>\n              <!-- Información actual -->\n              <div class=\"mb-3\">\n                <p><strong>Nombre:</strong> {{ user?.name || 'No especificado' }}</p>\n                <p><strong>Email:</strong> {{ user?.email || 'No especificado' }}</p>\n                <p><strong>Teléfono:</strong> {{ user?.phone || 'No especificado' }}</p>\n                <p><strong>Dirección:</strong> {{ user?.address || 'No especificada' }}</p>\n              </div>\n              <!-- Formulario de actualización -->\n              <form @submit.prevent=\"updateProfile\">\n                <div class=\"form-group mb-3\">\n                  <label for=\"name\" class=\"form-label\">Nombre</label>\n                  <input\n                    id=\"name\"\n                    v-model=\"form.name\"\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"Ingresa tu nombre\"\n                    required\n                  />\n                </div>\n                <div class=\"form-group mb-3\">\n                  <label for=\"email\" class=\"form-label\">Email</label>\n                  <input\n                    id=\"email\"\n                    v-model=\"form.email\"\n                    type=\"email\"\n                    class=\"form-control\"\n                    placeholder=\"Ingresa tu email\"\n                    required\n                  />\n                </div>\n                <div class=\"form-group mb-3\">\n                  <label for=\"phone\" class=\"form-label\">Teléfono</label>\n                  <input\n                    id=\"phone\"\n                    v-model=\"form.phone\"\n                    type=\"tel\"\n                    class=\"form-control\"\n                    placeholder=\"Ingresa tu número de teléfono\"\n                  />\n                </div>\n                <div class=\"form-group mb-3\">\n                  <label for=\"address\" class=\"form-label\">Dirección</label>\n                  <textarea\n                    id=\"address\"\n                    v-model=\"form.address\"\n                    class=\"form-control\"\n                    placeholder=\"Ingresa tu dirección\"\n                  ></textarea>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary w-100\">\n                  Actualizar Perfil\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from \"@/plugins/axios\";\n  import defaultProfilePicture from \"@/assets/img/default-profile.jpg\";\n  import Cropper from \"cropperjs\";\n  import \"cropperjs/dist/cropper.css\";\n  import { ref, nextTick, onMounted } from \"vue\";\n  import { useRouter } from \"vue-router\";\n  \n  export default {\n    name: \"Profile\",\n    setup() {\n      const router = useRouter();\n      const user = ref(null);\n      const form = ref({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        address: \"\",\n      });\n      const imagePreview = ref(null);\n      const showCropper = ref(false);\n      const selectedFile = ref(null);\n      const cropperInstance = ref(null);\n      const croppedImage = ref(null);\n      const successMessage = ref(\"\");\n      const errorMessage = ref(\"\");\n      const cropperImage = ref(null);\n  \n      const fetchProfile = async () => {\n        try {\n          const response = await axios.get(\"/users/me\");\n          user.value = response.data;\n          form.value.name = response.data.name || \"\";\n          form.value.email = response.data.email || \"\";\n          form.value.phone = response.data.phone || \"\";\n          form.value.address = response.data.address || \"\";\n        } catch (error) {\n          errorMessage.value =\n            error.response?.data?.message || \"Error al cargar el perfil.\";\n        }\n      };\n  \n      onMounted(() => {\n        fetchProfile();\n      });\n  \n      const onFileChange = (event) => {\n        const file = event.target.files[0];\n        if (file) {\n          selectedFile.value = file;\n          imagePreview.value = URL.createObjectURL(file);\n          showCropper.value = true;\n          nextTick(() => {\n            if (cropperImage.value) {\n              if (cropperInstance.value) {\n                cropperInstance.value.destroy();\n              }\n              cropperInstance.value = new Cropper(cropperImage.value, {\n                aspectRatio: 1,\n                viewMode: 1,\n                autoCropArea: 1,\n                responsive: true,\n                background: false,\n              });\n              console.log(\"Cropper inicializado tras cargar la imagen.\");\n            } else {\n              errorMessage.value = \"No se encontró la imagen para recortar.\";\n            }\n          });\n        }\n      };\n  \n      const cropImage = () => {\n        if (cropperInstance.value) {\n          const canvas = cropperInstance.value.getCroppedCanvas({\n            width: 200,\n            height: 200,\n          });\n          croppedImage.value = canvas.toDataURL(\"image/jpeg\");\n          showCropper.value = false;\n          cropperInstance.value.destroy();\n          cropperInstance.value = null;\n          imagePreview.value = null;\n        }\n      };\n  \n      const cancelCrop = () => {\n        showCropper.value = false;\n        imagePreview.value = null;\n        if (cropperInstance.value) {\n          cropperInstance.value.destroy();\n          cropperInstance.value = null;\n        }\n      };\n  \n      const uploadWithoutCrop = () => {\n        if (selectedFile.value) {\n          const reader = new FileReader();\n          reader.onload = (e) => {\n            const fileBase64 = e.target.result;\n            axios\n              .post(\"/users/profile-picture\", { profilePicture: fileBase64 })\n              .then((response) => {\n                user.value.profilePicture = response.data.profilePicture;\n                successMessage.value =\n                  \"¡Foto de perfil actualizada exitosamente sin recorte!\";\n                errorMessage.value = \"\";\n                selectedFile.value = null;\n                showCropper.value = false;\n                croppedImage.value = null;\n              })\n              .catch((error) => {\n                errorMessage.value =\n                  error.response?.data?.message ||\n                  \"Error al subir la foto de perfil.\";\n                successMessage.value = \"\";\n              });\n          };\n          reader.readAsDataURL(selectedFile.value);\n        } else {\n          errorMessage.value = \"No se ha seleccionado ninguna imagen.\";\n        }\n      };\n  \n      const uploadProfilePicture = async () => {\n        if (!croppedImage.value) {\n          errorMessage.value =\n            \"Por favor, recorta la imagen antes de subirla o elige subir sin recortar.\";\n          return;\n        }\n        try {\n          const response = await axios.post(\"/users/profile-picture\", {\n            profilePicture: croppedImage.value,\n          });\n          user.value.profilePicture = response.data.profilePicture;\n          successMessage.value = \"¡Foto de perfil actualizada exitosamente!\";\n          errorMessage.value = \"\";\n          croppedImage.value = null;\n        } catch (error) {\n          errorMessage.value =\n            error.response?.data?.message ||\n            \"Error al subir la foto de perfil.\";\n          successMessage.value = \"\";\n        }\n      };\n  \n      const updateProfile = async () => {\n        try {\n          const response = await axios.put(\"/users/me\", form.value);\n          user.value = response.data;\n          successMessage.value = \"¡Perfil actualizado exitosamente!\";\n          errorMessage.value = \"\";\n        } catch (error) {\n          errorMessage.value =\n            error.response?.data?.message ||\n            \"Error al actualizar el perfil.\";\n          successMessage.value = \"\";\n        }\n      };\n  \n      const goToHome = () => {\n        router.push(\"/\");\n      };\n  \n      return {\n        user,\n        form,\n        imagePreview,\n        showCropper,\n        selectedFile,\n        cropperImage,\n        croppedImage,\n        onFileChange,\n        cropImage,\n        cancelCrop,\n        uploadProfilePicture,\n        uploadWithoutCrop,\n        updateProfile,\n        successMessage,\n        errorMessage,\n        goToHome,\n        defaultProfilePicture,\n      };\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .container {\n    max-width: 800px;\n  }\n  .profile-picture-wrapper {\n    width: 200px;\n    height: 200px;\n    overflow: hidden;\n    border-radius: 50%;\n    margin: 0 auto;\n  }\n  .img-thumbnail {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n  .card {\n    border-radius: 0.5rem;\n  }\n  .card-header {\n    font-size: 1.25rem;\n    font-weight: bold;\n    background-color: #007bff;\n    color: #fff;\n  }\n  .alert {\n    margin-bottom: 1rem;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}