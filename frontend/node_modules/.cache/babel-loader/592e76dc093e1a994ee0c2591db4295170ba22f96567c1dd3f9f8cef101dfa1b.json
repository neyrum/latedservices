{"ast":null,"code":"import axios from \"@/plugins/axios\";\nimport { ref, onMounted, nextTick } from \"vue\";\nimport Cropper from \"cropperjs\";\nimport \"cropperjs/dist/cropper.css\";\nexport default {\n  name: \"Profile\",\n  setup() {\n    const cropperImage = ref(null);\n    const user = ref(null);\n    const form = ref({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      address: \"\"\n    });\n    const croppedImage = ref(null);\n    const cropperInstance = ref(null);\n    const successMessage = ref(\"\");\n    const errorMessage = ref(\"\");\n    onMounted(async () => {\n      await fetchProfile();\n      nextTick(() => {\n        if (cropperImage.value && cropperImage.value.tagName === \"IMG\") {\n          cropperInstance.value = new Cropper(cropperImage.value, {\n            aspectRatio: 1,\n            viewMode: 2\n          });\n          console.log(\"Cropper inicializado correctamente.\");\n        } else {\n          console.error(\"Elemento <img> no encontrado para Cropper.\");\n        }\n      });\n    });\n    const fetchProfile = async () => {\n      try {\n        const response = await axios.get(\"/users/me\");\n        user.value = response.data;\n        form.value = {\n          ...response.data\n        };\n      } catch (error) {\n        errorMessage.value = error.response?.data?.message || \"Error al cargar el perfil.\";\n      }\n    };\n    const onFileChange = event => {\n      const file = event.target.files[0];\n      if (file) {\n        const imageElement = cropperImage.value;\n        if (imageElement) {\n          cropperInstance.value = new Cropper(imageElement, {\n            aspectRatio: 1,\n            viewMode: 2,\n            responsive: true,\n            autoCropArea: 1\n          });\n          console.log(\"Cropper inicializado tras cargar imagen.\");\n        } else {\n          console.error(\"Elemento <img> no encontrado.\");\n        }\n      }\n    };\n    const updateProfile = async () => {\n      try {\n        const response = await axios.put(\"/users/me\", form.value);\n        user.value = response.data;\n        successMessage.value = \"¡Perfil actualizado exitosamente!\";\n      } catch (error) {\n        errorMessage.value = error.response?.data?.message || \"Error al actualizar el perfil.\";\n      }\n    };\n    return {\n      user,\n      form,\n      cropperImage,\n      croppedImage,\n      fetchProfile,\n      onFileChange,\n      updateProfile,\n      successMessage,\n      errorMessage\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","onMounted","nextTick","Cropper","name","setup","cropperImage","user","form","email","phone","address","croppedImage","cropperInstance","successMessage","errorMessage","fetchProfile","value","tagName","aspectRatio","viewMode","console","log","error","response","get","data","message","onFileChange","event","file","target","files","imageElement","responsive","autoCropArea","updateProfile","put"],"sources":["/Users/macbookpro/project/LatedServices/frontend/src/views/client/Profile.vue"],"sourcesContent":["<template>\n    <div class=\"container mt-5\">\n      <div class=\"row justify-content-center\">\n        <div class=\"col-md-8\">\n          <!-- Tarjeta del perfil -->\n          <div class=\"card shadow-lg\">\n            <div class=\"card-header bg-primary text-white text-center d-flex align-items-center justify-content-between\">\n              <i class=\"bi bi-arrow-left-circle fs-4\" @click=\"goToHome\" style=\"cursor: pointer;\"></i>\n              <h3 class=\"m-0 flex-grow-1 text-center\">Perfil de Usuario</h3>\n            </div>\n            <div class=\"card-body\">\n              <!-- Mensajes de éxito y error -->\n              <div v-if=\"successMessage\" class=\"alert alert-success d-flex align-items-center\" role=\"alert\">\n                <i class=\"bi bi-check-circle-fill me-2\"></i>\n                {{ successMessage }}\n              </div>\n              <div v-if=\"errorMessage\" class=\"alert alert-danger d-flex align-items-center\" role=\"alert\">\n                <i class=\"bi bi-exclamation-triangle-fill me-2\"></i>\n                {{ errorMessage }}\n              </div>\n  \n              <!-- Foto de perfil con Cropper -->\n              <div class=\"text-center mb-4\">\n                <div class=\"profile-picture-wrapper\">\n                  <img ref=\"cropperImage\"\n                    :src=\"user?.profilePicture || defaultProfilePicture\"\n                    alt=\"Foto de Perfil\"\n                    class=\"img-thumbnail shadow\"\n                  />\n                </div>\n                <form @submit.prevent=\"uploadProfilePicture\" class=\"mt-3\">\n                  <div class=\"form-group\">\n                    <input type=\"file\" id=\"profilePicture\" @change=\"onFileChange\" class=\"form-control\" />\n                  </div>\n                  <button type=\"submit\" class=\"btn btn-sm mt-2 btn-primary\" :disabled=\"!croppedImage\">\n                    Cambiar Imagen\n                  </button>\n                </form>\n              </div>\n  \n              <!-- Detalles del perfil -->\n              <div class=\"profile-details mb-4\">\n                <h4>Detalles del Perfil</h4>\n                <p><strong>Nombre:</strong> {{ displayValue(user?.name) }}</p>\n                <p><strong>Email:</strong> {{ displayValue(user?.email) }}</p>\n                <p><strong>Teléfono:</strong> {{ displayValue(user?.phone) }}</p>\n                <p><strong>Dirección:</strong> {{ displayValue(user?.address, 'No especificada') }}</p>\n              </div>\n  \n              <!-- Formulario de actualización -->\n              <form @submit.prevent=\"updateProfile\">\n                <div class=\"form-group mb-3\">\n                  <label for=\"name\" class=\"form-label\">Nombre</label>\n                  <input id=\"name\" v-model=\"form.name\" type=\"text\" class=\"form-control\" placeholder=\"Ingresa tu nombre\" required />\n                </div>\n                <div class=\"form-group mb-3\">\n                  <label for=\"email\" class=\"form-label\">Email</label>\n                  <input id=\"email\" v-model=\"form.email\" type=\"email\" class=\"form-control\" placeholder=\"Ingresa tu email\" required />\n                </div>\n                <div class=\"form-group mb-3\">\n                  <label for=\"phone\" class=\"form-label\">Teléfono</label>\n                  <input id=\"phone\" v-model=\"form.phone\" type=\"tel\" class=\"form-control\" placeholder=\"Ingresa tu número de teléfono\" />\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary w-100\">Actualizar Perfil</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from \"@/plugins/axios\";\n  import { ref, onMounted, nextTick } from \"vue\";\n  import Cropper from \"cropperjs\";\n  import \"cropperjs/dist/cropper.css\";\n  \n  export default {\n    name: \"Profile\",\n    setup() {\n      const cropperImage = ref(null);\n      const user = ref(null);\n      const form = ref({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        address: \"\",\n      });\n      const croppedImage = ref(null);\n      const cropperInstance = ref(null);\n      const successMessage = ref(\"\");\n      const errorMessage = ref(\"\");\n  \n      onMounted(async () => {\n        await fetchProfile();\n        nextTick(() => {\n          if (cropperImage.value && cropperImage.value.tagName === \"IMG\") {\n            cropperInstance.value = new Cropper(cropperImage.value, {\n              aspectRatio: 1,\n              viewMode: 2,\n            });\n            console.log(\"Cropper inicializado correctamente.\");\n          } else {\n            console.error(\"Elemento <img> no encontrado para Cropper.\");\n          }\n        });\n      });\n  \n      const fetchProfile = async () => {\n        try {\n          const response = await axios.get(\"/users/me\");\n          user.value = response.data;\n          form.value = { ...response.data };\n        } catch (error) {\n          errorMessage.value = error.response?.data?.message || \"Error al cargar el perfil.\";\n        }\n      };\n  \n      const onFileChange = (event) => {\n        const file = event.target.files[0];\n        if (file) {\n          const imageElement = cropperImage.value;\n          if (imageElement) {\n            cropperInstance.value = new Cropper(imageElement, {\n              aspectRatio: 1,\n              viewMode: 2,\n              responsive: true,\n              autoCropArea: 1,\n            });\n            console.log(\"Cropper inicializado tras cargar imagen.\");\n          } else {\n            console.error(\"Elemento <img> no encontrado.\");\n          }\n        }\n      };\n  \n      const updateProfile = async () => {\n        try {\n          const response = await axios.put(\"/users/me\", form.value);\n          user.value = response.data;\n          successMessage.value = \"¡Perfil actualizado exitosamente!\";\n        } catch (error) {\n          errorMessage.value = error.response?.data?.message || \"Error al actualizar el perfil.\";\n        }\n      };\n  \n      return { user, form, cropperImage, croppedImage, fetchProfile, onFileChange, updateProfile, successMessage, errorMessage };\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .container {\n    max-width: 800px;\n  }\n  .profile-picture-wrapper {\n    width: 200px;\n    height: 200px;\n    overflow: hidden;\n    border-radius: 50%;\n  }\n  .img-thumbnail {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n  .profile-details {\n    margin-top: 20px;\n    padding: 15px;\n    background-color: #f9f9f9;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}