{"ast":null,"code":"import axios from \"@/plugins/axios\";\nimport defaultProfilePicture from \"@/assets/img/default-profile.jpg\";\nimport Cropper from \"cropperjs\";\nimport \"cropperjs/dist/cropper.css\";\nimport { ref, nextTick, onMounted } from \"vue\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  name: \"Profile\",\n  setup() {\n    const router = useRouter();\n    const user = ref(null);\n    const form = ref({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      address: \"\"\n    });\n    const imagePreview = ref(null);\n    const showCropper = ref(false);\n    const cropperInstance = ref(null);\n    const croppedImage = ref(null);\n    const successMessage = ref(\"\");\n    const errorMessage = ref(\"\");\n    const cropperImage = ref(null);\n    const fetchProfile = async () => {\n      try {\n        const response = await axios.get(\"/users/me\");\n        user.value = response.data;\n        // Actualiza el formulario con los datos del usuario\n        form.value.name = response.data.name || \"\";\n        form.value.email = response.data.email || \"\";\n        form.value.phone = response.data.phone || \"\";\n        form.value.address = response.data.address || \"\";\n      } catch (error) {\n        errorMessage.value = error.response?.data?.message || \"Error al cargar el perfil.\";\n      }\n    };\n    onMounted(() => {\n      fetchProfile();\n    });\n    const onFileChange = event => {\n      const file = event.target.files[0];\n      if (file) {\n        imagePreview.value = URL.createObjectURL(file);\n        showCropper.value = true;\n        nextTick(() => {\n          if (cropperImage.value) {\n            // Destruye instancia previa si existe\n            if (cropperInstance.value) {\n              cropperInstance.value.destroy();\n            }\n            cropperInstance.value = new Cropper(cropperImage.value, {\n              aspectRatio: 1,\n              viewMode: 1,\n              autoCropArea: 1,\n              responsive: true,\n              background: false\n            });\n            console.log(\"Cropper inicializado tras cargar la imagen.\");\n          } else {\n            errorMessage.value = \"No se encontró la imagen para recortar.\";\n          }\n        });\n      }\n    };\n    const cropImage = () => {\n      if (cropperInstance.value) {\n        const canvas = cropperInstance.value.getCroppedCanvas({\n          width: 200,\n          height: 200\n        });\n        croppedImage.value = canvas.toDataURL(\"image/jpeg\");\n        showCropper.value = false;\n        // Destruye la instancia de Cropper luego de recortar\n        cropperInstance.value.destroy();\n        cropperInstance.value = null;\n        imagePreview.value = null;\n      }\n    };\n    const cancelCrop = () => {\n      showCropper.value = false;\n      imagePreview.value = null;\n      if (cropperInstance.value) {\n        cropperInstance.value.destroy();\n        cropperInstance.value = null;\n      }\n    };\n    const uploadProfilePicture = async () => {\n      if (!croppedImage.value) {\n        errorMessage.value = \"Por favor recorta una imagen antes de subirla.\";\n        return;\n      }\n      try {\n        const response = await axios.post(\"/users/profile-picture\", {\n          profilePicture: croppedImage.value\n        });\n        // Actualiza la foto de perfil con la respuesta del backend\n        user.value.profilePicture = response.data.profilePicture;\n        successMessage.value = \"¡Foto de perfil actualizada exitosamente!\";\n        errorMessage.value = \"\";\n        croppedImage.value = null;\n      } catch (error) {\n        errorMessage.value = error.response?.data?.message || \"Error al subir la foto de perfil.\";\n        successMessage.value = \"\";\n      }\n    };\n    const updateProfile = async () => {\n      try {\n        const response = await axios.put(\"/users/me\", form.value);\n        user.value = response.data;\n        successMessage.value = \"¡Perfil actualizado exitosamente!\";\n        errorMessage.value = \"\";\n      } catch (error) {\n        errorMessage.value = error.response?.data?.message || \"Error al actualizar el perfil.\";\n        successMessage.value = \"\";\n      }\n    };\n    const goToHome = () => {\n      router.push(\"/\");\n    };\n    return {\n      user,\n      form,\n      imagePreview,\n      showCropper,\n      cropperImage,\n      croppedImage,\n      onFileChange,\n      cropImage,\n      cancelCrop,\n      uploadProfilePicture,\n      updateProfile,\n      successMessage,\n      errorMessage,\n      goToHome,\n      defaultProfilePicture\n    };\n  }\n};","map":{"version":3,"names":["axios","defaultProfilePicture","Cropper","ref","nextTick","onMounted","useRouter","name","setup","router","user","form","email","phone","address","imagePreview","showCropper","cropperInstance","croppedImage","successMessage","errorMessage","cropperImage","fetchProfile","response","get","value","data","error","message","onFileChange","event","file","target","files","URL","createObjectURL","destroy","aspectRatio","viewMode","autoCropArea","responsive","background","console","log","cropImage","canvas","getCroppedCanvas","width","height","toDataURL","cancelCrop","uploadProfilePicture","post","profilePicture","updateProfile","put","goToHome","push"],"sources":["/Users/macbookpro/project/LatedServices/frontend/src/views/client/Profile.vue"],"sourcesContent":["<template>\n    <div class=\"container mt-5\">\n      <div class=\"row justify-content-center\">\n        <div class=\"col-md-10\">\n          <!-- Tarjeta del perfil -->\n          <div class=\"card shadow-lg\">\n            <div class=\"card-header bg-primary text-white text-center d-flex align-items-center justify-content-between\">\n              <i class=\"bi bi-arrow-left-circle fs-4\" @click=\"goToHome\" style=\"cursor: pointer;\"></i>\n              <h3 class=\"m-0 flex-grow-1 text-center\">Perfil de Usuario</h3>\n            </div>\n            <div class=\"card-body\">\n              <!-- Mensajes de éxito y error -->\n              <div v-if=\"successMessage\" class=\"alert alert-success d-flex align-items-center\" role=\"alert\">\n                <i class=\"bi bi-check-circle-fill me-2\"></i>\n                {{ successMessage }}\n              </div>\n              <div v-if=\"errorMessage\" class=\"alert alert-danger d-flex align-items-center\" role=\"alert\">\n                <i class=\"bi bi-exclamation-triangle-fill me-2\"></i>\n                {{ errorMessage }}\n              </div>\n  \n              <!-- Sección para la foto de perfil / recorte -->\n              <div v-if=\"!showCropper\" class=\"text-center mb-4\">\n                <div class=\"profile-picture-wrapper mx-auto\">\n                  <img\n                    :src=\"user && user.profilePicture ? user.profilePicture : defaultProfilePicture\"\n                    alt=\"Foto de Perfil\"\n                    class=\"img-thumbnail shadow\"\n                  />\n                </div>\n                <div class=\"mt-3\">\n                  <input type=\"file\" @change=\"onFileChange\" class=\"form-control\" />\n                </div>\n              </div>\n  \n              <!-- Interfaz de cropper: se muestra cuando se selecciona un archivo -->\n              <div v-if=\"showCropper\" class=\"text-center mb-4\">\n                <div class=\"mx-auto\" style=\"max-width: 400px;\">\n                  <img ref=\"cropperImage\" :src=\"imagePreview\" alt=\"Imagen a recortar\" style=\"max-width: 100%;\" />\n                </div>\n                <div class=\"mt-3\">\n                  <button class=\"btn btn-success me-2\" @click=\"cropImage\">Recortar Imagen</button>\n                  <button class=\"btn btn-secondary\" @click=\"cancelCrop\">Cancelar</button>\n                </div>\n              </div>\n  \n              <!-- Mostrar la imagen recortada y botón para subirla -->\n              <div v-if=\"croppedImage\" class=\"text-center mt-4\">\n                <h5>Nueva Foto Recortada</h5>\n                <div class=\"profile-picture-wrapper mx-auto mb-3\">\n                  <img :src=\"croppedImage\" alt=\"Imagen recortada\" class=\"img-thumbnail shadow\" />\n                </div>\n                <button class=\"btn btn-primary\" @click=\"uploadProfilePicture\">Subir Foto de Perfil</button>\n              </div>\n  \n              <!-- Detalles del perfil -->\n              <div class=\"profile-details mb-4\">\n                <h4>Detalles del Perfil</h4>\n                <p><strong>Nombre:</strong> {{ user?.name || 'No especificado' }}</p>\n                <p><strong>Email:</strong> {{ user?.email || 'No especificado' }}</p>\n                <p><strong>Teléfono:</strong> {{ user?.phone || 'No especificado' }}</p>\n                <p><strong>Dirección:</strong> {{ user?.address || 'No especificada' }}</p>\n              </div>\n              \n              <!-- Formulario de actualización de perfil -->\n              <form @submit.prevent=\"updateProfile\">\n                <div class=\"form-group mb-3\">\n                  <label for=\"name\" class=\"form-label\">Nombre</label>\n                  <input id=\"name\" v-model=\"form.name\" type=\"text\" class=\"form-control\" placeholder=\"Ingresa tu nombre\" required />\n                </div>\n                <div class=\"form-group mb-3\">\n                  <label for=\"email\" class=\"form-label\">Email</label>\n                  <input id=\"email\" v-model=\"form.email\" type=\"email\" class=\"form-control\" placeholder=\"Ingresa tu email\" required />\n                </div>\n                <div class=\"form-group mb-3\">\n                  <label for=\"phone\" class=\"form-label\">Teléfono</label>\n                  <input id=\"phone\" v-model=\"form.phone\" type=\"tel\" class=\"form-control\" placeholder=\"Ingresa tu número de teléfono\" />\n                </div>\n                <div class=\"form-group mb-3\">\n                  <label for=\"address\" class=\"form-label\">Dirección</label>\n                  <textarea id=\"address\" v-model=\"form.address\" class=\"form-control\" placeholder=\"Ingresa tu dirección\"></textarea>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary w-100\">Actualizar Perfil</button>\n              </form>\n              \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from \"@/plugins/axios\";\n  import defaultProfilePicture from \"@/assets/img/default-profile.jpg\";\n  import Cropper from \"cropperjs\";\n  import \"cropperjs/dist/cropper.css\";\n  import { ref, nextTick, onMounted } from \"vue\";\n  import { useRouter } from \"vue-router\";\n  \n  export default {\n    name: \"Profile\",\n    setup() {\n      const router = useRouter();\n      const user = ref(null);\n      const form = ref({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        address: \"\"\n      });\n      const imagePreview = ref(null);\n      const showCropper = ref(false);\n      const cropperInstance = ref(null);\n      const croppedImage = ref(null);\n      const successMessage = ref(\"\");\n      const errorMessage = ref(\"\");\n      const cropperImage = ref(null);\n  \n      const fetchProfile = async () => {\n        try {\n          const response = await axios.get(\"/users/me\");\n          user.value = response.data;\n          // Actualiza el formulario con los datos del usuario\n          form.value.name = response.data.name || \"\";\n          form.value.email = response.data.email || \"\";\n          form.value.phone = response.data.phone || \"\";\n          form.value.address = response.data.address || \"\";\n        } catch (error) {\n          errorMessage.value = error.response?.data?.message || \"Error al cargar el perfil.\";\n        }\n      };\n  \n      onMounted(() => {\n        fetchProfile();\n      });\n  \n      const onFileChange = (event) => {\n        const file = event.target.files[0];\n        if (file) {\n          imagePreview.value = URL.createObjectURL(file);\n          showCropper.value = true;\n          nextTick(() => {\n            if (cropperImage.value) {\n              // Destruye instancia previa si existe\n              if (cropperInstance.value) {\n                cropperInstance.value.destroy();\n              }\n              cropperInstance.value = new Cropper(cropperImage.value, {\n                aspectRatio: 1,\n                viewMode: 1,\n                autoCropArea: 1,\n                responsive: true,\n                background: false,\n              });\n              console.log(\"Cropper inicializado tras cargar la imagen.\");\n            } else {\n              errorMessage.value = \"No se encontró la imagen para recortar.\";\n            }\n          });\n        }\n      };\n  \n      const cropImage = () => {\n        if (cropperInstance.value) {\n          const canvas = cropperInstance.value.getCroppedCanvas({\n            width: 200,\n            height: 200,\n          });\n          croppedImage.value = canvas.toDataURL(\"image/jpeg\");\n          showCropper.value = false;\n          // Destruye la instancia de Cropper luego de recortar\n          cropperInstance.value.destroy();\n          cropperInstance.value = null;\n          imagePreview.value = null;\n        }\n      };\n  \n      const cancelCrop = () => {\n        showCropper.value = false;\n        imagePreview.value = null;\n        if (cropperInstance.value) {\n          cropperInstance.value.destroy();\n          cropperInstance.value = null;\n        }\n      };\n  \n      const uploadProfilePicture = async () => {\n        if (!croppedImage.value) {\n          errorMessage.value = \"Por favor recorta una imagen antes de subirla.\";\n          return;\n        }\n        try {\n          const response = await axios.post(\"/users/profile-picture\", {\n            profilePicture: croppedImage.value,\n          });\n          // Actualiza la foto de perfil con la respuesta del backend\n          user.value.profilePicture = response.data.profilePicture;\n          successMessage.value = \"¡Foto de perfil actualizada exitosamente!\";\n          errorMessage.value = \"\";\n          croppedImage.value = null;\n        } catch (error) {\n          errorMessage.value = error.response?.data?.message || \"Error al subir la foto de perfil.\";\n          successMessage.value = \"\";\n        }\n      };\n  \n      const updateProfile = async () => {\n        try {\n          const response = await axios.put(\"/users/me\", form.value);\n          user.value = response.data;\n          successMessage.value = \"¡Perfil actualizado exitosamente!\";\n          errorMessage.value = \"\";\n        } catch (error) {\n          errorMessage.value = error.response?.data?.message || \"Error al actualizar el perfil.\";\n          successMessage.value = \"\";\n        }\n      };\n  \n      const goToHome = () => {\n        router.push(\"/\");\n      };\n  \n      return {\n        user,\n        form,\n        imagePreview,\n        showCropper,\n        cropperImage,\n        croppedImage,\n        onFileChange,\n        cropImage,\n        cancelCrop,\n        uploadProfilePicture,\n        updateProfile,\n        successMessage,\n        errorMessage,\n        goToHome,\n        defaultProfilePicture,\n      };\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .container {\n    max-width: 800px;\n  }\n  .profile-picture-wrapper {\n    width: 200px;\n    height: 200px;\n    overflow: hidden;\n    border-radius: 50%;\n    margin: 0 auto;\n  }\n  .img-thumbnail {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n  .profile-details {\n    margin-top: 20px;\n    padding: 15px;\n    background-color: #f9f9f9;\n    border-radius: 5px;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}