{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"table table-striped\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"h3\", {\n    class: \"dashboard-title\"\n  }, \"Solicitudes Pendientes\", -1 /* HOISTED */)), _createElementVNode(\"table\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"#\"), _createElementVNode(\"th\", null, \"Cliente\"), _createElementVNode(\"th\", null, \"Servicio\"), _createElementVNode(\"th\", null, \"Estado\"), _createElementVNode(\"th\", null, \"Fecha Preferida\"), _createElementVNode(\"th\", null, \"Acciones\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.requests, request => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: request.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(request.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(request.client?.name || 'Sin asignar'), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(request.service?.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(request.status), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(request.preferredDate), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: \"btn btn-success btn-sm\",\n      onClick: $event => $options.updateRequestStatus(request.id, 'aprobado')\n    }, \"Aprobar\", 8 /* PROPS */, _hoisted_2), _createElementVNode(\"button\", {\n      class: \"btn btn-danger btn-sm\",\n      onClick: $event => $options.updateRequestStatus(request.id, 'rechazado')\n    }, \"Rechazar\", 8 /* PROPS */, _hoisted_3)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_hoisted_1","_Fragment","_renderList","$data","requests","request","key","id","_toDisplayString","client","name","service","status","preferredDate","onClick","$event","$options","updateRequestStatus","_hoisted_2","_hoisted_3"],"sources":["/home/lated/LatedServices/frontend/src/views/admin/AdminRequests.vue"],"sourcesContent":["<template>\n  <div>\n    <h3 class=\"dashboard-title\">Solicitudes Pendientes</h3>\n    \n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>Cliente</th>\n          <th>Servicio</th>\n          <th>Estado</th>\n          <th>Fecha Preferida</th>\n          <th>Acciones</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"request in requests\" :key=\"request.id\">\n          <td>{{ request.id }}</td>\n          <td>{{ request.client?.name || 'Sin asignar' }}</td>\n          <td>{{ request.service?.name }}</td>\n          <td>{{ request.status }}</td>\n          <td>{{ request.preferredDate }}</td>\n          <td>\n            <button class=\"btn btn-success btn-sm\" @click=\"updateRequestStatus(request.id, 'aprobado')\">Aprobar</button>\n            <button class=\"btn btn-danger btn-sm\" @click=\"updateRequestStatus(request.id, 'rechazado')\">Rechazar</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from \"@/plugins/axios\";\n\nexport default {\n  name: \"AdminRequests\",\n  data() {\n    return {\n      requests: [],\n      isLoading: false,\n      errorMessage: \"\",\n    };\n  },\n  async created() {\n    await this.fetchRequests();\n  },\n  methods: {\n    async fetchRequests() {\n      this.isLoading = true;\n      try {\n        const response = await axios.get(\"/requests\", {\n          headers: { Authorization: `Bearer ${this.$store.getters[\"auth/token\"]}` }\n        });\n        this.requests = response.data;\n      } catch (error) {\n        this.errorMessage = error.response?.data?.message || \"Error al cargar las solicitudes.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async updateRequestStatus(requestId, newStatus) {\n      try {\n        await axios.put(`/requests/${requestId}`, { status: newStatus }, {\n          headers: { Authorization: `Bearer ${this.$store.getters[\"auth/token\"]}` }\n        });\n        this.fetchRequests(); // Recargar solicitudes\n      } catch (error) {\n        console.error(\"Error al actualizar solicitud:\", error.response);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.dashboard-title {\n  font-size: 22px;\n  font-weight: bold;\n  margin-bottom: 15px;\n}\n.table {\n  width: 100%;\n  margin-top: 20px;\n}\n.btn-sm {\n  margin-right: 5px;\n}\n</style>\n"],"mappings":";;EAIWA,KAAK,EAAC;AAAqB;mBAJtC;mBAAA;;uBACEC,mBAAA,CA4BM,c,0BA3BJC,mBAAA,CAAuD;IAAnDF,KAAK,EAAC;EAAiB,GAAC,wBAAsB,sBAElDE,mBAAA,CAwBQ,SAxBRC,UAwBQ,G,0BAvBND,mBAAA,CASQ,gBARNA,mBAAA,CAOK,aANHA,mBAAA,CAAU,YAAN,GAAC,GACLA,mBAAA,CAAgB,YAAZ,SAAO,GACXA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAwB,YAApB,iBAAe,GACnBA,mBAAA,CAAiB,YAAb,UAAQ,E,wBAGhBA,mBAAA,CAYQ,iB,kBAXND,mBAAA,CAUKG,SAAA,QA1BbC,WAAA,CAgB8BC,KAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAlBP,mBAAA,CAUK;MAV4BQ,GAAG,EAAED,OAAO,CAACE;QAC5CR,mBAAA,CAAyB,YAAAS,gBAAA,CAAlBH,OAAO,CAACE,EAAE,kBACjBR,mBAAA,CAAoD,YAAAS,gBAAA,CAA7CH,OAAO,CAACI,MAAM,EAAEC,IAAI,mCAC3BX,mBAAA,CAAoC,YAAAS,gBAAA,CAA7BH,OAAO,CAACM,OAAO,EAAED,IAAI,kBAC5BX,mBAAA,CAA6B,YAAAS,gBAAA,CAAtBH,OAAO,CAACO,MAAM,kBACrBb,mBAAA,CAAoC,YAAAS,gBAAA,CAA7BH,OAAO,CAACQ,aAAa,kBAC5Bd,mBAAA,CAGK,aAFHA,mBAAA,CAA4G;MAApGF,KAAK,EAAC,wBAAwB;MAAEiB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,mBAAmB,CAACZ,OAAO,CAACE,EAAE;OAAe,SAAO,iBAvB/GW,UAAA,GAwBYnB,mBAAA,CAA6G;MAArGF,KAAK,EAAC,uBAAuB;MAAEiB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,mBAAmB,CAACZ,OAAO,CAACE,EAAE;OAAgB,UAAQ,iBAxBhHY,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}