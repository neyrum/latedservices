{"ast":null,"code":"import axios from \"@/plugins/axios\";\nexport default {\n  name: \"AdminRequests\",\n  data() {\n    return {\n      requests: [],\n      isLoading: false,\n      errorMessage: \"\"\n    };\n  },\n  async created() {\n    await this.fetchRequests();\n  },\n  methods: {\n    async fetchRequests() {\n      this.isLoading = true;\n      try {\n        const response = await axios.get(\"/requests\", {\n          headers: {\n            Authorization: `Bearer ${this.$store.getters[\"auth/token\"]}`\n          }\n        });\n        this.requests = response.data;\n      } catch (error) {\n        this.errorMessage = error.response?.data?.message || \"Error al cargar las solicitudes.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async updateRequestStatus(requestId, newStatus) {\n      try {\n        await axios.put(`/requests/${requestId}`, {\n          status: newStatus\n        }, {\n          headers: {\n            Authorization: `Bearer ${this.$store.getters[\"auth/token\"]}`\n          }\n        });\n        this.fetchRequests(); // Recargar solicitudes\n      } catch (error) {\n        console.error(\"Error al actualizar solicitud:\", error.response);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","requests","isLoading","errorMessage","created","fetchRequests","methods","response","get","headers","Authorization","$store","getters","error","message","updateRequestStatus","requestId","newStatus","put","status","console"],"sources":["/home/lated/LatedServices/frontend/src/views/admin/AdminRequests.vue"],"sourcesContent":["<template>\n  <div>\n    <h3 class=\"dashboard-title\">Solicitudes Pendientes</h3>\n    \n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>Cliente</th>\n          <th>Servicio</th>\n          <th>Estado</th>\n          <th>Fecha Preferida</th>\n          <th>Acciones</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"request in requests\" :key=\"request.id\">\n          <td>{{ request.id }}</td>\n          <td>{{ request.client?.name || 'Sin asignar' }}</td>\n          <td>{{ request.service?.name }}</td>\n          <td>{{ request.status }}</td>\n          <td>{{ request.preferredDate }}</td>\n          <td>\n            <button class=\"btn btn-success btn-sm\" @click=\"updateRequestStatus(request.id, 'aprobado')\">Aprobar</button>\n            <button class=\"btn btn-danger btn-sm\" @click=\"updateRequestStatus(request.id, 'rechazado')\">Rechazar</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from \"@/plugins/axios\";\n\nexport default {\n  name: \"AdminRequests\",\n  data() {\n    return {\n      requests: [],\n      isLoading: false,\n      errorMessage: \"\",\n    };\n  },\n  async created() {\n    await this.fetchRequests();\n  },\n  methods: {\n    async fetchRequests() {\n      this.isLoading = true;\n      try {\n        const response = await axios.get(\"/requests\", {\n          headers: { Authorization: `Bearer ${this.$store.getters[\"auth/token\"]}` }\n        });\n        this.requests = response.data;\n      } catch (error) {\n        this.errorMessage = error.response?.data?.message || \"Error al cargar las solicitudes.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async updateRequestStatus(requestId, newStatus) {\n      try {\n        await axios.put(`/requests/${requestId}`, { status: newStatus }, {\n          headers: { Authorization: `Bearer ${this.$store.getters[\"auth/token\"]}` }\n        });\n        this.fetchRequests(); // Recargar solicitudes\n      } catch (error) {\n        console.error(\"Error al actualizar solicitud:\", error.response);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.dashboard-title {\n  font-size: 22px;\n  font-weight: bold;\n  margin-bottom: 15px;\n}\n.table {\n  width: 100%;\n  margin-top: 20px;\n}\n.btn-sm {\n  margin-right: 5px;\n}\n</style>\n"],"mappings":"AAiCA,OAAOA,KAAI,MAAO,iBAAiB;AAEnC,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,KAAK;MAChBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,aAAa,CAAC,CAAC;EAC5B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI,CAACH,SAAQ,GAAI,IAAI;MACrB,IAAI;QACF,MAAMK,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAC,WAAW,EAAE;UAC5CC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAU,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,YAAY,CAAC;UAAG;QAC1E,CAAC,CAAC;QACF,IAAI,CAACX,QAAO,GAAIM,QAAQ,CAACP,IAAI;MAC/B,EAAE,OAAOa,KAAK,EAAE;QACd,IAAI,CAACV,YAAW,GAAIU,KAAK,CAACN,QAAQ,EAAEP,IAAI,EAAEc,OAAM,IAAK,kCAAkC;MACzF,UAAU;QACR,IAAI,CAACZ,SAAQ,GAAI,KAAK;MACxB;IACF,CAAC;IACD,MAAMa,mBAAmBA,CAACC,SAAS,EAAEC,SAAS,EAAE;MAC9C,IAAI;QACF,MAAMnB,KAAK,CAACoB,GAAG,CAAC,aAAaF,SAAS,EAAE,EAAE;UAAEG,MAAM,EAAEF;QAAU,CAAC,EAAE;UAC/DR,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAU,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,YAAY,CAAC;UAAG;QAC1E,CAAC,CAAC;QACF,IAAI,CAACP,aAAa,CAAC,CAAC,EAAE;MACxB,EAAE,OAAOQ,KAAK,EAAE;QACdO,OAAO,CAACP,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAACN,QAAQ,CAAC;MACjE;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}