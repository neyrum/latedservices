{"ast":null,"code":"import axios from \"@/plugins/axios\";\nimport defaultProfilePicture from \"@/assets/img/default-profile.jpg\";\nimport Cropper from \"cropperjs\";\nimport \"cropperjs/dist/cropper.css\";\nimport { ref, nextTick, onMounted } from \"vue\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  name: \"Profile\",\n  setup() {\n    const router = useRouter();\n    const user = ref(null);\n    // El formulario se inicia vacío para permitir que el usuario ingrese nuevos datos.\n    const form = ref({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      address: \"\"\n    });\n    const imagePreview = ref(null);\n    const showCropper = ref(false);\n    const selectedFile = ref(null);\n    const cropperInstance = ref(null);\n    const croppedImage = ref(null);\n    const successMessage = ref(\"\");\n    const errorMessage = ref(\"\");\n    const cropperImage = ref(null);\n    const showEdit = ref(false);\n    const fetchProfile = async () => {\n      try {\n        const response = await axios.get(\"/users/me\");\n        user.value = response.data;\n      } catch (error) {\n        errorMessage.value = error.response?.data?.message || \"Error al cargar el perfil.\";\n      }\n    };\n    onMounted(() => {\n      fetchProfile();\n    });\n    const toggleEdit = () => {\n      showEdit.value = !showEdit.value;\n    };\n    const onFileChange = event => {\n      const file = event.target.files[0];\n      if (file) {\n        selectedFile.value = file;\n        imagePreview.value = URL.createObjectURL(file);\n        showCropper.value = true;\n        nextTick(() => {\n          if (cropperImage.value) {\n            if (cropperInstance.value) {\n              cropperInstance.value.destroy();\n            }\n            cropperInstance.value = new Cropper(cropperImage.value, {\n              aspectRatio: 1,\n              viewMode: 1,\n              autoCropArea: 1,\n              responsive: true,\n              background: false\n            });\n            console.log(\"Cropper inicializado tras cargar la imagen.\");\n          } else {\n            errorMessage.value = \"No se encontró la imagen para recortar.\";\n          }\n        });\n      }\n    };\n    const cropImage = () => {\n      if (cropperInstance.value) {\n        const canvas = cropperInstance.value.getCroppedCanvas({\n          width: 200,\n          height: 200\n        });\n        croppedImage.value = canvas.toDataURL(\"image/jpeg\");\n        showCropper.value = false;\n        cropperInstance.value.destroy();\n        cropperInstance.value = null;\n        imagePreview.value = null;\n      }\n    };\n    const cancelCrop = () => {\n      showCropper.value = false;\n      imagePreview.value = null;\n      if (cropperInstance.value) {\n        cropperInstance.value.destroy();\n        cropperInstance.value = null;\n      }\n    };\n    const uploadWithoutCrop = () => {\n      if (selectedFile.value) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          const fileBase64 = e.target.result;\n          axios.post(\"/users/profile-picture\", {\n            profilePicture: fileBase64\n          }).then(response => {\n            user.value.profilePicture = response.data.profilePicture;\n            successMessage.value = \"¡Foto de perfil actualizada sin recorte!\";\n            errorMessage.value = \"\";\n            selectedFile.value = null;\n            showCropper.value = false;\n            croppedImage.value = null;\n          }).catch(error => {\n            errorMessage.value = error.response?.data?.message || \"Error al subir la foto de perfil.\";\n            successMessage.value = \"\";\n          });\n        };\n        reader.readAsDataURL(selectedFile.value);\n      } else {\n        errorMessage.value = \"No se ha seleccionado ninguna imagen.\";\n      }\n    };\n    const uploadProfilePicture = async () => {\n      if (!croppedImage.value) {\n        errorMessage.value = \"Por favor, recorta la imagen o elige subir sin recortar.\";\n        return;\n      }\n      try {\n        const response = await axios.post(\"/users/profile-picture\", {\n          profilePicture: croppedImage.value\n        });\n        user.value.profilePicture = response.data.profilePicture;\n        successMessage.value = \"¡Foto de perfil actualizada!\";\n        errorMessage.value = \"\";\n        croppedImage.value = null;\n      } catch (error) {\n        errorMessage.value = error.response?.data?.message || \"Error al subir la foto de perfil.\";\n        successMessage.value = \"\";\n      }\n    };\n    const updateProfile = async () => {\n      try {\n        const response = await axios.put(\"/users/me\", form.value);\n        user.value = response.data;\n        successMessage.value = \"¡Perfil actualizado exitosamente!\";\n        errorMessage.value = \"\";\n        // Reiniciamos el formulario a vacío tras la actualización.\n        form.value = {\n          name: \"\",\n          email: \"\",\n          phone: \"\",\n          address: \"\"\n        };\n      } catch (error) {\n        errorMessage.value = error.response?.data?.message || \"Error al actualizar el perfil.\";\n        successMessage.value = \"\";\n      }\n    };\n    const goToHome = () => {\n      router.push(\"/\");\n    };\n    return {\n      user,\n      form,\n      imagePreview,\n      showCropper,\n      selectedFile,\n      cropperImage,\n      croppedImage,\n      onFileChange,\n      cropImage,\n      cancelCrop,\n      uploadProfilePicture,\n      uploadWithoutCrop,\n      updateProfile,\n      successMessage,\n      errorMessage,\n      goToHome,\n      defaultProfilePicture,\n      showEdit,\n      toggleEdit\n    };\n  }\n};","map":{"version":3,"names":["axios","defaultProfilePicture","Cropper","ref","nextTick","onMounted","useRouter","name","setup","router","user","form","email","phone","address","imagePreview","showCropper","selectedFile","cropperInstance","croppedImage","successMessage","errorMessage","cropperImage","showEdit","fetchProfile","response","get","value","data","error","message","toggleEdit","onFileChange","event","file","target","files","URL","createObjectURL","destroy","aspectRatio","viewMode","autoCropArea","responsive","background","console","log","cropImage","canvas","getCroppedCanvas","width","height","toDataURL","cancelCrop","uploadWithoutCrop","reader","FileReader","onload","e","fileBase64","result","post","profilePicture","then","catch","readAsDataURL","uploadProfilePicture","updateProfile","put","goToHome","push"],"sources":["/Users/macbookpro/project/LatedServices/frontend/src/views/client/Profile.vue"],"sourcesContent":["<template>\n    <div class=\"container mt-5\">\n      <div class=\"row\">\n        <!-- Tarjeta de Detalles del Perfil -->\n        <div class=\"col-md-4 mb-4\">\n          <div class=\"card shadow-sm border-0\">\n            <div class=\"card-header bg-primary text-white d-flex align-items-center justify-content-between\">\n              <h5 class=\"m-0\">Tu Perfil</h5>\n              <div>\n                <i class=\"bi bi-pencil me-2 fs-4\" style=\"cursor: pointer;\" @click=\"toggleEdit\"></i>\n                <i class=\"bi bi-arrow-left-circle fs-3\" style=\"cursor: pointer;\" @click=\"goToHome\"></i>\n              </div>\n            </div>\n            <div class=\"card-body text-center\">\n              <div class=\"mb-3\">\n                <img\n                  :src=\"user?.profilePicture || defaultProfilePicture\"\n                  alt=\"Foto Actual\"\n                  class=\"profile-img\"\n                />\n              </div>\n              <div class=\"profile-details\">\n                <p class=\"mb-1\"><strong>{{ user?.name || 'Nombre' }}</strong></p>\n                <p class=\"mb-1\"><i class=\"bi bi-envelope\"></i> {{ user?.email || 'Email' }}</p>\n                <p class=\"mb-1\"><i class=\"bi bi-telephone\"></i> {{ user?.phone || 'Teléfono' }}</p>\n                <p class=\"mb-0\"><i class=\"bi bi-geo-alt\"></i> {{ user?.address || 'Dirección' }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Tarjeta de Modificar Perfil - se muestra solo cuando showEdit es true -->\n        <div v-if=\"showEdit\" class=\"col-md-8 mb-4\">\n          <div class=\"card shadow-sm border-0\">\n            <div class=\"card-header bg-primary text-white\">\n              <h5 class=\"m-0\">Modificar Perfil</h5>\n            </div>\n            <div class=\"card-body\">\n              <!-- Mensajes de alerta -->\n              <div v-if=\"successMessage\" class=\"alert alert-success\">\n                {{ successMessage }}\n              </div>\n              <div v-if=\"errorMessage\" class=\"alert alert-danger\">\n                {{ errorMessage }}\n              </div>\n  \n              <!-- Sección para actualizar la foto de perfil -->\n              <div class=\"mb-4\">\n                <h6>Actualizar Foto de Perfil</h6>\n                <!-- Vista actual o selector para nueva imagen -->\n                <div v-if=\"!showCropper\" class=\"text-center mb-3\">\n                  <img\n                    :src=\"user?.profilePicture || defaultProfilePicture\"\n                    alt=\"Foto de Perfil\"\n                    class=\"profile-img-edit mb-2\"\n                  />\n                  <div>\n                    <input type=\"file\" @change=\"onFileChange\" class=\"form-control\" />\n                  </div>\n                </div>\n  \n                <!-- Interfaz de Cropper -->\n                <div v-if=\"showCropper\" class=\"text-center mb-3\">\n                  <div class=\"cropper-container mx-auto\">\n                    <img ref=\"cropperImage\" :src=\"imagePreview\" alt=\"Recortar imagen\" class=\"img-fluid\" />\n                  </div>\n                  <div class=\"mt-2\">\n                    <button class=\"btn btn-success me-2\" @click=\"cropImage\">Recortar Imagen</button>\n                    <button class=\"btn btn-primary me-2\" @click=\"uploadWithoutCrop\">Subir sin recortar</button>\n                    <button class=\"btn btn-secondary\" @click=\"cancelCrop\">Cancelar</button>\n                  </div>\n                </div>\n                <!-- Si se obtuvo una imagen recortada, opción para confirmar -->\n                <div v-if=\"croppedImage\" class=\"text-center\">\n                  <h6>Nueva Foto Previa</h6>\n                  <img :src=\"croppedImage\" alt=\"Imagen recortada\" class=\"profile-img-edit mb-2\" />\n                  <div>\n                    <button class=\"btn btn-primary\" @click=\"uploadProfilePicture\">Confirmar Foto</button>\n                  </div>\n                </div>\n              </div>\n  \n              <!-- Formulario para actualizar datos (inicia con campos vacíos) -->\n              <form @submit.prevent=\"updateProfile\">\n                <div class=\"mb-3\">\n                  <label for=\"name\" class=\"form-label\">Nombre</label>\n                  <input id=\"name\" v-model=\"form.name\" type=\"text\" class=\"form-control\" placeholder=\"Ingresa tu nombre\" />\n                </div>\n                <div class=\"mb-3\">\n                  <label for=\"email\" class=\"form-label\">Email</label>\n                  <input id=\"email\" v-model=\"form.email\" type=\"email\" class=\"form-control\" placeholder=\"Ingresa tu email\" />\n                </div>\n                <div class=\"mb-3\">\n                  <label for=\"phone\" class=\"form-label\">Teléfono</label>\n                  <input id=\"phone\" v-model=\"form.phone\" type=\"tel\" class=\"form-control\" placeholder=\"Ingresa tu teléfono\" />\n                </div>\n                <div class=\"mb-3\">\n                  <label for=\"address\" class=\"form-label\">Dirección</label>\n                  <textarea id=\"address\" v-model=\"form.address\" class=\"form-control\" placeholder=\"Ingresa tu dirección\"></textarea>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary w-100\">Actualizar Perfil</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from \"@/plugins/axios\";\n  import defaultProfilePicture from \"@/assets/img/default-profile.jpg\";\n  import Cropper from \"cropperjs\";\n  import \"cropperjs/dist/cropper.css\";\n  import { ref, nextTick, onMounted } from \"vue\";\n  import { useRouter } from \"vue-router\";\n  \n  export default {\n    name: \"Profile\",\n    setup() {\n      const router = useRouter();\n      const user = ref(null);\n      // El formulario se inicia vacío para permitir que el usuario ingrese nuevos datos.\n      const form = ref({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        address: \"\",\n      });\n      const imagePreview = ref(null);\n      const showCropper = ref(false);\n      const selectedFile = ref(null);\n      const cropperInstance = ref(null);\n      const croppedImage = ref(null);\n      const successMessage = ref(\"\");\n      const errorMessage = ref(\"\");\n      const cropperImage = ref(null);\n      const showEdit = ref(false);\n  \n      const fetchProfile = async () => {\n        try {\n          const response = await axios.get(\"/users/me\");\n          user.value = response.data;\n        } catch (error) {\n          errorMessage.value = error.response?.data?.message || \"Error al cargar el perfil.\";\n        }\n      };\n  \n      onMounted(() => {\n        fetchProfile();\n      });\n  \n      const toggleEdit = () => {\n        showEdit.value = !showEdit.value;\n      };\n  \n      const onFileChange = (event) => {\n        const file = event.target.files[0];\n        if (file) {\n          selectedFile.value = file;\n          imagePreview.value = URL.createObjectURL(file);\n          showCropper.value = true;\n          nextTick(() => {\n            if (cropperImage.value) {\n              if (cropperInstance.value) {\n                cropperInstance.value.destroy();\n              }\n              cropperInstance.value = new Cropper(cropperImage.value, {\n                aspectRatio: 1,\n                viewMode: 1,\n                autoCropArea: 1,\n                responsive: true,\n                background: false,\n              });\n              console.log(\"Cropper inicializado tras cargar la imagen.\");\n            } else {\n              errorMessage.value = \"No se encontró la imagen para recortar.\";\n            }\n          });\n        }\n      };\n  \n      const cropImage = () => {\n        if (cropperInstance.value) {\n          const canvas = cropperInstance.value.getCroppedCanvas({\n            width: 200,\n            height: 200,\n          });\n          croppedImage.value = canvas.toDataURL(\"image/jpeg\");\n          showCropper.value = false;\n          cropperInstance.value.destroy();\n          cropperInstance.value = null;\n          imagePreview.value = null;\n        }\n      };\n  \n      const cancelCrop = () => {\n        showCropper.value = false;\n        imagePreview.value = null;\n        if (cropperInstance.value) {\n          cropperInstance.value.destroy();\n          cropperInstance.value = null;\n        }\n      };\n  \n      const uploadWithoutCrop = () => {\n        if (selectedFile.value) {\n          const reader = new FileReader();\n          reader.onload = (e) => {\n            const fileBase64 = e.target.result;\n            axios\n              .post(\"/users/profile-picture\", { profilePicture: fileBase64 })\n              .then((response) => {\n                user.value.profilePicture = response.data.profilePicture;\n                successMessage.value = \"¡Foto de perfil actualizada sin recorte!\";\n                errorMessage.value = \"\";\n                selectedFile.value = null;\n                showCropper.value = false;\n                croppedImage.value = null;\n              })\n              .catch((error) => {\n                errorMessage.value = error.response?.data?.message || \"Error al subir la foto de perfil.\";\n                successMessage.value = \"\";\n              });\n          };\n          reader.readAsDataURL(selectedFile.value);\n        } else {\n          errorMessage.value = \"No se ha seleccionado ninguna imagen.\";\n        }\n      };\n  \n      const uploadProfilePicture = async () => {\n        if (!croppedImage.value) {\n          errorMessage.value = \"Por favor, recorta la imagen o elige subir sin recortar.\";\n          return;\n        }\n        try {\n          const response = await axios.post(\"/users/profile-picture\", {\n            profilePicture: croppedImage.value,\n          });\n          user.value.profilePicture = response.data.profilePicture;\n          successMessage.value = \"¡Foto de perfil actualizada!\";\n          errorMessage.value = \"\";\n          croppedImage.value = null;\n        } catch (error) {\n          errorMessage.value = error.response?.data?.message || \"Error al subir la foto de perfil.\";\n          successMessage.value = \"\";\n        }\n      };\n  \n      const updateProfile = async () => {\n        try {\n          const response = await axios.put(\"/users/me\", form.value);\n          user.value = response.data;\n          successMessage.value = \"¡Perfil actualizado exitosamente!\";\n          errorMessage.value = \"\";\n          // Reiniciamos el formulario a vacío tras la actualización.\n          form.value = {\n            name: \"\",\n            email: \"\",\n            phone: \"\",\n            address: \"\",\n          };\n        } catch (error) {\n          errorMessage.value = error.response?.data?.message || \"Error al actualizar el perfil.\";\n          successMessage.value = \"\";\n        }\n      };\n  \n      const goToHome = () => {\n        router.push(\"/\");\n      };\n  \n      return {\n        user,\n        form,\n        imagePreview,\n        showCropper,\n        selectedFile,\n        cropperImage,\n        croppedImage,\n        onFileChange,\n        cropImage,\n        cancelCrop,\n        uploadProfilePicture,\n        uploadWithoutCrop,\n        updateProfile,\n        successMessage,\n        errorMessage,\n        goToHome,\n        defaultProfilePicture,\n        showEdit,\n        toggleEdit,\n      };\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .container {\n    max-width: 900px;\n  }\n  .profile-img {\n    width: 120px;\n    height: 120px;\n    object-fit: cover;\n    border-radius: 50%;\n    border: 2px solid #345896;\n  }\n  .profile-img-edit {\n    width: 120px;\n    height: 120px;\n    object-fit: cover;\n    border-radius: 50%;\n    border: 2px solid #345896;\n  }\n  .card {\n    border-radius: 0.5rem;\n  }\n  .card-header {\n    font-weight: bold;\n  }\n  .cropper-container img {\n    width: 100%;\n    max-height: 300px;\n    object-fit: contain;\n  }\n  .alert {\n    margin-bottom: 1rem;\n  }\n  .profile-details p {\n    margin-bottom: 0.5rem;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}