{"ast":null,"code":"import axios from \"@/plugins/axios\";\nimport Navbar from \"@/components/Navbar.vue\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\nimport defaultProfile from '@/assets/img/default-profile.jpg';\nexport default {\n  name: \"AvailableServices\",\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      services: [],\n      requestedServices: [],\n      selectedService: null,\n      form: {\n        description: \"\",\n        priority: \"medium\",\n        preferredDate: \"\",\n        street: \"\",\n        city: \"\",\n        zip: \"\"\n      },\n      errors: {},\n      errorMessage: \"\",\n      isLoading: true,\n      isSubmitting: false\n    };\n  },\n  async created() {\n    await this.fetchServices();\n  },\n  methods: {\n    async fetchServices() {\n      this.isLoading = true;\n      try {\n        const response = await axios.get(\"/services\");\n        this.services = response.data;\n      } catch (error) {\n        this.errorMessage = error.response?.data?.message || \"Error al cargar los servicios.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    openConfirmationModal(service) {\n      this.selectedService = service;\n      const modal = new bootstrap.Modal(document.getElementById(\"confirmationModal\"));\n      modal.show();\n    },\n    openRequestForm() {\n      const confirmationModal = bootstrap.Modal.getInstance(document.getElementById(\"confirmationModal\"));\n      confirmationModal.hide();\n      const requestFormModal = new bootstrap.Modal(document.getElementById(\"requestFormModal\"));\n      requestFormModal.show();\n    },\n    // Método de validación del formulario\n    validateForm() {\n      // Reiniciar errores\n      this.errors = {};\n\n      // Validar la descripción (mínimo 10 a máximo 500 caracteres)\n      const description = this.form.description ? this.form.description.trim() : \"\";\n      if (!description || description.length < 250) {\n        this.errors.description = \"La descripción debe tener al menos 10 caracteres.\";\n      } else if (description.length > 500) {\n        this.errors.description = \"La descripción debe tener como máximo 500 caracteres.\";\n      }\n\n      // Validar el campo de prioridad (aunque el select tiene required, se valida por precaución)\n      if (!this.form.priority) {\n        this.errors.priority = \"La prioridad es obligatoria.\";\n      }\n\n      // Validar la fecha preferida\n      if (!this.form.preferredDate) {\n        this.errors.preferredDate = \"La fecha preferida es obligatoria.\";\n      } else {\n        // Intentamos crear una fecha a partir del valor ingresado\n        const selectedDate = new Date(this.form.preferredDate);\n        // Si la fecha es inválida, se asigna un mensaje\n        if (isNaN(selectedDate.getTime())) {\n          this.errors.preferredDate = \"La fecha preferida debe ser una fecha válida.\";\n          // Establecemos la fecha de hoy a medianoche para la comparación\n          const today = new Date();\n          today.setHours(0, 0, 0, 0);\n\n          // Verificamos que la fecha seleccionada sea mayor que hoy\n          if (selectedDate <= today) {\n            this.errors.preferredDate = \"La fecha preferida debe ser una fecha futura.\";\n          }\n        }\n      }\n\n      // Validar campos de dirección\n      if (!this.form.street || !this.form.street.trim()) {\n        this.errors.street = \"La calle es obligatoria.\";\n      }\n      if (!this.form.city || !this.form.city.trim()) {\n        this.errors.city = \"La ciudad es obligatoria.\";\n      }\n      if (!this.form.zip || !this.form.zip.trim()) {\n        this.errors.zip = \"El código postal es obligatorio.\";\n      }\n\n      // Si no hay propiedades en el objeto errors, retorna true\n      return Object.keys(this.errors).length === 0;\n    },\n    async submitRequest() {\n      // Primero, valida el formulario\n      if (!this.validateForm()) {\n        return; // Si hay errores, no se envía la solicitud\n      }\n      this.isSubmitting = true;\n\n      // Obtener el rol del usuario desde Vuex (usar this.$store)\n      const userData = this.$store.getters[\"auth/userData\"];\n      const userRole = userData ? userData.role : undefined;\n      console.log(\"Rol del usuario:\", userRole);\n\n      // Validar que el usuario tenga permisos para solicitar el servicio\n      if (userRole !== \"client\") {\n        alert(\"No tienes permisos para solicitar un servicio.\");\n        this.isSubmitting = false;\n        return;\n      }\n\n      // Construir el objeto address a partir de los nuevos campos\n      const addressObj = {\n        street: this.form.street.trim(),\n        city: this.form.city.trim(),\n        zip: this.form.zip.trim()\n      };\n      try {\n        console.log(\"Solicitud enviada:\", {\n          serviceId: this.selectedService.id,\n          details: this.form.description,\n          priority: this.form.priority,\n          preferredDate: this.form.preferredDate,\n          address: addressObj,\n          status: \"pendiente\"\n        });\n        const response = await axios.post(\"/requests\", {\n          serviceId: this.selectedService.id,\n          details: this.form.description,\n          priority: this.form.priority,\n          preferredDate: this.form.preferredDate,\n          address: addressObj,\n          status: \"pendiente\"\n        }, {\n          headers: {\n            Authorization: `Bearer ${this.$store.getters[\"auth/token\"]}`\n          }\n        });\n        this.requestedServices.push({\n          id: response.data.id,\n          serviceName: this.selectedService.name,\n          status: \"Pendiente\"\n        });\n\n        // Reiniciar el formulario\n        this.form.description = \"\";\n        this.form.priority = \"medium\";\n        this.form.preferredDate = \"\";\n        this.form.street = \"\";\n        this.form.city = \"\";\n        this.form.zip = \"\";\n        const requestFormModal = bootstrap.Modal.getInstance(document.getElementById(\"requestFormModal\"));\n        requestFormModal.hide();\n      } catch (error) {\n        console.log(\"Error Response:\", error.response);\n        this.errorMessage = error.response?.data?.message || \"Error al enviar la solicitud.\";\n      } finally {\n        this.isSubmitting = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","Navbar","defaultProfile","name","components","data","services","requestedServices","selectedService","form","description","priority","preferredDate","street","city","zip","errors","errorMessage","isLoading","isSubmitting","created","fetchServices","methods","response","get","error","message","openConfirmationModal","service","modal","bootstrap","Modal","document","getElementById","show","openRequestForm","confirmationModal","getInstance","hide","requestFormModal","validateForm","trim","length","selectedDate","Date","isNaN","getTime","today","setHours","Object","keys","submitRequest","userData","$store","getters","userRole","role","undefined","console","log","alert","addressObj","serviceId","id","details","address","status","post","headers","Authorization","push","serviceName"],"sources":["/home/lated/LatedServices/frontend/src/views/client/AvailableServices.vue"],"sourcesContent":["<template>\n  <div class=\"content\">\n    <Navbar />\n    <div class=\"container mt-5\">\n      <h2 class=\"mb-4 text-center\">Servicios Disponibles</h2>\n\n      <!-- Mensaje de error global-->\n      <div v-if=\"errorMessage\" class=\"alert alert-danger\" role=\"alert\">\n        {{ errorMessage }}\n      </div>\n\n      <!-- Mensaje de carga -->\n      <div v-if=\"isLoading\" class=\"text-center\">\n        <p>Cargando servicios...</p>\n      </div>\n\n      <!-- Mensaje cuando no hay servicios -->\n      <div v-if=\"!isLoading && services.length === 0 && !errorMessage\" class=\"alert alert-info\" role=\"alert\">\n        No tenemos servicios disponibles en este momento.\n      </div>\n\n      <!-- Lista de servicios -->\n      <div v-if=\"!isLoading && services.length > 0\" class=\"row\">\n        <div v-for=\"service in services\" :key=\"service.id\" class=\"col-md-4 mb-4\">\n          <div class=\"card h-100\">\n            <div class=\"card-body d-flex flex-column\">\n              <h5 class=\"card-title\">{{ service.name }}</h5>\n              <p class=\"card-text\">{{ service.description }}</p>\n              \n              <!-- Mostrar Precio, si existe -->\n              <p v-if=\"service.price\" class=\"card-text\">\n                <strong>Precio:</strong> ${{ service.price }}\n              </p>\n\n              <!-- Botón de solicitud, siempre abajo -->\n              <div class=\"mt-auto text-center\">\n                <button class=\"btn btn-primary btn-sm rounded-pill shadow-sm\" @click=\"openConfirmationModal(service)\">\n                  Solicitar Servicio\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Modal de Confirmación -->\n      <div\n        class=\"modal fade\"\n        id=\"confirmationModal\"\n        tabindex=\"-1\"\n        aria-labelledby=\"confirmationModalLabel\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"confirmationModalLabel\">Confirmar Solicitud</h5>\n              <button\n                type=\"button\"\n                class=\"btn-close\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n              ></button>\n            </div>\n            <div class=\"modal-body\">\n              ¿Estás seguro de que deseas solicitar el servicio \"{{ selectedService?.name }}\"?\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\n                Cancelar\n              </button>\n              <button type=\"button\" class=\"btn btn-primary\" @click=\"openRequestForm\">\n                Sí, Solicitar\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Modal del Formulario -->\n      <div\n        class=\"modal fade\"\n        id=\"requestFormModal\"\n        tabindex=\"-1\"\n        aria-labelledby=\"requestFormModalLabel\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"requestFormModalLabel\">Formulario de Solicitud</h5>\n              <button\n                type=\"button\"\n                class=\"btn-close\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n              ></button>\n            </div>\n            <div class=\"modal-body\">\n              <form @submit.prevent=\"submitRequest\">\n                <div class=\"form-group\">\n                  <label for=\"description\">Descripción</label>\n                  <textarea\n                    id=\"description\"\n                    v-model=\"form.description\"\n                    class=\"form-control\"\n                    rows=\"4\"\n                    placeholder=\"Describe el servicio que necesitas\"\n                    required\n                  ></textarea>\n                  <span v-if=\"errors.description\" class=\"text-danger\">{{ errors.description }}</span>\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"priority\">Prioridad</label>\n                  <select\n                    id=\"priority\"\n                    v-model=\"form.priority\"\n                    class=\"form-control\"\n                    required\n                  >\n                    <option value=\"low\">Baja</option>\n                    <option value=\"medium\">Media</option>\n                    <option value=\"high\">Alta</option>\n                  </select>\n                  <span v-if=\"errors.priority\" class=\"text-danger\">{{ errors.priority }}</span>\n                </div>\n                \n                <div class=\"form-group\">\n                <label for=\"preferredDate\">Fecha Preferida</label>\n                <input type=\"date\" id=\"preferredDate\" v-model=\"form.preferredDate\" class=\"form-control\" required />\n                <span v-if=\"errors.preferredDate\" class=\"text-danger\">{{ errors.preferredDate }}</span>\n                </div>\n\n                <!-- Campo para Calle -->\n              <div class=\"form-group\">\n              <label for=\"street\">Calle</label>\n              <input type=\"text\"id=\"street\" v-model=\"form.street\"class=\"form-control\" placeholder=\"Ingresa la calle\" required />\n              <span v-if=\"errors.street\" class=\"text-danger\">{{ errors.street }}</span>\n              </div>\n\n              <!-- Campo para Ciudad -->\n             <div class=\"form-group mt-3\">\n             <label for=\"city\">Ciudad</label>\n             <input type=\"text\" id=\"city\" v-model=\"form.city\" class=\"form-control\" placeholder=\"Ingresa la ciudad\" required />\n             <span v-if=\"errors.city\" class=\"text-danger\">{{ errors.city }}</span>\n             </div>\n\n              <!-- Campo para Código Postal -->\n              <div class=\"form-group mt-3\">\n              <label for=\"zip\">Código Postal</label>\n              <input type=\"text\" id=\"zip\" v-model=\"form.zip\" class=\"form-control\" placeholder=\"Ingresa el código postal\" required />\n              <span v-if=\"errors.zip\" class=\"text-danger\">{{ errors.zip }}</span>\n              </div>\n\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mt-3\"\n                  :disabled=\"isSubmitting\"\n                >\n                  {{ isSubmitting ? \"Enviando...\" : \"Enviar Solicitud\" }}\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Lista de Servicios Solicitados -->\n      <div v-if=\"requestedServices.length > 0\" class=\"mt-5\">\n        <h3 class=\"mb-4\">Servicios Solicitados</h3>\n        <ul class=\"list-group\">\n          <li\n            v-for=\"request in requestedServices\"\n            :key=\"request.id\"\n            class=\"list-group-item d-flex justify-content-between align-items-center\"\n          >\n            <span>{{ request.serviceName }}</span>\n            <span class=\"badge bg-primary\">{{ request.status }}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"@/plugins/axios\";\nimport Navbar from \"@/components/Navbar.vue\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\nimport defaultProfile from '@/assets/img/default-profile.jpg';\n\nexport default {\n  name: \"AvailableServices\",\n  components: { Navbar },\n  data() {\n    return {\n      services: [],\n      requestedServices: [],\n      selectedService: null,\n      form: {\n        description: \"\",\n        priority: \"medium\",\n        preferredDate: \"\", \n        street: \"\",\n        city: \"\",\n        zip: \"\",\n      },\n      errors: {},\n      errorMessage: \"\",\n      isLoading: true,\n      isSubmitting: false,\n    };\n  },\n  async created() {\n    await this.fetchServices();\n  },\n  methods: {\n    async fetchServices() {\n      this.isLoading = true;\n      try {\n        const response = await axios.get(\"/services\");\n        this.services = response.data;\n      } catch (error) {\n        this.errorMessage = error.response?.data?.message || \"Error al cargar los servicios.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    openConfirmationModal(service) {\n      this.selectedService = service;\n      const modal = new bootstrap.Modal(document.getElementById(\"confirmationModal\"));\n      modal.show();\n    },\n    openRequestForm() {\n      const confirmationModal = bootstrap.Modal.getInstance(document.getElementById(\"confirmationModal\"));\n      confirmationModal.hide();\n\n      const requestFormModal = new bootstrap.Modal(document.getElementById(\"requestFormModal\"));\n      requestFormModal.show();\n    },\n\n    // Método de validación del formulario\n    validateForm() {\n      // Reiniciar errores\n      this.errors = {};\n\n    \n      // Validar la descripción (mínimo 10 a máximo 500 caracteres)\n      const description = this.form.description ? this.form.description.trim() : \"\";\n      if (!description || description.length < 250) {\n      this.errors.description = \"La descripción debe tener al menos 10 caracteres.\";\n      } else if (description.length > 500) {\n      this.errors.description = \"La descripción debe tener como máximo 500 caracteres.\";\n      }\n      \n      // Validar el campo de prioridad (aunque el select tiene required, se valida por precaución)\n      if (!this.form.priority) {\n        this.errors.priority = \"La prioridad es obligatoria.\";\n      }\n\n      // Validar la fecha preferida\n      if (!this.form.preferredDate) {\n        this.errors.preferredDate = \"La fecha preferida es obligatoria.\";\n      }\n      else {\n    // Intentamos crear una fecha a partir del valor ingresado\n    const selectedDate = new Date(this.form.preferredDate);\n    // Si la fecha es inválida, se asigna un mensaje\n    if (isNaN(selectedDate.getTime())) {\n      this.errors.preferredDate = \"La fecha preferida debe ser una fecha válida.\";\n      // Establecemos la fecha de hoy a medianoche para la comparación\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n      \n      // Verificamos que la fecha seleccionada sea mayor que hoy\n      if (selectedDate <= today) {\n        this.errors.preferredDate = \"La fecha preferida debe ser una fecha futura.\";\n      }\n    }\n  }\n\n\n      // Validar campos de dirección\n      if (!this.form.street || !this.form.street.trim()) {\n        this.errors.street = \"La calle es obligatoria.\";\n      }\n      if (!this.form.city || !this.form.city.trim()) {\n        this.errors.city = \"La ciudad es obligatoria.\";\n      }\n      if (!this.form.zip || !this.form.zip.trim()) {\n        this.errors.zip = \"El código postal es obligatorio.\";\n      }\n\n      // Si no hay propiedades en el objeto errors, retorna true\n      return Object.keys(this.errors).length === 0;\n    },\n    async submitRequest() {\n      // Primero, valida el formulario\n      if (!this.validateForm()) {\n        return; // Si hay errores, no se envía la solicitud\n      }\n      \n      this.isSubmitting = true;\n\n      // Obtener el rol del usuario desde Vuex (usar this.$store)\n      const userData = this.$store.getters[\"auth/userData\"];\n      const userRole = userData ? userData.role : undefined;\n      console.log(\"Rol del usuario:\", userRole);\n\n      // Validar que el usuario tenga permisos para solicitar el servicio\n      if (userRole !== \"client\") {\n        alert(\"No tienes permisos para solicitar un servicio.\");\n        this.isSubmitting = false;\n        return;\n      }\n\n      // Construir el objeto address a partir de los nuevos campos\n      const addressObj = {\n       street: this.form.street.trim(),\n       city: this.form.city.trim(),\n       zip: this.form.zip.trim(),\n  };\n\n      try { \n        \n        console.log(\"Solicitud enviada:\", {\n          serviceId: this.selectedService.id,\n          details: this.form.description,\n          priority: this.form.priority,\n          preferredDate: this.form.preferredDate,\n          address: addressObj,\n          status: \"pendiente\",\n        });\n\n        const response = await axios.post(\n          \"/requests\",\n          {\n            serviceId: this.selectedService.id,\n            details: this.form.description,\n            priority: this.form.priority,\n            preferredDate: this.form.preferredDate,\n            address: addressObj,\n            status: \"pendiente\",\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$store.getters[\"auth/token\"]}`,\n            },\n          }\n        );\n\n        this.requestedServices.push({\n          id: response.data.id,\n          serviceName: this.selectedService.name,\n          status: \"Pendiente\",\n        });\n\n        // Reiniciar el formulario\n        this.form.description = \"\";\n        this.form.priority = \"medium\";\n        this.form.preferredDate = \"\";\n        this.form.street = \"\";\n        this.form.city = \"\";\n        this.form.zip = \"\";\n\n        const requestFormModal = bootstrap.Modal.getInstance(document.getElementById(\"requestFormModal\"));\n        requestFormModal.hide();\n      } catch (error) {\n        console.log(\"Error Response:\", error.response);\n        this.errorMessage = error.response?.data?.message || \"Error al enviar la solicitud.\";\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.content {\n  margin-top: 70px;\n}\n.container {\n  max-width: 1200px;\n}\n.card {\n  border-radius: 0.25rem;\n  transition: transform 0.2s;\n}\n.card:hover {\n  transform: translateY(-5px);\n}\n.text-danger {\n  font-size: 0.875em;\n  color: red; /* o el color que prefieras */\n  margin-top: 0.25em;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}