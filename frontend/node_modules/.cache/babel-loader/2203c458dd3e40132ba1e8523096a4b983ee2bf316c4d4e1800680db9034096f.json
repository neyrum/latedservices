{"ast":null,"code":"import axios from '@/plugins/axios';\nexport default {\n  data() {\n    return {\n      services: [],\n      serviceData: {\n        name: '',\n        description: ''\n      },\n      isEditing: false,\n      editId: null\n    };\n  },\n  async created() {\n    await this.fetchServices();\n  },\n  methods: {\n    async fetchServices() {\n      try {\n        const response = await axios.get('/services');\n        this.services = response.data;\n      } catch (error) {\n        console.error(\"Error al obtener servicios:\", error);\n      }\n    },\n    async saveService() {\n      try {\n        if (this.isEditing) {\n          await axios.put(`/services/${this.editId}`, this.serviceData);\n        } else {\n          await axios.post('/services', this.serviceData);\n        }\n        this.resetForm();\n        await this.fetchServices(); // Refrescar lista tras acción\n      } catch (error) {\n        console.error(\"Error al guardar servicio:\", error);\n      }\n    },\n    editService(service) {\n      this.serviceData = {\n        ...service\n      };\n      this.isEditing = true;\n      this.editId = service.id;\n    },\n    cancelEdit() {\n      this.resetForm();\n    },\n    async deleteService(serviceId) {\n      if (confirm(\"¿Estás seguro de que quieres eliminar este servicio?\")) {\n        try {\n          await axios.delete(`/services/${serviceId}`);\n          await this.fetchServices(); // Refrescar lista tras eliminación\n        } catch (error) {\n          console.error(\"Error al eliminar servicio:\", error);\n        }\n      }\n    },\n    resetForm() {\n      this.serviceData = {\n        name: '',\n        description: ''\n      };\n      this.isEditing = false;\n      this.editId = null;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","services","serviceData","name","description","isEditing","editId","created","fetchServices","methods","response","get","error","console","saveService","put","post","resetForm","editService","service","id","cancelEdit","deleteService","serviceId","confirm","delete"],"sources":["/Users/macbookpro/project/LatedServices/frontend/src/views/admin/ManageServices.vue"],"sourcesContent":["<template>\n    <div class=\"manage-services\">\n      <h3>Gestión de Servicios</h3>\n  \n      <!-- Formulario para agregar o actualizar servicios -->\n      <form @submit.prevent=\"saveService\">\n        <input v-model=\"serviceData.name\" type=\"text\" placeholder=\"Nombre del servicio\" required />\n        <input v-model=\"serviceData.description\" type=\"text\" placeholder=\"Descripción\" required />\n        <button type=\"submit\" class=\"btn btn-primary\">\n          {{ isEditing ? 'Actualizar Servicio' : 'Agregar Servicio' }}\n        </button>\n        <button v-if=\"isEditing\" @click=\"cancelEdit\" class=\"btn btn-secondary\">Cancelar</button>\n      </form>\n  \n      <!-- Lista de servicios -->\n      <div class=\"service-list\">\n        <div class=\"card\" v-for=\"service in services\" :key=\"service.id\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{{ service.name }}</h5>\n            <p class=\"card-text\">{{ service.description }}</p>\n            <button @click=\"editService(service)\" class=\"btn btn-warning\">Editar</button>\n            <button @click=\"deleteService(service.id)\" class=\"btn btn-danger\">Eliminar</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from '@/plugins/axios';\n  \n  export default {\n    data() {\n      return {\n        services: [],\n        serviceData: { name: '', description: '' },\n        isEditing: false,\n        editId: null\n      };\n    },\n    async created() {\n      await this.fetchServices();\n    },\n    methods: {\n      async fetchServices() {\n        try {\n          const response = await axios.get('/services');\n          this.services = response.data;\n        } catch (error) {\n          console.error(\"Error al obtener servicios:\", error);\n        }\n      },\n      async saveService() {\n        try {\n          if (this.isEditing) {\n            await axios.put(`/services/${this.editId}`, this.serviceData);\n          } else {\n            await axios.post('/services', this.serviceData);\n          }\n          this.resetForm();\n          await this.fetchServices(); // Refrescar lista tras acción\n        } catch (error) {\n          console.error(\"Error al guardar servicio:\", error);\n        }\n      },\n      editService(service) {\n        this.serviceData = { ...service };\n        this.isEditing = true;\n        this.editId = service.id;\n      },\n      cancelEdit() {\n        this.resetForm();\n      },\n      async deleteService(serviceId) {\n        if (confirm(\"¿Estás seguro de que quieres eliminar este servicio?\")) {\n          try {\n            await axios.delete(`/services/${serviceId}`);\n            await this.fetchServices(); // Refrescar lista tras eliminación\n          } catch (error) {\n            console.error(\"Error al eliminar servicio:\", error);\n          }\n        }\n      },\n      resetForm() {\n        this.serviceData = { name: '', description: '' };\n        this.isEditing = false;\n        this.editId = null;\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .manage-services {\n    padding: 20px;\n  }\n  .service-list {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n  }\n  .card {\n    border-radius: 5px;\n    padding: 15px;\n    width: 250px;\n  }\n  form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    margin-bottom: 20px;\n  }\n  </style>\n  "],"mappings":"AA6BE,OAAOA,KAAI,MAAO,iBAAiB;AAEnC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,WAAW,EAAE;MAAG,CAAC;MAC1CC,SAAS,EAAE,KAAK;MAChBC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,aAAa,CAAC,CAAC;EAC5B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMX,KAAK,CAACY,GAAG,CAAC,WAAW,CAAC;QAC7C,IAAI,CAACV,QAAO,GAAIS,QAAQ,CAACV,IAAI;MAC/B,EAAE,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACD,MAAME,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,IAAI,IAAI,CAACT,SAAS,EAAE;UAClB,MAAMN,KAAK,CAACgB,GAAG,CAAC,aAAa,IAAI,CAACT,MAAM,EAAE,EAAE,IAAI,CAACJ,WAAW,CAAC;QAC/D,OAAO;UACL,MAAMH,KAAK,CAACiB,IAAI,CAAC,WAAW,EAAE,IAAI,CAACd,WAAW,CAAC;QACjD;QACA,IAAI,CAACe,SAAS,CAAC,CAAC;QAChB,MAAM,IAAI,CAACT,aAAa,CAAC,CAAC,EAAE;MAC9B,EAAE,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACDM,WAAWA,CAACC,OAAO,EAAE;MACnB,IAAI,CAACjB,WAAU,GAAI;QAAE,GAAGiB;MAAQ,CAAC;MACjC,IAAI,CAACd,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACC,MAAK,GAAIa,OAAO,CAACC,EAAE;IAC1B,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACJ,SAAS,CAAC,CAAC;IAClB,CAAC;IACD,MAAMK,aAAaA,CAACC,SAAS,EAAE;MAC7B,IAAIC,OAAO,CAAC,sDAAsD,CAAC,EAAE;QACnE,IAAI;UACF,MAAMzB,KAAK,CAAC0B,MAAM,CAAC,aAAaF,SAAS,EAAE,CAAC;UAC5C,MAAM,IAAI,CAACf,aAAa,CAAC,CAAC,EAAE;QAC9B,EAAE,OAAOI,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACrD;MACF;IACF,CAAC;IACDK,SAASA,CAAA,EAAG;MACV,IAAI,CAACf,WAAU,GAAI;QAAEC,IAAI,EAAE,EAAE;QAAEC,WAAW,EAAE;MAAG,CAAC;MAChD,IAAI,CAACC,SAAQ,GAAI,KAAK;MACtB,IAAI,CAACC,MAAK,GAAI,IAAI;IACpB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}