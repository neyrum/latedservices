{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"notification-container\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.notifications.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.notifications, (notification, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass([\"alert\", $options.alertClass(notification.type)]),\n      role: \"alert\"\n    }, [_createTextVNode(_toDisplayString(notification.message) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      type: \"button\",\n      class: \"close\",\n      \"aria-label\": \"Close\",\n      onClick: $event => $options.removeNotification(index)\n    }, [...(_cache[0] || (_cache[0] = [_createElementVNode(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, \"×\", -1 /* HOISTED */)]))], 8 /* PROPS */, _hoisted_2)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","$props","notifications","length","_createElementBlock","_hoisted_1","_Fragment","_renderList","notification","index","_normalizeClass","$options","alertClass","type","role","_createTextVNode","_toDisplayString","message","_createElementVNode","onClick","$event","removeNotification","_hoisted_2","_createCommentVNode"],"sources":["/Users/macbookpro/project/LatedServices/frontend/src/components/Notification.vue"],"sourcesContent":["<template>\n  <div v-if=\"notifications.length > 0\" class=\"notification-container\">\n    <div \n      v-for=\"(notification, index) in notifications\" \n      :key=\"index\" \n      class=\"alert\"\n      :class=\"alertClass(notification.type)\"\n      role=\"alert\"\n    >\n      {{ notification.message }}\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" @click=\"removeNotification(index)\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Notification',\n  props: {\n    notifications: {\n      type: Array,\n      required: true\n    }\n  },\n  methods: {\n    alertClass(type) {\n      return `alert-${type}`;\n    },\n    removeNotification(index) {\n      this.notifications.splice(index, 1); // Elimina la notificación al cerrarla\n    }\n  }\n};\n</script>\n\n<style scoped>\n.notification-container {\n  position: fixed;\n  top: 10px;\n  right: 10px;\n  max-width: 300px;\n}\n\n.alert {\n  position: relative;\n  padding: 0.75rem 1.25rem;\n  margin-bottom: 10px;\n  border-radius: 0.25rem;\n}\n\n.close {\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 0.5rem;\n  cursor: pointer;\n}\n</style>\n"],"mappings":";;EAAAA,GAAA;EACuCC,KAAK,EAAC;;mBAD7C;;SACaC,MAAA,CAAAC,aAAa,CAACC,MAAM,Q,cAA/BC,mBAAA,CAaM,OAbNC,UAaM,I,kBAZJD,mBAAA,CAWME,SAAA,QAbVC,WAAA,CAGsCN,MAAA,CAAAC,aAAa,EAHnD,CAGcM,YAAY,EAAEC,KAAK;yBAD7BL,mBAAA,CAWM;MATHL,GAAG,EAAEU,KAAK;MACXT,KAAK,EALXU,eAAA,EAKY,OAAO,EACLC,QAAA,CAAAC,UAAU,CAACJ,YAAY,CAACK,IAAI;MACpCC,IAAI,EAAC;QAPXC,gBAAA,CAAAC,gBAAA,CASSR,YAAY,CAACS,OAAO,IAAG,GAC1B,iBAAAC,mBAAA,CAES;MAFDL,IAAI,EAAC,QAAQ;MAACb,KAAK,EAAC,OAAO;MAAC,YAAU,EAAC,OAAO;MAAEmB,OAAK,EAAAC,MAAA,IAAET,QAAA,CAAAU,kBAAkB,CAACZ,KAAK;uCACrFS,mBAAA,CAAuC;MAAjC,aAAW,EAAC;IAAM,GAAC,GAAO,oB,oBAXxCI,UAAA,E;sCAAAC,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}