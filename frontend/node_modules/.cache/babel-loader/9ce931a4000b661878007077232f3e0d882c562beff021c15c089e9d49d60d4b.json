{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dashboard-home\"\n};\nconst _hoisted_2 = {\n  class: \"dashboard-subtitle\"\n};\nconst _hoisted_3 = {\n  class: \"cards\"\n};\nconst _hoisted_4 = {\n  class: \"cards\"\n};\nconst _hoisted_5 = {\n  class: \"dashboard-subtitle\"\n};\nconst _hoisted_6 = {\n  class: \"cards\"\n};\nconst _hoisted_7 = {\n  key: 4,\n  class: \"stats-container\"\n};\nconst _hoisted_8 = {\n  key: 5,\n  class: \"stats-container\"\n};\nconst _hoisted_9 = {\n  key: 6,\n  class: \"error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_DashboardCard = _resolveComponent(\"DashboardCard\");\n  const _component_DashboardChart = _resolveComponent(\"DashboardChart\");\n  const _component_DashboardLineChart = _resolveComponent(\"DashboardLineChart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Vista para Super Administradores \"), $options.isSuperAdmin ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", {\n    class: \"dashboard-title\"\n  }, \"Super Admin Dashboard\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_2, \" Bienvenido, \" + _toDisplayString($options.userData.name) + \". Aquí puedes administrar todo el sistema. \", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.superAdminCards, card => {\n    return _openBlock(), _createBlock(_component_DashboardCard, {\n      key: card.title,\n      title: card.title,\n      value: card.value\n    }, null, 8 /* PROPS */, [\"title\", \"value\"]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */)) : $options.isAdmin ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Vista para Administradores \"), _cache[1] || (_cache[1] = _createElementVNode(\"h2\", {\n    class: \"dashboard-title\"\n  }, \"Admin Dashboard\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.adminCards, card => {\n    return _openBlock(), _createBlock(_component_DashboardCard, {\n      key: card.title,\n      title: card.title,\n      value: card.value\n    }, null, 8 /* PROPS */, [\"title\", \"value\"]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */)) : $options.isUser ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" Vista para Usuarios Regulares \"), _cache[2] || (_cache[2] = _createElementVNode(\"h2\", {\n    class: \"dashboard-title\"\n  }, \"User Dashboard\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_5, \" Bienvenido, \" + _toDisplayString($options.userData.name) + \". Aquí tienes tu información personalizada. \", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_DashboardCard, {\n    title: \"Tus servicios activos\",\n    value: $data.userServicesCount || 0\n  }, null, 8 /* PROPS */, [\"value\"]), _createVNode(_component_DashboardCard, {\n    title: \"Solicitudes pendientes\",\n    value: $data.userPendingCount || 0\n  }, null, 8 /* PROPS */, [\"value\"])])], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 3\n  }, [_createCommentVNode(\" Vista genérica para roles sin contenido específico \"), _cache[3] || (_cache[3] = _createElementVNode(\"h2\", {\n    class: \"dashboard-title\"\n  }, \"Dashboard\", -1 /* HOISTED */)), _cache[4] || (_cache[4] = _createElementVNode(\"p\", {\n    class: \"dashboard-subtitle\"\n  }, \" Tu rol no tiene contenido específico. \", -1 /* HOISTED */))], 64 /* STABLE_FRAGMENT */)), _createCommentVNode(\" Sección de gráficos de los datos existentes \"), ($options.isSuperAdmin || $options.isAdmin) && $data.requestsChartData.labels.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createVNode(_component_DashboardChart, {\n    title: \"Solicitudes Totales\",\n    chartData: $data.requestsChartData\n  }, null, 8 /* PROPS */, [\"chartData\"]), _createVNode(_component_DashboardChart, {\n    title: \"Servicios Activos\",\n    chartData: $data.servicesChartData\n  }, null, 8 /* PROPS */, [\"chartData\"])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Sección de gráfico para la evolución del total de usuarios \"), ($options.isSuperAdmin || $options.isAdmin) && $data.totalUsersChartData.labels.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createVNode(_component_DashboardLineChart, {\n    title: \"Evolución Total de Usuarios\",\n    chartData: $data.totalUsersChartData\n  }, null, 8 /* PROPS */, [\"chartData\"])])) : _createCommentVNode(\"v-if\", true), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","$options","isSuperAdmin","_Fragment","_createElementVNode","_hoisted_2","_toDisplayString","userData","name","_hoisted_3","_renderList","superAdminCards","card","_createBlock","_component_DashboardCard","title","value","isAdmin","_hoisted_4","adminCards","isUser","_hoisted_5","_hoisted_6","_createVNode","$data","userServicesCount","userPendingCount","requestsChartData","labels","length","_hoisted_7","_component_DashboardChart","chartData","servicesChartData","totalUsersChartData","_hoisted_8","_component_DashboardLineChart","errorMessage","_hoisted_9"],"sources":["/home/lated/LatedServices/frontend/src/views/admin/DashboardHome.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard-home\">\n    <!-- Vista para Super Administradores -->\n    <template v-if=\"isSuperAdmin\">\n      <h2 class=\"dashboard-title\">Super Admin Dashboard</h2>\n      <p class=\"dashboard-subtitle\">\n        Bienvenido, {{ userData.name }}. Aquí puedes administrar todo el sistema.\n      </p>\n      <div class=\"cards\">\n        <DashboardCard\n          v-for=\"card in superAdminCards\"\n          :key=\"card.title\"\n          :title=\"card.title\"\n          :value=\"card.value\"\n        />\n      </div>\n    </template>\n\n    <!-- Vista para Administradores -->\n    <template v-else-if=\"isAdmin\">\n      <h2 class=\"dashboard-title\">Admin Dashboard</h2>\n      <div class=\"cards\">\n        <DashboardCard\n          v-for=\"card in adminCards\"\n          :key=\"card.title\"\n          :title=\"card.title\"\n          :value=\"card.value\"\n        />\n      </div>\n    </template>\n\n    <!-- Vista para Usuarios Regulares -->\n    <template v-else-if=\"isUser\">\n      <h2 class=\"dashboard-title\">User Dashboard</h2>\n      <p class=\"dashboard-subtitle\">\n        Bienvenido, {{ userData.name }}. Aquí tienes tu información personalizada.\n      </p>\n      <div class=\"cards\">\n        <DashboardCard title=\"Tus servicios activos\" :value=\"userServicesCount || 0\" />\n        <DashboardCard title=\"Solicitudes pendientes\" :value=\"userPendingCount || 0\" />\n      </div>\n    </template>\n\n    <!-- Vista genérica para roles sin contenido específico -->\n    <template v-else>\n      <h2 class=\"dashboard-title\">Dashboard</h2>\n      <p class=\"dashboard-subtitle\">\n        Tu rol no tiene contenido específico.\n      </p>\n    </template>\n\n    <!-- Sección de gráficos de los datos existentes -->\n    <div\n      class=\"stats-container\"\n      v-if=\"(isSuperAdmin || isAdmin) && requestsChartData.labels.length\"\n    >\n      <DashboardChart title=\"Solicitudes Totales\" :chartData=\"requestsChartData\" />\n      <DashboardChart title=\"Servicios Activos\" :chartData=\"servicesChartData\" />\n    </div>\n\n    <!-- Sección de gráfico para la evolución del total de usuarios -->\n    <div\n      class=\"stats-container\"\n      v-if=\"(isSuperAdmin || isAdmin) && totalUsersChartData.labels.length\"\n    >\n      <DashboardLineChart title=\"Evolución Total de Usuarios\" :chartData=\"totalUsersChartData\" />\n    </div>\n\n    <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\n  </div>\n</template>\n\n<script>\nimport axios from \"@/plugins/axios\";\nimport DashboardCard from \"@/components/DashboardCard.vue\";\nimport DashboardChart from \"@/components/DashboardChart.vue\";\nimport DashboardLineChart from \"@/components/DashboardLineChart.vue\";\n\nexport default {\n  name: \"DashboardHome\",\n  components: { DashboardCard, DashboardChart, DashboardLineChart },\n  data() {\n    return {\n      summary: {\n        totalRequests: 0,\n        activeServices: 0,\n        pendingRequests: 0,\n        totalUsers: 0,\n        systemLogs: 0,\n      },\n      userServicesCount: 0,\n      userPendingCount: 0,\n      errorMessage: \"\",\n      // Inicializamos los datos de gráficos\n      requestsChartData: {\n        labels: [],\n        datasets: [],\n      },\n      servicesChartData: {\n        labels: [],\n        datasets: [],\n      },\n      totalUsersChartData: {\n        labels: [],\n        datasets: [],\n      },\n    };\n  },\n  computed: {\n    userData() {\n      return this.$store.getters[\"auth/userData\"] || {};\n    },\n    userRole() {\n      return this.userData.role || \"\";\n    },\n    isSuperAdmin() {\n      return this.userRole === \"superadmin\";\n    },\n    isAdmin() {\n      return this.userRole === \"admin\";\n    },\n    isUser() {\n      return this.userRole === \"user\";\n    },\n    adminCards() {\n      return [\n        { title: \"Total de Solicitudes\", value: this.summary.totalRequests || 0 },\n        { title: \"Servicios Activos\", value: this.summary.activeServices || 0 },\n        { title: \"Solicitudes Pendientes\", value: this.summary.pendingRequests || 0 },\n      ];\n    },\n    superAdminCards() {\n      return [\n        { title: \"Total de Usuarios\", value: this.summary.totalUsers || 0 },\n        { title: \"Total de Solicitudes\", value: this.summary.totalRequests || 0 },\n        { title: \"Servicios Activos\", value: this.summary.activeServices || 0 },\n        { title: \"Solicitudes Pendientes\", value: this.summary.pendingRequests || 0 },\n        { title: \"Registros del Sistema\", value: this.summary.systemLogs || 0 },\n      ];\n    },\n  },\n  created() {\n    this.fetchSummary();\n    this.fetchUserStats();\n  },\n  methods: {\n    async fetchSummary() {\n      try {\n        const response = await axios.get(\"/admin/summary\");\n        this.summary = response.data;\n\n        // Actualizamos los datos para el gráfico de solicitudes\n        this.requestsChartData = {\n          labels: [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\",\"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"],\n          datasets: [\n            {\n              label: \"Solicitudes Totales\",\n              backgroundColor: \"#345896\",\n              data: [\n                this.summary.totalRequests,\n                25,\n                40,\n                35,\n                50,\n              ],\n            },\n          ],\n        };\n\n        // Actualizamos los datos para el gráfico de servicios\n        this.servicesChartData = {\n          labels: [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"],\n          datasets: [\n            {\n              label: \"Servicios Activos\",\n              backgroundColor: \"#28a745\",\n              data: [\n                this.summary.activeServices,\n                20,\n                30,\n                35,\n                45,\n              ],\n            },\n          ],\n        };\n\n        // Supongamos que obtienes el total de usuarios a lo largo del tiempo (datos históricos)\n        // Estos datos deben provenir de tu API; aquí se simulan para el ejemplo.\n        this.totalUsersChartData = {\n          labels: [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"],\n          datasets: [\n            {\n              label: \"Total de Usuarios\",\n              borderColor: \"#FF6384\",\n              backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n              data: [100, 150, 200, 250, 500, this.summary.totalUsers || 300],\n              fill: true,\n            },\n          ],\n        };\n      } catch (error) {\n        this.errorMessage =\n          error.response?.data?.message || \"Error al cargar datos de resumen.\";\n      }\n    },\n    async fetchUserStats() {\n      try {\n        // Simulación de datos; reemplaza con la llamada a tu API si es necesario.\n        this.userServicesCount = 3;\n        this.userPendingCount = 1;\n      } catch (error) {\n        console.error(\"Error al cargar datos del usuario\", error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.dashboard-home {\n  padding: 20px;\n  text-align: center;\n}\n\n.dashboard-title {\n  font-size: 26px;\n  font-weight: bold;\n  color: #345896;\n  margin-bottom: 20px;\n  text-transform: uppercase;\n}\n\n.dashboard-subtitle {\n  font-size: 16px;\n  color: #555;\n  margin-bottom: 20px;\n}\n\n.cards {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n}\n\n.stats-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n.error {\n  margin-top: 20px;\n  color: #d9534f;\n  font-size: 14px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}