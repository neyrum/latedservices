{"ast":null,"code":"import { useStore } from \"vuex\";\nimport { useRouter } from \"vue-router\";\nimport { computed, onMounted, nextTick } from \"vue\";\nimport { Dropdown } from \"bootstrap\";\nimport defaultProfilePicture from \"@/assets/img/default-profile.jpg\"; // Imagen por defecto\n\nexport default {\n  name: \"Navbar\",\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n\n    // Computed properties para obtener datos del usuario\n    const isAuthenticated = computed(() => store.getters[\"auth/isAuthenticated\"]);\n    const userName = computed(() => store.getters[\"auth/userData\"]?.name || \"Usuario\");\n    const userProfilePicture = computed(() => store.getters[\"auth/userData\"]?.profilePicture || defaultProfilePicture);\n\n    // Computed para determinar si el usuario está en la página de \"Servicios Disponibles\"\n    const isServiciosDisponiblesPage = computed(() => router.currentRoute.value.path === \"/client/services\");\n\n    // Computed para determinar si el usuario está en la página de \"Home\"\n    const isHomePage = computed(() => router.currentRoute.value.path === \"/\");\n\n    // Método para cerrar sesión\n    const logout = () => {\n      store.dispatch(\"auth/logout\");\n      router.push(\"/login\");\n    };\n\n    // Inicializar los dropdowns de Bootstrap al montar el componente\n    onMounted(() => {\n      nextTick(() => {\n        const dropdownElement = document.querySelector(\"#navbarDropdown\");\n        const dropdownMenu = document.querySelector(\".dropdown-menu\");\n        if (dropdownElement && dropdownMenu) {\n          console.log(\"Dropdown encontrado, inicializando...\");\n          const dropdownInstance = new Dropdown(dropdownElement);\n\n          // Activar y mantener el dropdown visible\n          dropdownElement.addEventListener(\"click\", event => {\n            event.preventDefault();\n            if (!dropdownMenu.classList.contains(\"show\")) {\n              dropdownMenu.classList.add(\"show\");\n              dropdownMenu.style.display = \"block\";\n              console.log(\"Clase 'show' agregada manualmente.\");\n            } else {\n              dropdownMenu.classList.remove(\"show\");\n              dropdownMenu.style.display = \"none\";\n              console.log(\"Clase 'show' removida.\");\n            }\n            console.log(\"Clases actuales del dropdown-menu:\", dropdownMenu.classList);\n          });\n\n          // Cerrar el menú si el usuario hace clic fuera del dropdown\n          document.addEventListener(\"click\", event => {\n            if (!dropdownElement.contains(event.target) && !dropdownMenu.contains(event.target)) {\n              dropdownMenu.classList.remove(\"show\");\n              dropdownMenu.style.display = \"none\";\n              console.log(\"Dropdown cerrado al hacer clic fuera.\");\n            }\n          });\n\n          // Cerrar el menú si el usuario hace scroll\n          window.addEventListener(\"scroll\", () => {\n            dropdownMenu.classList.remove(\"show\");\n            dropdownMenu.style.display = \"none\";\n            console.log(\"Dropdown cerrado al hacer scroll.\");\n          });\n\n          // Cerrar el menú si el usuario mueve el cursor fuera del dropdown\n          dropdownMenu.addEventListener(\"mouseleave\", () => {\n            dropdownMenu.classList.remove(\"show\");\n            dropdownMenu.style.display = \"none\";\n            console.log(\"Dropdown cerrado al salir el cursor.\");\n          });\n        } else {\n          console.log(\"El dropdown no fue encontrado en el DOM.\");\n        }\n      });\n      if (isAuthenticated.value) {\n        store.dispatch(\"auth/fetchUserData\"); // Obtener datos del usuario\n      }\n    });\n    return {\n      isAuthenticated,\n      userName,\n      userProfilePicture,\n      logout,\n      isServiciosDisponiblesPage,\n      isHomePage\n    };\n  }\n};","map":{"version":3,"names":["useStore","useRouter","computed","onMounted","nextTick","Dropdown","defaultProfilePicture","name","setup","store","router","isAuthenticated","getters","userName","userProfilePicture","profilePicture","isServiciosDisponiblesPage","currentRoute","value","path","isHomePage","logout","dispatch","push","dropdownElement","document","querySelector","dropdownMenu","console","log","dropdownInstance","addEventListener","event","preventDefault","classList","contains","add","style","display","remove","target","window"],"sources":["/Users/macbookpro/project/LatedServices/frontend/src/components/Navbar.vue"],"sourcesContent":["<template>\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\">\n    <div class=\"container\">\n      <router-link class=\"navbar-brand fw-bold text-uppercase\" to=\"/\">Servicios de Lated</router-link>\n\n      <!-- Botón para dispositivos móviles -->\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <!-- Contenido del Navbar -->\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav ms-auto\">\n\n      <!-- Accesos directos a secciones de Home.vue, ocultos si está en \"Servicios Disponibles\" -->\n      <template v-if=\"!isServiciosDisponiblesPage\">\n\n        <!-- Accesos directos a secciones de Home.vue -->\n        <li class=\"nav-item\"><a class=\"nav-link\" href=\"#services\">Servicios</a></li>\n        <li class=\"nav-item\"><a class=\"nav-link\" href=\"#portfolio\">Portafolio</a></li>\n        <li class=\"nav-item\"><a class=\"nav-link\" href=\"#about\">Sobre Nosotros</a></li>\n        <li class=\"nav-item\"><a class=\"nav-link\"  href=\"#team\">Equipo</a></li>\n        <li class=\"nav-item\"><a class=\"nav-link\" href=\"#contact\">Contacto</a></li>\n      </template>\n\n      <!-- Icono de casa para ir al Home -->\n      <li class=\"nav-item\" v-if=\"!isHomePage\">\n        <router-link class=\"nav-link\" to=\"/\">\n        <i class=\"fas fa-home text-white fs-4\"></i>\n        </router-link>\n      </li>\n\n        <!-- Separador visual correctamente alineado -->\n        <li class=\"nav-item d-none d-lg-block align-items-center mt-2\">\n        <span class=\"text-white mx-3\">|</span>\n        </li>\n\n          <!-- Botones de Login y Registro si el usuario NO está autenticado -->\n          <li class=\"nav-item ms-2\" v-if=\"!isAuthenticated\">\n            <router-link class=\"nav-link btn-custom\" to=\"/login\">Accede</router-link>\n          </li>\n          <li class=\"nav-item\" ms-2 v-if=\"!isAuthenticated\">\n            <router-link class=\"nav-link btn-custom\" to=\"/register\">Regístrate</router-link>\n          </li>\n\n          <!-- Menú desplegable si el usuario SÍ está autenticado -->\n          <li class=\"nav-item dropdown ms-3 d-flex align-items-center\" v-if=\"isAuthenticated\">\n\n            <span class=\"text-light me-2\">Bienvenido, {{ userName }}</span>\n            <a\n              class=\"nav-link dropdown-toggle d-flex align-items-center\"\n              href=\"#\"\n              id=\"navbarDropdown\"\n              role=\"button\"\n              data-bs-toggle=\"dropdown\"\n              aria-expanded=\"false\"\n            >\n              <img\n                :src=\"userProfilePicture\"\n                alt=\"Foto de Perfil\"\n                class=\"rounded-circle me-2\"\n                width=\"40\"\n                height=\"40\"\n              />\n            </a>\n            <ul class=\"dropdown-menu dropdown-menu-end position-absolute mt-2\" aria-labelledby=\"navbarDropdown\">\n              <li><router-link class=\"dropdown-item\" to=\"/profile\">Mi Perfil</router-link></li>\n              <li><router-link class=\"dropdown-item\" to=\"/dashboard\">Dashboard</router-link></li>\n              <li><router-link class=\"dropdown-item\" to=\"/client/services\">Servicios Disponibles</router-link></li>\n              <li><button class=\"dropdown-item\" @click=\"logout\">Cerrar Sesión</button></li>\n            </ul>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</template>\n\n<script>\nimport { useStore } from \"vuex\";\nimport { useRouter } from \"vue-router\";\nimport { computed, onMounted, nextTick } from \"vue\";\nimport { Dropdown } from \"bootstrap\";\nimport defaultProfilePicture from \"@/assets/img/default-profile.jpg\"; // Imagen por defecto\n\nexport default {\n  name: \"Navbar\",\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n\n    // Computed properties para obtener datos del usuario\n    const isAuthenticated = computed(() => store.getters[\"auth/isAuthenticated\"]);\n    const userName = computed(() => store.getters[\"auth/userData\"]?.name || \"Usuario\");\n    const userProfilePicture = computed(() => store.getters[\"auth/userData\"]?.profilePicture || defaultProfilePicture);\n\n    // Computed para determinar si el usuario está en la página de \"Servicios Disponibles\"\n    const isServiciosDisponiblesPage = computed(() => router.currentRoute.value.path === \"/client/services\");\n\n    // Computed para determinar si el usuario está en la página de \"Home\"\n    const isHomePage = computed(() => router.currentRoute.value.path === \"/\");\n\n\n    // Método para cerrar sesión\n    const logout = () => {\n      store.dispatch(\"auth/logout\");\n      router.push(\"/login\");\n    };\n\n    // Inicializar los dropdowns de Bootstrap al montar el componente\n    onMounted(() => {\n      nextTick(() => {\n        const dropdownElement = document.querySelector(\"#navbarDropdown\");\n        const dropdownMenu = document.querySelector(\".dropdown-menu\");\n\n        if (dropdownElement && dropdownMenu) {\n          console.log(\"Dropdown encontrado, inicializando...\");\n          const dropdownInstance = new Dropdown(dropdownElement);\n\n          // Activar y mantener el dropdown visible\n          dropdownElement.addEventListener(\"click\", (event) => {\n            event.preventDefault();\n\n            if (!dropdownMenu.classList.contains(\"show\")) {\n              dropdownMenu.classList.add(\"show\");\n              dropdownMenu.style.display = \"block\";\n              console.log(\"Clase 'show' agregada manualmente.\");\n            } else {\n              dropdownMenu.classList.remove(\"show\");\n              dropdownMenu.style.display = \"none\";\n              console.log(\"Clase 'show' removida.\");\n            }\n\n            console.log(\"Clases actuales del dropdown-menu:\", dropdownMenu.classList);\n          });\n\n          // Cerrar el menú si el usuario hace clic fuera del dropdown\n          document.addEventListener(\"click\", (event) => {\n            if (!dropdownElement.contains(event.target) && !dropdownMenu.contains(event.target)) {\n              dropdownMenu.classList.remove(\"show\");\n              dropdownMenu.style.display = \"none\";\n              console.log(\"Dropdown cerrado al hacer clic fuera.\");\n            }\n          });\n\n          // Cerrar el menú si el usuario hace scroll\n          window.addEventListener(\"scroll\", () => {\n            dropdownMenu.classList.remove(\"show\");\n            dropdownMenu.style.display = \"none\";\n            console.log(\"Dropdown cerrado al hacer scroll.\");\n          });\n\n          // Cerrar el menú si el usuario mueve el cursor fuera del dropdown\n          dropdownMenu.addEventListener(\"mouseleave\", () => {\n            dropdownMenu.classList.remove(\"show\");\n            dropdownMenu.style.display = \"none\";\n            console.log(\"Dropdown cerrado al salir el cursor.\");\n          });\n        } else {\n          console.log(\"El dropdown no fue encontrado en el DOM.\");\n        }\n      });\n\n      if (isAuthenticated.value) {\n        store.dispatch(\"auth/fetchUserData\"); // Obtener datos del usuario\n      }\n    });\n\n    return { isAuthenticated, userName, userProfilePicture, logout, isServiciosDisponiblesPage, isHomePage };\n  },\n};\n</script>\n\n<style scoped>\n.navbar {\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.navbar-brand {\n  font-size: 1.5rem;\n  letter-spacing: 1px;\n}\n\n.btn-custom {\n  color:rgb(255, 255, 255);\n  border-radius: 25px;\n  padding: 8px 20px;\n  transition: all 0.3s ease;\n}\n\n.btn-custom:hover {\n  color: rgb(108, 233, 255);\n}\n\n.nav-item {\n  margin-bottom: 10px;\n}\n\n.dropdown-menu {\n  position: absolute !important;\n  top: 50px;\n  left: auto;\n  right: 0;\n  z-index: 1050;\n  display: none;\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity 0.3s ease-in-out;\n}\n\n.dropdown-menu.show {\n  display: block !important;\n  opacity: 1;\n  visibility: visible;\n}\n\nimg.rounded-circle {\n  object-fit: cover;\n}\n\n@media (min-width: 768px) {\n  .nav-item {\n    margin-bottom: 0;\n  }\n  .me-3 {\n    margin-right: 10px;\n  }\n  .ms-3 {\n    margin-left: 10px;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}