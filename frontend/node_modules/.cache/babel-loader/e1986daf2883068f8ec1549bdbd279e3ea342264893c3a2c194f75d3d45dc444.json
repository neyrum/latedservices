{"ast":null,"code":"import axios from \"@/plugins/axios\";\nimport DashboardCard from \"@/components/DashboardCard.vue\";\nimport DashboardChart from \"@/components/DashboardChart.vue\";\nimport DashboardLineChart from \"@/components/DashboardLineChart.vue\";\nexport default {\n  name: \"DashboardHome\",\n  components: {\n    DashboardCard,\n    DashboardChart,\n    DashboardLineChart\n  },\n  data() {\n    return {\n      summary: {\n        totalRequests: 0,\n        activeServices: 0,\n        pendingRequests: 0,\n        totalUsers: 0,\n        systemLogs: 0\n      },\n      userServicesCount: 0,\n      userPendingCount: 0,\n      errorMessage: \"\",\n      // Inicializamos los datos de gráficos\n      requestsChartData: {\n        labels: [],\n        datasets: []\n      },\n      servicesChartData: {\n        labels: [],\n        datasets: []\n      },\n      totalUsersChartData: {\n        labels: [],\n        datasets: []\n      }\n    };\n  },\n  computed: {\n    userData() {\n      return this.$store.getters[\"auth/userData\"] || {};\n    },\n    userRole() {\n      return this.userData.role || \"\";\n    },\n    isSuperAdmin() {\n      return this.userRole === \"superadmin\";\n    },\n    isAdmin() {\n      return this.userRole === \"admin\";\n    },\n    isUser() {\n      return this.userRole === \"user\";\n    },\n    adminCards() {\n      return [{\n        title: \"Total de Solicitudes\",\n        value: this.summary.totalRequests || 0\n      }, {\n        title: \"Servicios Activos\",\n        value: this.summary.activeServices || 0\n      }, {\n        title: \"Solicitudes Pendientes\",\n        value: this.summary.pendingRequests || 0\n      }];\n    },\n    superAdminCards() {\n      return [{\n        title: \"Total de Usuarios\",\n        value: this.summary.totalUsers || 0\n      }, {\n        title: \"Total de Solicitudes\",\n        value: this.summary.totalRequests || 0\n      }, {\n        title: \"Servicios Activos\",\n        value: this.summary.activeServices || 0\n      }, {\n        title: \"Solicitudes Pendientes\",\n        value: this.summary.pendingRequests || 0\n      }, {\n        title: \"Registros del Sistema\",\n        value: this.summary.systemLogs || 0\n      }];\n    }\n  },\n  created() {\n    this.fetchSummary();\n    this.fetchUserStats();\n  },\n  methods: {\n    async fetchSummary() {\n      try {\n        const response = await axios.get(\"/admin/summary\");\n        this.summary = response.data;\n\n        // Actualizamos los datos para el gráfico de solicitudes\n        this.requestsChartData = {\n          labels: [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"],\n          datasets: [{\n            label: \"Solicitudes Totales\",\n            backgroundColor: \"#345896\",\n            data: [this.summary.totalRequests, 25, 40, 35, 50]\n          }]\n        };\n\n        // Actualizamos los datos para el gráfico de servicios\n        this.servicesChartData = {\n          labels: [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"],\n          datasets: [{\n            label: \"Servicios Activos\",\n            backgroundColor: \"#28a745\",\n            data: [this.summary.activeServices, 20, 30, 35, 45]\n          }]\n        };\n\n        // Supongamos que obtienes el total de usuarios a lo largo del tiempo (datos históricos)\n        // Estos datos deben provenir de tu API; aquí se simulan para el ejemplo.\n        this.totalUsersChartData = {\n          labels: [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"],\n          datasets: [{\n            label: \"Total de Usuarios\",\n            borderColor: \"#FF6384\",\n            backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n            data: [100, 150, 200, 250, 500, this.summary.totalUsers || 300],\n            fill: true\n          }]\n        };\n      } catch (error) {\n        this.errorMessage = error.response?.data?.message || \"Error al cargar datos de resumen.\";\n      }\n    },\n    async fetchUserStats() {\n      try {\n        // Simulación de datos; reemplaza con la llamada a tu API si es necesario.\n        this.userServicesCount = 3;\n        this.userPendingCount = 1;\n      } catch (error) {\n        console.error(\"Error al cargar datos del usuario\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","DashboardCard","DashboardChart","DashboardLineChart","name","components","data","summary","totalRequests","activeServices","pendingRequests","totalUsers","systemLogs","userServicesCount","userPendingCount","errorMessage","requestsChartData","labels","datasets","servicesChartData","totalUsersChartData","computed","userData","$store","getters","userRole","role","isSuperAdmin","isAdmin","isUser","adminCards","title","value","superAdminCards","created","fetchSummary","fetchUserStats","methods","response","get","label","backgroundColor","borderColor","fill","error","message","console"],"sources":["/home/lated/LatedServices/frontend/src/views/admin/DashboardHome.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard-home\">\n    <!-- Vista para Super Administradores -->\n    <template v-if=\"isSuperAdmin\">\n      <h2 class=\"dashboard-title\">Super Admin Dashboard</h2>\n      <p class=\"dashboard-subtitle\">\n        Bienvenido, {{ userData.name }}. Aquí puedes administrar todo el sistema.\n      </p>\n      <div class=\"cards\">\n        <DashboardCard\n          v-for=\"card in superAdminCards\"\n          :key=\"card.title\"\n          :title=\"card.title\"\n          :value=\"card.value\"\n        />\n      </div>\n    </template>\n\n    <!-- Vista para Administradores -->\n    <template v-else-if=\"isAdmin\">\n      <h2 class=\"dashboard-title\">Admin Dashboard</h2>\n      <div class=\"cards\">\n        <DashboardCard\n          v-for=\"card in adminCards\"\n          :key=\"card.title\"\n          :title=\"card.title\"\n          :value=\"card.value\"\n        />\n      </div>\n    </template>\n\n    <!-- Vista para Usuarios Regulares -->\n    <template v-else-if=\"isUser\">\n      <h2 class=\"dashboard-title\">User Dashboard</h2>\n      <p class=\"dashboard-subtitle\">\n        Bienvenido, {{ userData.name }}. Aquí tienes tu información personalizada.\n      </p>\n      <div class=\"cards\">\n        <DashboardCard title=\"Tus servicios activos\" :value=\"userServicesCount || 0\" />\n        <DashboardCard title=\"Solicitudes pendientes\" :value=\"userPendingCount || 0\" />\n      </div>\n    </template>\n\n    <!-- Vista genérica para roles sin contenido específico -->\n    <template v-else>\n      <h2 class=\"dashboard-title\">Dashboard</h2>\n      <p class=\"dashboard-subtitle\">\n        Tu rol no tiene contenido específico.\n      </p>\n    </template>\n\n    <!-- Sección de gráficos de los datos existentes -->\n    <div\n      class=\"stats-container\"\n      v-if=\"(isSuperAdmin || isAdmin) && requestsChartData.labels.length\"\n    >\n      <DashboardChart title=\"Solicitudes Totales\" :chartData=\"requestsChartData\" />\n      <DashboardChart title=\"Servicios Activos\" :chartData=\"servicesChartData\" />\n    </div>\n\n    <!-- Sección de gráfico para la evolución del total de usuarios -->\n    <div\n      class=\"stats-container\"\n      v-if=\"(isSuperAdmin || isAdmin) && totalUsersChartData.labels.length\"\n    >\n      <DashboardLineChart title=\"Evolución Total de Usuarios\" :chartData=\"totalUsersChartData\" />\n    </div>\n\n    <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\n  </div>\n</template>\n\n<script>\nimport axios from \"@/plugins/axios\";\nimport DashboardCard from \"@/components/DashboardCard.vue\";\nimport DashboardChart from \"@/components/DashboardChart.vue\";\nimport DashboardLineChart from \"@/components/DashboardLineChart.vue\";\n\nexport default {\n  name: \"DashboardHome\",\n  components: { DashboardCard, DashboardChart, DashboardLineChart },\n  data() {\n    return {\n      summary: {\n        totalRequests: 0,\n        activeServices: 0,\n        pendingRequests: 0,\n        totalUsers: 0,\n        systemLogs: 0,\n      },\n      userServicesCount: 0,\n      userPendingCount: 0,\n      errorMessage: \"\",\n      // Inicializamos los datos de gráficos\n      requestsChartData: {\n        labels: [],\n        datasets: [],\n      },\n      servicesChartData: {\n        labels: [],\n        datasets: [],\n      },\n      totalUsersChartData: {\n        labels: [],\n        datasets: [],\n      },\n    };\n  },\n  computed: {\n    userData() {\n      return this.$store.getters[\"auth/userData\"] || {};\n    },\n    userRole() {\n      return this.userData.role || \"\";\n    },\n    isSuperAdmin() {\n      return this.userRole === \"superadmin\";\n    },\n    isAdmin() {\n      return this.userRole === \"admin\";\n    },\n    isUser() {\n      return this.userRole === \"user\";\n    },\n    adminCards() {\n      return [\n        { title: \"Total de Solicitudes\", value: this.summary.totalRequests || 0 },\n        { title: \"Servicios Activos\", value: this.summary.activeServices || 0 },\n        { title: \"Solicitudes Pendientes\", value: this.summary.pendingRequests || 0 },\n      ];\n    },\n    superAdminCards() {\n      return [\n        { title: \"Total de Usuarios\", value: this.summary.totalUsers || 0 },\n        { title: \"Total de Solicitudes\", value: this.summary.totalRequests || 0 },\n        { title: \"Servicios Activos\", value: this.summary.activeServices || 0 },\n        { title: \"Solicitudes Pendientes\", value: this.summary.pendingRequests || 0 },\n        { title: \"Registros del Sistema\", value: this.summary.systemLogs || 0 },\n      ];\n    },\n  },\n  created() {\n    this.fetchSummary();\n    this.fetchUserStats();\n  },\n  methods: {\n    async fetchSummary() {\n      try {\n        const response = await axios.get(\"/admin/summary\");\n        this.summary = response.data;\n\n        // Actualizamos los datos para el gráfico de solicitudes\n        this.requestsChartData = {\n          labels: [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\",\"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"],\n          datasets: [\n            {\n              label: \"Solicitudes Totales\",\n              backgroundColor: \"#345896\",\n              data: [\n                this.summary.totalRequests,\n                25,\n                40,\n                35,\n                50,\n              ],\n            },\n          ],\n        };\n\n        // Actualizamos los datos para el gráfico de servicios\n        this.servicesChartData = {\n          labels: [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"],\n          datasets: [\n            {\n              label: \"Servicios Activos\",\n              backgroundColor: \"#28a745\",\n              data: [\n                this.summary.activeServices,\n                20,\n                30,\n                35,\n                45,\n              ],\n            },\n          ],\n        };\n\n        // Supongamos que obtienes el total de usuarios a lo largo del tiempo (datos históricos)\n        // Estos datos deben provenir de tu API; aquí se simulan para el ejemplo.\n        this.totalUsersChartData = {\n          labels: [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"],\n          datasets: [\n            {\n              label: \"Total de Usuarios\",\n              borderColor: \"#FF6384\",\n              backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n              data: [100, 150, 200, 250, 500, this.summary.totalUsers || 300],\n              fill: true,\n            },\n          ],\n        };\n      } catch (error) {\n        this.errorMessage =\n          error.response?.data?.message || \"Error al cargar datos de resumen.\";\n      }\n    },\n    async fetchUserStats() {\n      try {\n        // Simulación de datos; reemplaza con la llamada a tu API si es necesario.\n        this.userServicesCount = 3;\n        this.userPendingCount = 1;\n      } catch (error) {\n        console.error(\"Error al cargar datos del usuario\", error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.dashboard-home {\n  padding: 20px;\n  text-align: center;\n}\n\n.dashboard-title {\n  font-size: 26px;\n  font-weight: bold;\n  color: #345896;\n  margin-bottom: 20px;\n  text-transform: uppercase;\n}\n\n.dashboard-subtitle {\n  font-size: 16px;\n  color: #555;\n  margin-bottom: 20px;\n}\n\n.cards {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n}\n\n.stats-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n.error {\n  margin-top: 20px;\n  color: #d9534f;\n  font-size: 14px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}