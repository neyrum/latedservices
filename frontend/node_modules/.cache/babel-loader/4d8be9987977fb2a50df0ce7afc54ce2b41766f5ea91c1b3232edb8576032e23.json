{"ast":null,"code":"import axios from \"@/plugins/axios\";\nexport default {\n  name: \"RequestDetails\",\n  data() {\n    return {\n      isLoading: false,\n      errorMessage: \"\",\n      successMessage: \"\",\n      request: {},\n      newStatus: \"\"\n    };\n  },\n  created() {\n    this.fetchRequest();\n  },\n  computed: {\n    allowedTransitions() {\n      if (!this.request.status) return [];\n      const current = this.request.status.toLowerCase();\n      const transitions = {\n        pendiente: [\"aprobado\", \"rechazado\"],\n        aprobado: [\"en_progreso\"],\n        en_progreso: [\"completado\", \"cancelado\"]\n      };\n      return transitions[current] || [];\n    }\n  },\n  methods: {\n    async fetchRequest() {\n      this.isLoading = true;\n      try {\n        const id = this.$route.params.id;\n        const response = await axios.get(`/requests/${id}`, {\n          headers: {\n            Authorization: \"Bearer \" + this.$store.getters[\"auth/token\"]\n          }\n        });\n        this.request = response.data.data;\n        this.newStatus = this.request.status;\n      } catch (error) {\n        this.errorMessage = error.response?.data?.message || \"Error al cargar los detalles.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async updateStatus() {\n      if (!this.newStatus || this.newStatus === this.request.status) {\n        this.successMessage = \"\";\n        return;\n      }\n      try {\n        await axios.put(`/requests/${this.request.id}/status`, {\n          status: this.newStatus\n        }, {\n          headers: {\n            Authorization: \"Bearer \" + this.$store.getters[\"auth/token\"]\n          }\n        });\n        this.request.status = this.newStatus;\n        this.successMessage = \"¡El estado se actualizó correctamente!\";\n        setTimeout(() => {\n          this.successMessage = \"\";\n        }, 3000);\n      } catch (error) {\n        this.errorMessage = error.response?.data?.message || \"Error al actualizar el estado.\";\n      }\n    },\n    capitalizeStatus(status) {\n      const statusMap = {\n        \"en_progreso\": \"Activo\" // Cambia \"En Progreso\" por \"Activo\"\n      };\n      return statusMap[status] || status.charAt(0).toUpperCase() + status.slice(1);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","isLoading","errorMessage","successMessage","request","newStatus","created","fetchRequest","computed","allowedTransitions","status","current","toLowerCase","transitions","pendiente","aprobado","en_progreso","methods","id","$route","params","response","get","headers","Authorization","$store","getters","error","message","updateStatus","put","setTimeout","capitalizeStatus","statusMap","charAt","toUpperCase","slice"],"sources":["/home/lated/LatedServices/frontend/src/views/admin/RequestDetails.vue"],"sourcesContent":["<template>\n  <div class=\"request-details container py-3\">\n    <h3 class=\"text-center mb-4\">Detalles de la Solicitud #{{ request.id }}</h3>\n    \n    <!-- Área para actualizar estado (barra superior) -->\n    <div v-if=\"!isLoading && request.id\" class=\"mb-4\">\n      <div class=\"d-flex justify-content-end align-items-center\">\n        <select\n          v-model=\"newStatus\"\n          class=\"form-select form-select-sm w-auto me-2\"\n          :disabled=\"allowedTransitions.length === 0\"\n        >\n          <option disabled value=\"\">Nuevo Estado</option>\n          <option\n            v-for=\"status in allowedTransitions\"\n            :key=\"status\"\n            :value=\"status\"\n          >\n            {{ capitalizeStatus(status) }}\n          </option>\n        </select>\n        <button\n          class=\"btn btn-primary btn-sm\"\n          @click=\"updateStatus\"\n          :disabled=\"newStatus === request.status || allowedTransitions.length === 0\"\n        >\n          Actualizar\n        </button>\n      </div>\n      <div v-if=\"successMessage\" class=\"alert alert-success mt-2 text-center p-1\">\n        {{ successMessage }}\n      </div>\n    </div>\n    \n    <!-- Spinner y mensaje de error -->\n    <div v-if=\"isLoading\" class=\"text-center my-4\">\n      <div class=\"spinner-border\" role=\"status\">\n        <span class=\"visually-hidden\">Cargando...</span>\n      </div>\n    </div>\n    <div v-if=\"errorMessage\" class=\"alert alert-danger text-center p-2\">\n      {{ errorMessage }}\n    </div>\n    \n    <!-- Contenido Principal (cuando ya se cargó la solicitud) -->\n    <div v-if=\"!isLoading && request.id\">\n      <!-- Primera fila: Dos tarjetas en línea -->\n      <div class=\"row mb-3\">\n        <!-- Columna Izquierda: Datos del Cliente y Dirección -->\n        <div class=\"col-md-6 mb-3 d-flex justify-content-center\">\n          <div class=\"card flex-fill uniform-card\">\n            <!-- En este header se centra el título; se coloca un ícono de flecha en la esquina izquierda -->\n            <div class=\"card-header p-2 center-header\" :style=\"{ backgroundColor: '#455A64', color: '#fff', position: 'relative' }\">\n              <router-link class=\"back-icon\" :to=\"'/dashboard'\">\n                <i class=\"fas fa-arrow-left\"></i>\n              </router-link>\n              <span class=\"header-title\">Datos del Cliente y Dirección</span>\n            </div>\n            <div class=\"card-body p-2\">\n              <div class=\"mb-2\">\n                <h6 class=\"mb-1\">Cliente</h6>\n                <p class=\"mb-1\" v-if=\"request.client\">\n                  <strong>Nombre:</strong> {{ request.client.name }}\n                </p>\n                <p class=\"mb-1\" v-if=\"request.client\">\n                  <strong>Correo:</strong> {{ request.client.email }}\n                </p>\n                <p class=\"mb-0\" v-if=\"request.client\">\n                  <strong>Teléfono:</strong> {{ request.client.phone }}\n                </p>\n              </div>\n              <hr class=\"my-1\">\n              <div>\n                <h6 class=\"mb-1\">Dirección</h6>\n                <p class=\"mb-1\" v-if=\"request.address\">\n                  <strong>Calle:</strong> {{ request.address.street }}\n                </p>\n                <p class=\"mb-0\" v-if=\"request.address\">\n                  <strong>Ciudad:</strong> {{ request.address.city }}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Columna Derecha: Información Básica y Administrador -->\n        <div class=\"col-md-6 mb-3 d-flex justify-content-center\">\n          <div class=\"card flex-fill uniform-card\">\n            <div class=\"card-header p-2 center-header\" :style=\"{ backgroundColor: '#2E3B55', color: '#fff' }\">\n              <span class=\"header-title\">Información Básica y Administrador</span>\n            </div>\n            <div class=\"card-body p-2\">\n              <div class=\"mb-2\">\n                <h6 class=\"mb-1\">Información Básica</h6>\n                <p class=\"mb-1\"><strong>Estado:</strong> {{ request.status }}</p>\n                <p class=\"mb-0\"><strong>Fecha Preferida:</strong> {{ new Date(request.preferredDate).toLocaleDateString() }}</p>\n              </div>\n              <hr class=\"my-1\">\n              <div>\n                <h6 class=\"mb-1\">Administrador</h6>\n                <p class=\"mb-0\" v-if=\"request.admin\">\n                  <strong>Nombre:</strong> {{ request.admin.name }}\n                </p>\n                <p class=\"mb-0\" v-else>No asignado</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Segunda fila: Servicio Solicitado | Detalles de la Solicitud -->\n      <div class=\"row mb-3\">\n        <!-- Columna Izquierda: Servicio Solicitado -->\n        <div class=\"col-md-6 mb-3 d-flex justify-content-center\">\n          <div class=\"card flex-fill uniform-card\">\n            <div class=\"card-header p-2 center-header\" :style=\"{ backgroundColor: '#00796B', color: '#fff' }\">\n              <span class=\"header-title\">Servicio Solicitado</span>\n            </div>\n            <div class=\"card-body p-2\">\n              <p class=\"mb-1\" v-if=\"request.service\">\n                <strong>Nombre:</strong> {{ request.service.name }}\n              </p>\n              <p class=\"mb-1\" v-if=\"request.service\">\n                <strong>Descripción:</strong> {{ request.service.description }}\n              </p>\n              <p class=\"mb-0\" v-if=\"request.service\">\n                <strong>Precio:</strong> ${{ request.service.price }}\n              </p>\n            </div>\n          </div>\n        </div>\n        <!-- Columna Derecha: Detalles de la Solicitud -->\n        <div class=\"col-md-6 mb-3 d-flex justify-content-center\">\n          <div class=\"card flex-fill uniform-card\">\n            <div class=\"card-header p-2 center-header\" :style=\"{ backgroundColor: '#546E7A', color: '#fff' }\">\n              <span class=\"header-title\">Detalles de la Solicitud</span>\n            </div>\n            <div class=\"card-body p-2\">\n              <p class=\"mb-0\">{{ request.details }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"@/plugins/axios\";\nexport default {\n  name: \"RequestDetails\",\n  data() {\n    return {\n      isLoading: false,\n      errorMessage: \"\",\n      successMessage: \"\",\n      request: {},\n      newStatus: \"\"\n    };\n  },\n  created() {\n    this.fetchRequest();\n  },\n  computed: {\n    allowedTransitions() {\n      if (!this.request.status) return [];\n      const current = this.request.status.toLowerCase();\n      const transitions = {\n        pendiente: [\"aprobado\", \"rechazado\"],\n        aprobado: [\"en_progreso\"],\n        en_progreso: [\"completado\", \"cancelado\"]\n      };\n      return transitions[current] || [];\n    }\n  },\n  methods: {\n    async fetchRequest() {\n      this.isLoading = true;\n      try {\n        const id = this.$route.params.id;\n        const response = await axios.get(`/requests/${id}`, {\n          headers: { Authorization: \"Bearer \" + this.$store.getters[\"auth/token\"] }\n        });\n        this.request = response.data.data;\n        this.newStatus = this.request.status;\n      } catch (error) {\n        this.errorMessage =\n          error.response?.data?.message || \"Error al cargar los detalles.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async updateStatus() {\n      if (!this.newStatus || this.newStatus === this.request.status) {\n        this.successMessage = \"\";\n        return;\n      }\n      try {\n        await axios.put(\n          `/requests/${this.request.id}/status`,\n          { status: this.newStatus },\n          { headers: { Authorization: \"Bearer \" + this.$store.getters[\"auth/token\"] } }\n        );\n        this.request.status = this.newStatus;\n        this.successMessage = \"¡El estado se actualizó correctamente!\";\n        setTimeout(() => {\n          this.successMessage = \"\";\n        }, 3000);\n      } catch (error) {\n        this.errorMessage =\n          error.response?.data?.message || \"Error al actualizar el estado.\";\n      }\n    },\n    capitalizeStatus(status) {\n  const statusMap = {\n    \"en_progreso\": \"Activo\" // Cambia \"En Progreso\" por \"Activo\"\n  };\n  return statusMap[status] || status.charAt(0).toUpperCase() + status.slice(1);\n\n    }\n  }\n};\n</script>\n\n<style scoped>\n.request-details {\n  margin-top: 20px;\n  padding-bottom: 20px;\n}\n\n/* Tarjetas uniformes */\n.uniform-card {\n  width: 100%;\n  min-height: 220px;\n}\n.card {\n  border: none;\n  border-radius: 8px;\n  overflow: hidden;\n}\n.center-header {\n  text-align: center;\n  position: relative;\n}\n.header-title {\n  display: block;\n  width: 100%;\n}\n.card-header {\n  font-size: 1rem;\n  padding: 8px 12px;\n}\n.card-body {\n  padding: 8px 12px;\n  font-size: 0.9rem;\n}\n.back-icon {\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n  color: #fff;\n  font-size: 1.2rem;\n  text-decoration: none;\n  transition: color 0.3s;\n}\n.back-icon:hover {\n  color: #ccc;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}