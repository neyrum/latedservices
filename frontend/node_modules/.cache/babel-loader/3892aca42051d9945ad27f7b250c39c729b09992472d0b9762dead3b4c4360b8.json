{"ast":null,"code":"import { io } from \"socket.io-client\";\nimport axios from \"@/plugins/axios\";\nexport default {\n  name: \"UserNotifications\",\n  data() {\n    return {\n      notificationsOpen: false,\n      notifications: [],\n      socket: null\n    };\n  },\n  computed: {\n    unreadCount() {\n      return this.notifications.filter(n => n.status === \"unread\").length;\n    }\n  },\n  async mounted() {\n    await this.fetchNotifications();\n\n    // Inicializar conexión con Socket.io\n    this.socket = io(\"http://localhost:3000\");\n\n    // Escuchar nuevas notificaciones en tiempo real\n    this.socket.on(`notification-${this.getUserId()}`, newNotification => {\n      this.notifications.unshift(newNotification); // Agregar la nueva notificación a la lista\n    });\n    document.addEventListener(\"click\", this.handleClickOutside);\n    window.addEventListener(\"scroll\", this.handleScroll);\n    window.addEventListener(\"closeNotifications\", this.handleCloseNotifications);\n  },\n  beforeDestroy() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n    document.removeEventListener(\"click\", this.handleClickOutside);\n    window.removeEventListener(\"scroll\", this.handleScroll);\n    window.removeEventListener(\"closeNotifications\", this.handleCloseNotifications);\n  },\n  methods: {\n    alertClass(type) {\n      return `alert-${type || \"info\"}`;\n    },\n    async toggleNotifications() {\n      this.notificationsOpen = !this.notificationsOpen;\n      if (this.notificationsOpen) {\n        await this.fetchNotifications();\n      }\n    },\n    async fetchNotifications() {\n      try {\n        const response = await axios.get(\"/notifications\");\n        this.notifications = response.data;\n      } catch (error) {\n        console.error(\"❌ Error obteniendo notificaciones:\", error);\n      }\n    },\n    async deleteNotification(notificationId) {\n      try {\n        await axios.delete(`/notifications/${notificationId}`);\n        this.notifications = this.notifications.filter(n => n.id !== notificationId);\n      } catch (error) {\n        console.error(\"❌ Error eliminando la notificación:\", error);\n      }\n    },\n    getUserId() {\n      // Extrae el userId de alguna fuente (ejemplo: store Vuex o localStorage)\n      return 1; // Ajusta esto para obtener el ID del usuario actual\n    },\n    handleClickOutside(event) {\n      if (!this.$el.contains(event.target)) {\n        this.notificationsOpen = false;\n      }\n    },\n    handleScroll() {\n      this.notificationsOpen = false;\n    },\n    handleCloseNotifications() {\n      this.notificationsOpen = false;\n    }\n  }\n};","map":{"version":3,"names":["io","axios","name","data","notificationsOpen","notifications","socket","computed","unreadCount","filter","n","status","length","mounted","fetchNotifications","on","getUserId","newNotification","unshift","document","addEventListener","handleClickOutside","window","handleScroll","handleCloseNotifications","beforeDestroy","disconnect","removeEventListener","methods","alertClass","type","toggleNotifications","response","get","error","console","deleteNotification","notificationId","delete","id","event","$el","contains","target"],"sources":["/home/lated/LatedServices/frontend/src/components/UserNotifications.vue"],"sourcesContent":["<template>\n  <div class=\"notifications\">\n    <button @click=\"toggleNotifications\" class=\"notification-btn\">\n      <i class=\"fas fa-bell\"></i>\n      <span v-if=\"unreadCount > 0\" class=\"badge\">{{ unreadCount }}</span>\n    </button>\n    <div v-if=\"notificationsOpen\" class=\"notification-container\">\n      <template v-if=\"notifications.length > 0\">\n        <div \n          v-for=\"(notification, index) in notifications\" \n          :key=\"notification.id\" \n          class=\"alert\"\n          :class=\"alertClass(notification.type)\"\n          role=\"alert\"\n        >\n          {{ notification.message }}\n          <button \n            type=\"button\" \n            class=\"close\" \n            aria-label=\"Close\" \n            @click=\"deleteNotification(notification.id)\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n      </template>\n      <template v-else>\n        <div class=\"empty-message\">\n          No hay notificaciones.\n        </div>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { io } from \"socket.io-client\";\nimport axios from \"@/plugins/axios\";\n\nexport default {\n  name: \"UserNotifications\",\n  data() {\n    return {\n      notificationsOpen: false,\n      notifications: [],\n      socket: null\n    };\n  },\n  computed: {\n    unreadCount() {\n      return this.notifications.filter(n => n.status === \"unread\").length;\n    }\n  },\n  async mounted() {\n    await this.fetchNotifications();\n    \n    // Inicializar conexión con Socket.io\n    this.socket = io(\"http://localhost:3000\");\n\n    // Escuchar nuevas notificaciones en tiempo real\n    this.socket.on(`notification-${this.getUserId()}`, (newNotification) => {\n      this.notifications.unshift(newNotification); // Agregar la nueva notificación a la lista\n    });\n\n    document.addEventListener(\"click\", this.handleClickOutside);\n    window.addEventListener(\"scroll\", this.handleScroll);\n    window.addEventListener(\"closeNotifications\", this.handleCloseNotifications);\n  },\n  beforeDestroy() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n    document.removeEventListener(\"click\", this.handleClickOutside);\n    window.removeEventListener(\"scroll\", this.handleScroll);\n    window.removeEventListener(\"closeNotifications\", this.handleCloseNotifications);\n  },\n  methods: {\n    alertClass(type) {\n      return `alert-${type || \"info\"}`;\n    },\n    async toggleNotifications() {\n      this.notificationsOpen = !this.notificationsOpen;\n      if (this.notificationsOpen) {\n        await this.fetchNotifications();\n      }\n    },\n    async fetchNotifications() {\n      try {\n        const response = await axios.get(\"/notifications\");\n        this.notifications = response.data;\n      } catch (error) {\n        console.error(\"❌ Error obteniendo notificaciones:\", error);\n      }\n    },\n    async deleteNotification(notificationId) {\n      try {\n        await axios.delete(`/notifications/${notificationId}`);\n        this.notifications = this.notifications.filter(n => n.id !== notificationId);\n      } catch (error) {\n        console.error(\"❌ Error eliminando la notificación:\", error);\n      }\n    },\n    getUserId() {\n      // Extrae el userId de alguna fuente (ejemplo: store Vuex o localStorage)\n      return 1; // Ajusta esto para obtener el ID del usuario actual\n    },\n    handleClickOutside(event) {\n      if (!this.$el.contains(event.target)) {\n        this.notificationsOpen = false;\n      }\n    },\n    handleScroll() {\n      this.notificationsOpen = false;\n    },\n    handleCloseNotifications() {\n      this.notificationsOpen = false;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.notifications {\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.notification-btn {\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 20px;\n  color: white;\n  position: relative;\n}\n\n.notification-btn i {\n  font-size: 20px;\n  color: white;\n}\n\n.badge {\n  background: red;\n  color: white;\n  border-radius: 50%;\n  padding: 5px;\n  font-size: 12px;\n  position: absolute;\n  top: -5px;\n  right: -10px;\n}\n\n.notification-container {\n  position: absolute;\n  top: 40px;\n  right: 0;\n  width: 220px;\n  background: white;\n  border: 1px solid #ccc;\n  padding: 8px;\n  border-radius: 8px;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n}\n\n.alert {\n  padding: 6px 10px;\n  margin-bottom: 6px;\n  font-size: 0.9rem;\n  border-radius: 4px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.alert-success {\n  background-color: #d4edda;\n  color: #155724;\n}\n.alert-info {\n  background-color: #d1ecf1;\n  color: #0c5460;\n}\n\n.close {\n  background: none;\n  border: none;\n  font-size: 1rem;\n  cursor: pointer;\n  color: inherit;\n}\n\n.empty-message {\n  padding: 10px;\n  text-align: center;\n  color: #555;\n  font-size: 0.9rem;\n}\n</style>\n"],"mappings":"AAmCA,SAASA,EAAC,QAAS,kBAAkB;AACrC,OAAOC,KAAI,MAAO,iBAAiB;AAEnC,eAAe;EACbC,IAAI,EAAE,mBAAmB;EACzBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,iBAAiB,EAAE,KAAK;MACxBC,aAAa,EAAE,EAAE;MACjBC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACH,aAAa,CAACI,MAAM,CAACC,CAAA,IAAKA,CAAC,CAACC,MAAK,KAAM,QAAQ,CAAC,CAACC,MAAM;IACrE;EACF,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,kBAAkB,CAAC,CAAC;;IAE/B;IACA,IAAI,CAACR,MAAK,GAAIN,EAAE,CAAC,uBAAuB,CAAC;;IAEzC;IACA,IAAI,CAACM,MAAM,CAACS,EAAE,CAAC,gBAAgB,IAAI,CAACC,SAAS,CAAC,CAAC,EAAE,EAAGC,eAAe,IAAK;MACtE,IAAI,CAACZ,aAAa,CAACa,OAAO,CAACD,eAAe,CAAC,EAAE;IAC/C,CAAC,CAAC;IAEFE,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACC,kBAAkB,CAAC;IAC3DC,MAAM,CAACF,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACG,YAAY,CAAC;IACpDD,MAAM,CAACF,gBAAgB,CAAC,oBAAoB,EAAE,IAAI,CAACI,wBAAwB,CAAC;EAC9E,CAAC;EACDC,aAAaA,CAAA,EAAG;IACd,IAAI,IAAI,CAACnB,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACoB,UAAU,CAAC,CAAC;IAC1B;IACAP,QAAQ,CAACQ,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAACN,kBAAkB,CAAC;IAC9DC,MAAM,CAACK,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACJ,YAAY,CAAC;IACvDD,MAAM,CAACK,mBAAmB,CAAC,oBAAoB,EAAE,IAAI,CAACH,wBAAwB,CAAC;EACjF,CAAC;EACDI,OAAO,EAAE;IACPC,UAAUA,CAACC,IAAI,EAAE;MACf,OAAO,SAASA,IAAG,IAAK,MAAM,EAAE;IAClC,CAAC;IACD,MAAMC,mBAAmBA,CAAA,EAAG;MAC1B,IAAI,CAAC3B,iBAAgB,GAAI,CAAC,IAAI,CAACA,iBAAiB;MAChD,IAAI,IAAI,CAACA,iBAAiB,EAAE;QAC1B,MAAM,IAAI,CAACU,kBAAkB,CAAC,CAAC;MACjC;IACF,CAAC;IACD,MAAMA,kBAAkBA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMkB,QAAO,GAAI,MAAM/B,KAAK,CAACgC,GAAG,CAAC,gBAAgB,CAAC;QAClD,IAAI,CAAC5B,aAAY,GAAI2B,QAAQ,CAAC7B,IAAI;MACpC,EAAE,OAAO+B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D;IACF,CAAC;IACD,MAAME,kBAAkBA,CAACC,cAAc,EAAE;MACvC,IAAI;QACF,MAAMpC,KAAK,CAACqC,MAAM,CAAC,kBAAkBD,cAAc,EAAE,CAAC;QACtD,IAAI,CAAChC,aAAY,GAAI,IAAI,CAACA,aAAa,CAACI,MAAM,CAACC,CAAA,IAAKA,CAAC,CAAC6B,EAAC,KAAMF,cAAc,CAAC;MAC9E,EAAE,OAAOH,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D;IACF,CAAC;IACDlB,SAASA,CAAA,EAAG;MACV;MACA,OAAO,CAAC,EAAE;IACZ,CAAC;IACDK,kBAAkBA,CAACmB,KAAK,EAAE;MACxB,IAAI,CAAC,IAAI,CAACC,GAAG,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QACpC,IAAI,CAACvC,iBAAgB,GAAI,KAAK;MAChC;IACF,CAAC;IACDmB,YAAYA,CAAA,EAAG;MACb,IAAI,CAACnB,iBAAgB,GAAI,KAAK;IAChC,CAAC;IACDoB,wBAAwBA,CAAA,EAAG;MACzB,IAAI,CAACpB,iBAAgB,GAAI,KAAK;IAChC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}