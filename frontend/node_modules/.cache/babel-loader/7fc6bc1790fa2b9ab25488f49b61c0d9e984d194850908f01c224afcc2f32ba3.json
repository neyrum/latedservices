{"ast":null,"code":"import axios from '@/plugins/axios';\nimport Navbar from '@/components/Navbar.vue';\nexport default {\n  name: 'Dashboard',\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      // Datos para Admin y Super Admin Dashboard\n      summary: {\n        totalRequests: 0,\n        activeServices: 0,\n        pendingRequests: 0,\n        totalUsers: 0,\n        // Para Super Admin\n        systemLogs: 0 // Para Super Admin\n      },\n      errorMessage: '',\n      // Datos para User Dashboard (ejemplo; reemplázalos por datos reales)\n      userServicesCount: 5,\n      userPendingCount: 3\n    };\n  },\n  computed: {\n    // Se asume que la información del usuario (incluido su rol) está almacenada en el store.\n    userData() {\n      return this.$store.getters[\"auth/userData\"] || {};\n    },\n    userRole() {\n      return this.userData.role || 'user'; // Valor predeterminado \"user\" en caso de que no exista.\n    },\n    isSuperAdmin() {\n      return this.userRole === \"superadmin\";\n    },\n    isAdmin() {\n      return this.userRole === \"admin\";\n    },\n    isUser() {\n      return this.userRole === \"user\";\n    },\n    // Se prepara un array de \"cards\" para el dashboard de administrador.\n    adminCards() {\n      return [{\n        title: 'Total Requests',\n        value: this.summary.totalRequests || 0\n      }, {\n        title: 'Active Services',\n        value: this.summary.activeServices || 0\n      }, {\n        title: 'Pending Requests',\n        value: this.summary.pendingRequests || 0\n      }];\n    },\n    // Se prepara un array de \"cards\" para el dashboard de Super Admin.\n    superAdminCards() {\n      return [{\n        title: 'Total Users',\n        value: this.summary.totalUsers || 0\n      }, {\n        title: 'System Logs',\n        value: this.summary.systemLogs || 0\n      }, {\n        title: 'Total Requests',\n        value: this.summary.totalRequests || 0\n      }];\n    }\n  },\n  async created() {\n    // Para el dashboard de Super Admin y Administrador se realiza la llamada a la API.\n    if (this.isSuperAdmin || this.isAdmin) {\n      await this.fetchSummary();\n    }\n  },\n  methods: {\n    async fetchSummary() {\n      try {\n        const response = await axios.get('/admin/summary');\n        this.summary = response.data;\n      } catch (err) {\n        this.errorMessage = err.response?.data?.message || 'Failed to load dashboard data.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","Navbar","name","components","data","summary","totalRequests","activeServices","pendingRequests","totalUsers","systemLogs","errorMessage","userServicesCount","userPendingCount","computed","userData","$store","getters","userRole","role","isSuperAdmin","isAdmin","isUser","adminCards","title","value","superAdminCards","created","fetchSummary","methods","response","get","err","message"],"sources":["/Users/macbookpro/project/LatedServices/frontend/src/views/admin/Dashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"wrapper\">\r\n    <Navbar />\r\n    <Sidebar />\r\n    <div class=\"content-wrapper\">\r\n      <div class=\"container-fluid mt-4\">\r\n      \r\n        <!-- Dashboard para Super Administradores -->\r\n        <template v-if=\"isSuperAdmin\">\r\n          <h2>Super Admin Dashboard</h2>\r\n          <Notification v-if=\"errorMessage\" type=\"danger\" :message=\"errorMessage\" />\r\n          <p>Bienvenido, {{ userData.name }}. Como Super Admin, puedes administrar todo el sistema.</p>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-4\" v-for=\"card in superAdminCards\" :key=\"card.title\">\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title\">{{ card.title }}</h5>\r\n                  <p class=\"card-text\">{{ card.value }}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </template>\r\n\r\n        <!-- Dashboard para Administradores -->\r\n        <template v-else-if=\"isAdmin\">\r\n          <h2>Admin Dashboard</h2>\r\n          <Notification v-if=\"errorMessage\" type=\"danger\" :message=\"errorMessage\" />\r\n          <div class=\"row\">\r\n            <div class=\"col-md-4\" v-for=\"card in adminCards\" :key=\"card.title\">\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title\">{{ card.title }}</h5>\r\n                  <p class=\"card-text\">{{ card.value }}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </template>\r\n        \r\n        <!-- Dashboard para Usuarios Regulares -->\r\n        <template v-else-if=\"isUser\">\r\n          <h2>User Dashboard</h2>\r\n          <p>Bienvenido, {{ userData.name }}. Aquí tienes tu información personalizada.</p>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title\">Tus servicios activos</h5>\r\n                  <p class=\"card-text\">{{ userServicesCount || 0 }}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title\">Solicitudes pendientes</h5>\r\n                  <p class=\"card-text\">{{ userPendingCount || 0 }}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </template>\r\n        \r\n        <!-- Dashboard genérico para otros roles -->\r\n        <template v-else>\r\n          <h2>Dashboard</h2>\r\n          <p>Tu rol no tiene contenido específico.</p>\r\n        </template>\r\n        \r\n      </div>\r\n    </div>\r\n    <Footer />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from '@/plugins/axios';\r\nimport Navbar from '@/components/Navbar.vue';\r\n\r\nexport default {\r\n  name: 'Dashboard',\r\n  components: { Navbar },\r\n  data() {\r\n    return {\r\n      // Datos para Admin y Super Admin Dashboard\r\n      summary: {\r\n        totalRequests: 0,\r\n        activeServices: 0,\r\n        pendingRequests: 0,\r\n        totalUsers: 0,  // Para Super Admin\r\n        systemLogs: 0,  // Para Super Admin\r\n      },\r\n      errorMessage: '',\r\n      // Datos para User Dashboard (ejemplo; reemplázalos por datos reales)\r\n      userServicesCount: 5,\r\n      userPendingCount: 3,\r\n    };\r\n  },\r\n  computed: {\r\n    // Se asume que la información del usuario (incluido su rol) está almacenada en el store.\r\n    userData() {\r\n      return this.$store.getters[\"auth/userData\"] || {};\r\n    },\r\n    userRole() {\r\n      return this.userData.role || 'user'; // Valor predeterminado \"user\" en caso de que no exista.\r\n    },\r\n    isSuperAdmin() {\r\n      return this.userRole === \"superadmin\";\r\n    },\r\n    isAdmin() {\r\n      return this.userRole === \"admin\";\r\n    },\r\n    isUser() {\r\n      return this.userRole === \"user\";\r\n    },\r\n    // Se prepara un array de \"cards\" para el dashboard de administrador.\r\n    adminCards() {\r\n      return [\r\n        { title: 'Total Requests', value: this.summary.totalRequests || 0 },\r\n        { title: 'Active Services', value: this.summary.activeServices || 0 },\r\n        { title: 'Pending Requests', value: this.summary.pendingRequests || 0 },\r\n      ];\r\n    },\r\n    // Se prepara un array de \"cards\" para el dashboard de Super Admin.\r\n    superAdminCards() {\r\n      return [\r\n        { title: 'Total Users', value: this.summary.totalUsers || 0 },\r\n        { title: 'System Logs', value: this.summary.systemLogs || 0 },\r\n        { title: 'Total Requests', value: this.summary.totalRequests || 0 },\r\n      ];\r\n    }\r\n  },\r\n  async created() {\r\n    // Para el dashboard de Super Admin y Administrador se realiza la llamada a la API.\r\n    if (this.isSuperAdmin || this.isAdmin) {\r\n      await this.fetchSummary();\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchSummary() {\r\n      try {\r\n        const response = await axios.get('/admin/summary');\r\n        this.summary = response.data;\r\n      } catch (err) {\r\n        this.errorMessage = err.response?.data?.message || 'Failed to load dashboard data.';\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n}\r\n.content-wrapper {\r\n  flex: 1;\r\n  padding: 20px;\r\n}\r\n.card {\r\n  border-radius: 0.25rem;\r\n}\r\n</style>\r\n"],"mappings":"AA6EA,OAAOA,KAAI,MAAO,iBAAiB;AACnC,OAAOC,MAAK,MAAO,yBAAyB;AAE5C,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IAAEF;EAAO,CAAC;EACtBG,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,OAAO,EAAE;QACPC,aAAa,EAAE,CAAC;QAChBC,cAAc,EAAE,CAAC;QACjBC,eAAe,EAAE,CAAC;QAClBC,UAAU,EAAE,CAAC;QAAG;QAChBC,UAAU,EAAE,CAAC,CAAG;MAClB,CAAC;MACDC,YAAY,EAAE,EAAE;MAChB;MACAC,iBAAiB,EAAE,CAAC;MACpBC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR;IACAC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,eAAe,KAAK,CAAC,CAAC;IACnD,CAAC;IACDC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACH,QAAQ,CAACI,IAAG,IAAK,MAAM,EAAE;IACvC,CAAC;IACDC,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACF,QAAO,KAAM,YAAY;IACvC,CAAC;IACDG,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACH,QAAO,KAAM,OAAO;IAClC,CAAC;IACDI,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACJ,QAAO,KAAM,MAAM;IACjC,CAAC;IACD;IACAK,UAAUA,CAAA,EAAG;MACX,OAAO,CACL;QAAEC,KAAK,EAAE,gBAAgB;QAAEC,KAAK,EAAE,IAAI,CAACpB,OAAO,CAACC,aAAY,IAAK;MAAE,CAAC,EACnE;QAAEkB,KAAK,EAAE,iBAAiB;QAAEC,KAAK,EAAE,IAAI,CAACpB,OAAO,CAACE,cAAa,IAAK;MAAE,CAAC,EACrE;QAAEiB,KAAK,EAAE,kBAAkB;QAAEC,KAAK,EAAE,IAAI,CAACpB,OAAO,CAACG,eAAc,IAAK;MAAE,CAAC,CACxE;IACH,CAAC;IACD;IACAkB,eAAeA,CAAA,EAAG;MAChB,OAAO,CACL;QAAEF,KAAK,EAAE,aAAa;QAAEC,KAAK,EAAE,IAAI,CAACpB,OAAO,CAACI,UAAS,IAAK;MAAE,CAAC,EAC7D;QAAEe,KAAK,EAAE,aAAa;QAAEC,KAAK,EAAE,IAAI,CAACpB,OAAO,CAACK,UAAS,IAAK;MAAE,CAAC,EAC7D;QAAEc,KAAK,EAAE,gBAAgB;QAAEC,KAAK,EAAE,IAAI,CAACpB,OAAO,CAACC,aAAY,IAAK;MAAE,CAAC,CACpE;IACH;EACF,CAAC;EACD,MAAMqB,OAAOA,CAAA,EAAG;IACd;IACA,IAAI,IAAI,CAACP,YAAW,IAAK,IAAI,CAACC,OAAO,EAAE;MACrC,MAAM,IAAI,CAACO,YAAY,CAAC,CAAC;IAC3B;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAME,QAAO,GAAI,MAAM9B,KAAK,CAAC+B,GAAG,CAAC,gBAAgB,CAAC;QAClD,IAAI,CAAC1B,OAAM,GAAIyB,QAAQ,CAAC1B,IAAI;MAC9B,EAAE,OAAO4B,GAAG,EAAE;QACZ,IAAI,CAACrB,YAAW,GAAIqB,GAAG,CAACF,QAAQ,EAAE1B,IAAI,EAAE6B,OAAM,IAAK,gCAAgC;MACrF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}