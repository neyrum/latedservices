{"ast":null,"code":"import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'http://localhost:3000/api',\n  // URL base del backend\n  headers: {\n    'Content-Type': 'application/json' // Tipo de contenido predeterminado\n  }\n});\n\n// Interceptor para agregar el token JWT autom치ticamente en cada solicitud\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  // Si la solicitud incluye un FormData, no sobrescribir el Content-Type\n  if (config.data instanceof FormData) {\n    delete config.headers['Content-Type'];\n  }\n  return config;\n});\n\n// Interceptor para manejar errores globalmente\ninstance.interceptors.response.use(response => response, error => {\n  if (error.response?.status === 401) {\n    localStorage.removeItem(\"token\"); // Elimina token si est치 vencido\n    window.location.href = \"/login\"; // Redirige al usuario al login\n  }\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","data","FormData","response","error","status","removeItem","window","location","href","Promise","reject"],"sources":["/Users/macbookpro/project/LatedServices/frontend/src/plugins/axios.js"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'http://localhost:3000/api', // URL base del backend\n  headers: {\n    'Content-Type': 'application/json', // Tipo de contenido predeterminado\n  },\n});\n\n// Interceptor para agregar el token JWT autom치ticamente en cada solicitud\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  // Si la solicitud incluye un FormData, no sobrescribir el Content-Type\n  if (config.data instanceof FormData) {\n    delete config.headers['Content-Type'];\n  }\n\n  return config;\n});\n\n// Interceptor para manejar errores globalmente\ninstance.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem(\"token\"); // Elimina token si est치 vencido\n      window.location.href = \"/login\"; // Redirige al usuario al login\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default instance;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAE,2BAA2B;EAAE;EACtCC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB,CAAE;EACtC;AACF,CAAC,CAAC;;AAEF;AACAH,QAAQ,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EAC1C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;;EAEA;EACA,IAAID,MAAM,CAACK,IAAI,YAAYC,QAAQ,EAAE;IACnC,OAAON,MAAM,CAACJ,OAAO,CAAC,cAAc,CAAC;EACvC;EAEA,OAAOI,MAAM;AACf,CAAC,CAAC;;AAEF;AACAP,QAAQ,CAACI,YAAY,CAACU,QAAQ,CAACR,GAAG,CAChCQ,QAAQ,IAAIA,QAAQ,EACpBC,KAAK,IAAI;EACP,IAAIA,KAAK,CAACD,QAAQ,EAAEE,MAAM,KAAK,GAAG,EAAE;IAClCP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;IAClCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;EACnC;EACA,OAAOC,OAAO,CAACC,MAAM,CAACP,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAef,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}