{"ast":null,"code":"import { useStore } from \"vuex\";\nimport { useRouter } from \"vue-router\";\nimport { computed, onMounted } from \"vue\";\nimport defaultProfilePicture from \"@/assets/img/default-profile.jpg\"; // Importar la imagen por defecto\n\nexport default {\n  name: \"Navbar\",\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n\n    // Computed para verificar si el usuario está autenticado\n    const isAuthenticated = computed(() => store.getters[\"auth/isAuthenticated\"]);\n\n    // Computed para obtener el nombre del usuario\n    const userName = computed(() => store.getters[\"auth/userData\"]?.name || \"Usuario\");\n\n    // Computed para obtener la foto de perfil del usuario\n    const userProfilePicture = computed(() => store.getters[\"auth/userData\"]?.profilePicture || defaultProfilePicture);\n\n    // Método para cerrar sesión\n    const logout = () => {\n      store.dispatch(\"auth/logout\");\n      router.push(\"/login\");\n    };\n\n    // Obtener los datos del usuario al montar el componente\n    onMounted(() => {\n      if (isAuthenticated.value) {\n        store.dispatch(\"auth/fetchUserData\"); // Obtiene los datos del usuario\n      }\n    });\n    return {\n      isAuthenticated,\n      userName,\n      userProfilePicture,\n      logout\n    };\n  }\n};","map":{"version":3,"names":["useStore","useRouter","computed","onMounted","defaultProfilePicture","name","setup","store","router","isAuthenticated","getters","userName","userProfilePicture","profilePicture","logout","dispatch","push","value"],"sources":["/Users/macbookpro/project/LatedServices/frontend/src/components/Navbar.vue"],"sourcesContent":["<template>\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\">\n    <div class=\"container\">\n      <router-link class=\"navbar-brand fw-bold text-uppercase\" to=\"/\">Servicios de Lated</router-link>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav ms-auto\">\n          <!-- Mostrar botones de login y registro si no está autenticado -->\n          <li class=\"nav-item me-3\" v-if=\"!isAuthenticated\">\n            <router-link class=\"nav-link btn-custom\" to=\"/login\">Accede</router-link>\n          </li>\n          <li class=\"nav-item\" v-if=\"!isAuthenticated\">\n            <router-link class=\"nav-link btn-custom\" to=\"/register\">Regístrate</router-link>\n          </li>\n\n          <!-- Mostrar frase de bienvenida, foto de perfil y menú desplegable si está autenticado -->\n          <li class=\"nav-item dropdown ms-3 d-flex align-items-center\" v-if=\"isAuthenticated\">\n            <span class=\"text-light me-2\">Bienvenido, {{ userName }}</span>\n            <a\n              class=\"nav-link dropdown-toggle d-flex align-items-center\"\n              href=\"#\"\n              id=\"navbarDropdown\"\n              role=\"button\"\n              data-bs-toggle=\"dropdown\"\n              aria-expanded=\"false\"\n            >\n              <img\n                :src=\"userProfilePicture\"\n                alt=\"Foto de Perfil\"\n                class=\"rounded-circle me-2\"\n                width=\"40\"\n                height=\"40\"\n              />\n            </a>\n            <ul class=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"navbarDropdown\">\n              <li>\n                <router-link class=\"dropdown-item\" to=\"/profile\">Mi Perfil</router-link>\n              </li>\n              <li>\n                <router-link class=\"dropdown-item\" to=\"/client/services\">Servicios Disponibles</router-link>\n              </li>\n              <li>\n                <button class=\"dropdown-item\" @click=\"logout\">Cerrar Sesión</button>\n              </li>\n            </ul>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</template>\n\n<script>\nimport { useStore } from \"vuex\";\nimport { useRouter } from \"vue-router\";\nimport { computed, onMounted } from \"vue\";\nimport defaultProfilePicture from \"@/assets/img/default-profile.jpg\"; // Importar la imagen por defecto\n\nexport default {\n  name: \"Navbar\",\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n\n    // Computed para verificar si el usuario está autenticado\n    const isAuthenticated = computed(() => store.getters[\"auth/isAuthenticated\"]);\n\n    // Computed para obtener el nombre del usuario\n    const userName = computed(() => store.getters[\"auth/userData\"]?.name || \"Usuario\");\n\n    // Computed para obtener la foto de perfil del usuario\n    const userProfilePicture = computed(() =>\n      store.getters[\"auth/userData\"]?.profilePicture || defaultProfilePicture\n    );\n\n    // Método para cerrar sesión\n    const logout = () => {\n      store.dispatch(\"auth/logout\");\n      router.push(\"/login\");\n    };\n\n    // Obtener los datos del usuario al montar el componente\n    onMounted(() => {\n      if (isAuthenticated.value) {\n        store.dispatch(\"auth/fetchUserData\"); // Obtiene los datos del usuario\n      }\n    });\n\n    return { isAuthenticated, userName, userProfilePicture, logout };\n  },\n};\n</script>\n\n<style scoped>\n.navbar {\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.navbar-brand {\n  font-size: 1.5rem;\n  letter-spacing: 1px;\n}\n\n.btn-custom {\n  background-color: #f8f9fa;\n  color: #212529;\n  border-radius: 25px;\n  padding: 8px 20px;\n  transition: all 0.3s ease;\n  text-align: center;\n  display: inline-block;\n}\n\n.btn-custom:hover {\n  background-color: #345896;\n  color: rgb(255, 255, 255);\n}\n\n.nav-item {\n  margin-bottom: 10px;\n}\n\n.dropdown-menu {\n  min-width: 200px;\n}\n\nimg.rounded-circle {\n  object-fit: cover;\n}\n\n@media (min-width: 768px) {\n  .nav-item {\n    margin-bottom: 0;\n  }\n  .me-3 {\n    margin-right: 15px;\n  }\n  .ms-3 {\n    margin-left: 15px;\n  }\n}\n</style>"],"mappings":"AAoDA,SAASA,QAAO,QAAS,MAAM;AAC/B,SAASC,SAAQ,QAAS,YAAY;AACtC,SAASC,QAAQ,EAAEC,SAAQ,QAAS,KAAK;AACzC,OAAOC,qBAAoB,MAAO,kCAAkC,EAAE;;AAEtE,eAAe;EACbC,IAAI,EAAE,QAAQ;EACdC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIP,QAAQ,CAAC,CAAC;IACxB,MAAMQ,MAAK,GAAIP,SAAS,CAAC,CAAC;;IAE1B;IACA,MAAMQ,eAAc,GAAIP,QAAQ,CAAC,MAAMK,KAAK,CAACG,OAAO,CAAC,sBAAsB,CAAC,CAAC;;IAE7E;IACA,MAAMC,QAAO,GAAIT,QAAQ,CAAC,MAAMK,KAAK,CAACG,OAAO,CAAC,eAAe,CAAC,EAAEL,IAAG,IAAK,SAAS,CAAC;;IAElF;IACA,MAAMO,kBAAiB,GAAIV,QAAQ,CAAC,MAClCK,KAAK,CAACG,OAAO,CAAC,eAAe,CAAC,EAAEG,cAAa,IAAKT,qBACpD,CAAC;;IAED;IACA,MAAMU,MAAK,GAAIA,CAAA,KAAM;MACnBP,KAAK,CAACQ,QAAQ,CAAC,aAAa,CAAC;MAC7BP,MAAM,CAACQ,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;;IAED;IACAb,SAAS,CAAC,MAAM;MACd,IAAIM,eAAe,CAACQ,KAAK,EAAE;QACzBV,KAAK,CAACQ,QAAQ,CAAC,oBAAoB,CAAC,EAAE;MACxC;IACF,CAAC,CAAC;IAEF,OAAO;MAAEN,eAAe;MAAEE,QAAQ;MAAEC,kBAAkB;MAAEE;IAAO,CAAC;EAClE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}