{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, TransitionGroup as _TransitionGroup, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"notifications\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_TransitionGroup, {\n    name: \"fade\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.notifications, (notification, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: index,\n        class: _normalizeClass(['notification', notification.type])\n      }, [_createElementVNode(\"p\", null, _toDisplayString(notification.message), 1 /* TEXT */), _createElementVNode(\"button\", {\n        onClick: $event => $options.removeNotification(index)\n      }, \"✖\", 8 /* PROPS */, _hoisted_2)], 2 /* CLASS */);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_TransitionGroup","name","default","_withCtx","_Fragment","_renderList","$props","notifications","notification","index","key","_normalizeClass","type","_createElementVNode","_toDisplayString","message","onClick","$event","$options","removeNotification","_hoisted_2","_"],"sources":["/home/lated/LatedServices/frontend/src/components/Notification.vue"],"sourcesContent":["<template>\n  <div class=\"notifications\">\n    <transition-group name=\"fade\">\n      <div\n        v-for=\"(notification, index) in notifications\"\n        :key=\"index\"\n        :class=\"['notification', notification.type]\"\n      >\n        <p>{{ notification.message }}</p>\n        <button @click=\"removeNotification(index)\">✖</button>\n      </div>\n    </transition-group>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Notification\",\n  props: {\n    notifications: { type: Array, required: true },\n  },\n  methods: {\n    removeNotification(index) {\n      this.notifications.splice(index, 1);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.notifications {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.notification {\n  padding: 12px 15px;\n  border-radius: 8px;\n  font-size: 14px;\n  color: #fff;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n  transition: 0.3s;\n}\n\n.notification.success {\n  background: #28a745;\n}\n\n.notification.error {\n  background: #dc3545;\n}\n\n.notification.warning {\n  background: #ffc107;\n}\n\n.notification button {\n  background: none;\n  border: none;\n  color: #fff;\n  cursor: pointer;\n  font-size: 16px;\n}\n.fade-enter-active, .fade-leave-active {\n  transition: opacity 0.5s;\n}\n.fade-enter, .fade-leave-to {\n  opacity: 0;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAe;mBAD5B;;uBACEC,mBAAA,CAWM,OAXNC,UAWM,GAVJC,YAAA,CASmBC,gBAAA;IATDC,IAAI,EAAC;EAAM;IAFjCC,OAAA,EAAAC,QAAA,CAIQ,MAA8C,E,kBADhDN,mBAAA,CAOMO,SAAA,QAVZC,WAAA,CAIwCC,MAAA,CAAAC,aAAa,EAJrD,CAIgBC,YAAY,EAAEC,KAAK;2BAD7BZ,mBAAA,CAOM;QALHa,GAAG,EAAED,KAAK;QACVb,KAAK,EANde,eAAA,kBAMiCH,YAAY,CAACI,IAAI;UAE1CC,mBAAA,CAAiC,WAAAC,gBAAA,CAA3BN,YAAY,CAACO,OAAO,kBAC1BF,mBAAA,CAAqD;QAA5CG,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,kBAAkB,CAACV,KAAK;SAAG,GAAC,iBATpDW,UAAA,E;;IAAAC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}