{"ast":null,"code":"import axios from \"@/plugins/axios\";\nimport defaultProfilePicture from \"@/assets/img/default-profile.jpg\";\nexport default {\n  name: \"Profile\",\n  data() {\n    return {\n      user: null,\n      form: {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        password: \"\",\n        address: \"\"\n      },\n      selectedFile: null,\n      imagePreview: null,\n      croppedImage: null,\n      cropper: null,\n      showCropper: false,\n      successMessage: \"\",\n      errorMessage: \"\",\n      defaultProfilePicture\n    };\n  },\n  async created() {\n    await this.fetchProfile();\n  },\n  methods: {\n    displayValue(value, defaultValue = \"No especificado\") {\n      return value || defaultValue;\n    },\n    goToHome() {\n      this.$router.push(\"/\");\n    },\n    async fetchProfile() {\n      try {\n        const response = await axios.get(\"/users/me\");\n        this.user = response.data;\n        this.form.name = this.user.name || \"\";\n        this.form.email = this.user.email || \"\";\n        this.form.phone = this.user.phone || \"\";\n        this.form.address = this.user.address || \"\";\n        this.errorMessage = \"\";\n      } catch (error) {\n        this.errorMessage = error.response?.data?.message || \"Error al cargar el perfil.\";\n        this.user = null;\n      }\n    },\n    onFileChange(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.selectedFile = file;\n        this.imagePreview = URL.createObjectURL(file);\n        this.showCropper = true;\n        this.$nextTick(() => {\n          const imageElement = this.$refs.cropperImage;\n          this.cropper = new this.$Cropper(imageElement, {\n            aspectRatio: 1,\n            viewMode: 1,\n            responsive: true,\n            background: false,\n            autoCropArea: 1\n          });\n        });\n      }\n    },\n    cancelCrop() {\n      this.showCropper = false;\n      this.imagePreview = null;\n      if (this.cropper) {\n        this.cropper.destroy();\n        this.cropper = null;\n      }\n    },\n    async cropImage() {\n      if (this.cropper) {\n        const canvas = this.cropper.getCroppedCanvas({\n          width: 200,\n          height: 200\n        });\n        this.croppedImage = canvas.toDataURL(\"image/jpeg\");\n        this.showCropper = false;\n        this.imagePreview = null;\n        this.cropper.destroy();\n        this.cropper = null;\n      }\n    },\n    async uploadProfilePicture() {\n      if (!this.croppedImage) {\n        this.errorMessage = \"Por favor recorta una imagen antes de subirla.\";\n        return;\n      }\n      try {\n        const response = await axios.post(\"/users/profile-picture\", {\n          profilePicture: this.croppedImage\n        });\n        this.user.profilePicture = response.data.profilePicture;\n        this.successMessage = \"¡Foto de perfil actualizada exitosamente!\";\n        this.errorMessage = \"\";\n        this.croppedImage = null;\n      } catch (error) {\n        this.errorMessage = error.response?.data?.message || \"Error al cargar la foto de perfil.\";\n        this.successMessage = \"\";\n      }\n    },\n    async updateProfile() {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        const response = await axios.put(\"/users/me\", this.form, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.user = response.data;\n        this.successMessage = \"¡Perfil actualizado exitosamente!\";\n        this.errorMessage = \"\";\n      } catch (error) {\n        this.errorMessage = error.response?.data?.message || \"Error al actualizar el perfil.\";\n        this.successMessage = \"\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","defaultProfilePicture","name","data","user","form","email","phone","password","address","selectedFile","imagePreview","croppedImage","cropper","showCropper","successMessage","errorMessage","created","fetchProfile","methods","displayValue","value","defaultValue","goToHome","$router","push","response","get","error","message","onFileChange","event","file","target","files","URL","createObjectURL","$nextTick","imageElement","$refs","cropperImage","$Cropper","aspectRatio","viewMode","responsive","background","autoCropArea","cancelCrop","destroy","cropImage","canvas","getCroppedCanvas","width","height","toDataURL","uploadProfilePicture","post","profilePicture","updateProfile","token","localStorage","getItem","put","headers","Authorization"],"sources":["/Users/macbookpro/project/LatedServices/frontend/src/views/client/Profile.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-8\">\n        <!-- Tarjeta del perfil -->\n        <div class=\"card shadow-lg\">\n          <div class=\"card-header bg-primary text-white text-center d-flex align-items-center justify-content-between\">\n            <i class=\"bi bi-arrow-left-circle fs-4\" @click=\"goToHome\" style=\"cursor: pointer;\"></i>\n            <h3 class=\"m-0 flex-grow-1 text-center\">Perfil de Usuario</h3>\n          </div>\n          <div class=\"card-body\">\n            <!-- Mensajes de éxito y error -->\n            <div v-if=\"successMessage\" class=\"alert alert-success d-flex align-items-center\" role=\"alert\">\n              <i class=\"bi bi-check-circle-fill me-2\"></i>\n              {{ successMessage }}\n            </div>\n            <div v-if=\"errorMessage\" class=\"alert alert-danger d-flex align-items-center\" role=\"alert\">\n              <i class=\"bi bi-exclamation-triangle-fill me-2\"></i>\n              {{ errorMessage }}\n            </div>\n\n            <!-- Foto de perfil -->\n            <div class=\"text-center mb-4\">\n              <div class=\"profile-picture-wrapper\">\n                <img\n                  :src=\"user?.profilePicture || defaultProfilePicture\"\n                  alt=\"Foto de Perfil\"\n                  class=\"img-thumbnail shadow\"\n                />\n              </div>\n              <form @submit.prevent=\"uploadProfilePicture\" class=\"mt-3\">\n                <div class=\"form-group\">\n                  <input\n                    type=\"file\"\n                    id=\"profilePicture\"\n                    @change=\"onFileChange\"\n                    class=\"form-control\"\n                  />\n                </div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-sm mt-2\"\n                  :class=\"{'btn-secondary': !croppedImage, 'btn-primary': croppedImage}\"\n                  :disabled=\"!croppedImage\"\n                >\n                  Cambiar Imagen\n                </button>\n              </form>\n            </div>\n\n            <!-- Detalles del perfil -->\n            <div class=\"profile-details mb-4\">\n              <h4>Detalles del Perfil</h4>\n              <p><strong>Nombre:</strong> {{ displayValue(user?.name) }}</p>\n              <p><strong>Email:</strong> {{ displayValue(user?.email) }}</p>\n              <p><strong>Teléfono:</strong> {{ displayValue(user?.phone) }}</p>\n              <p><strong>Dirección:</strong> {{ displayValue(user?.address, 'No especificada') }}</p>\n            </div>\n\n            <!-- Formulario de actualización -->\n            <form @submit.prevent=\"updateProfile\">\n              <div class=\"form-group mb-3\">\n                <label for=\"name\" class=\"form-label\">Nombre</label>\n                <input\n                  id=\"name\"\n                  v-model=\"form.name\"\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Ingresa tu nombre\"\n                  required\n                />\n              </div>\n              <div class=\"form-group mb-3\">\n                <label for=\"email\" class=\"form-label\">Email</label>\n                <input\n                  id=\"email\"\n                  v-model=\"form.email\"\n                  type=\"email\"\n                  class=\"form-control\"\n                  placeholder=\"Ingresa tu email\"\n                  required\n                />\n              </div>\n              <div class=\"form-group mb-3\">\n                <label for=\"phone\" class=\"form-label\">Teléfono</label>\n                <input\n                  id=\"phone\"\n                  v-model=\"form.phone\"\n                  type=\"tel\"\n                  class=\"form-control\"\n                  placeholder=\"Ingresa tu número de teléfono\"\n                />\n              </div>\n              <div class=\"form-group mb-3\">\n                <label for=\"password\" class=\"form-label\">Contraseña</label>\n                <input\n                  id=\"password\"\n                  v-model=\"form.password\"\n                  type=\"password\"\n                  class=\"form-control\"\n                  placeholder=\"Ingresa tu nueva contraseña\"\n                />\n              </div>\n              <div class=\"form-group mb-3\">\n                <label for=\"address\" class=\"form-label\">Dirección</label>\n                <textarea\n                  id=\"address\"\n                  v-model=\"form.address\"\n                  class=\"form-control\"\n                  placeholder=\"Ingresa tu dirección\"\n                ></textarea>\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary w-100\">Actualizar Perfil</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"@/plugins/axios\";\nimport defaultProfilePicture from \"@/assets/img/default-profile.jpg\";\n\nexport default {\n  name: \"Profile\",\n  data() {\n    return {\n      user: null,\n      form: {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        password: \"\",\n        address: \"\",\n      },\n      selectedFile: null,\n      imagePreview: null,\n      croppedImage: null,\n      cropper: null,\n      showCropper: false,\n      successMessage: \"\",\n      errorMessage: \"\",\n      defaultProfilePicture,\n    };\n  },\n  async created() {\n    await this.fetchProfile();\n  },\n  methods: {\n    displayValue(value, defaultValue = \"No especificado\") {\n      return value || defaultValue;\n    },\n    goToHome() {\n      this.$router.push(\"/\");\n    },\n    async fetchProfile() {\n      try {\n        const response = await axios.get(\"/users/me\");\n        this.user = response.data;\n        this.form.name = this.user.name || \"\";\n        this.form.email = this.user.email || \"\";\n        this.form.phone = this.user.phone || \"\";\n        this.form.address = this.user.address || \"\";\n        this.errorMessage = \"\";\n      } catch (error) {\n        this.errorMessage = error.response?.data?.message || \"Error al cargar el perfil.\";\n        this.user = null;\n      }\n    },\n    onFileChange(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.selectedFile = file;\n        this.imagePreview = URL.createObjectURL(file);\n        this.showCropper = true;\n        this.$nextTick(() => {\n          const imageElement = this.$refs.cropperImage;\n          this.cropper = new this.$Cropper(imageElement, {\n            aspectRatio: 1,\n            viewMode: 1,\n            responsive: true,\n            background: false,\n            autoCropArea: 1,\n          });\n        });\n      }\n    },\n    cancelCrop() {\n      this.showCropper = false;\n      this.imagePreview = null;\n      if (this.cropper) {\n        this.cropper.destroy();\n        this.cropper = null;\n      }\n    },\n    async cropImage() {\n      if (this.cropper) {\n        const canvas = this.cropper.getCroppedCanvas({\n          width: 200,\n          height: 200,\n        });\n        this.croppedImage = canvas.toDataURL(\"image/jpeg\");\n        this.showCropper = false;\n        this.imagePreview = null;\n        this.cropper.destroy();\n        this.cropper = null;\n      }\n    },\n    async uploadProfilePicture() {\n      if (!this.croppedImage) {\n        this.errorMessage = \"Por favor recorta una imagen antes de subirla.\";\n        return;\n      }\n\n      try {\n        const response = await axios.post(\"/users/profile-picture\", {\n          profilePicture: this.croppedImage,\n        });\n        this.user.profilePicture = response.data.profilePicture;\n        this.successMessage = \"¡Foto de perfil actualizada exitosamente!\";\n        this.errorMessage = \"\";\n        this.croppedImage = null;\n      } catch (error) {\n        this.errorMessage = error.response?.data?.message || \"Error al cargar la foto de perfil.\";\n        this.successMessage = \"\";\n      }\n    },\n    async updateProfile() {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        const response = await axios.put(\"/users/me\", this.form, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        this.user = response.data;\n        this.successMessage = \"¡Perfil actualizado exitosamente!\";\n        this.errorMessage = \"\";\n      } catch (error) {\n        this.errorMessage = error.response?.data?.message || \"Error al actualizar el perfil.\";\n        this.successMessage = \"\";\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  max-width: 800px;\n}\n.card {\n  border-radius: 0.5rem;\n}\n.card-header {\n  font-size: 1.5rem;\n  font-weight: bold;\n}\n.profile-picture-wrapper {\n  width: 200px;\n  height: 200px;\n  overflow: hidden;\n  border-radius: 50%;\n  display: inline-block;\n}\n.img-thumbnail {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n.profile-details {\n  margin-top: 20px;\n  padding: 15px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  background-color: #f9f9f9;\n}\n.profile-details h4 {\n  margin-bottom: 15px;\n  font-size: 1.5rem;\n  color: #333;\n}\n.profile-details p {\n  margin: 5px 0;\n  font-size: 1rem;\n  color: #555;\n}\n.modal-body {\n  width: 400px;\n  height: 400px;\n  margin: 0 auto;\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.modal-body img {\n  max-width: 100%;\n  max-height: 100%;\n  object-fit: contain;\n}\n.alert {\n  display: flex;\n  align-items: center;\n}\n.bi-arrow-left-circle {\n  color: white;\n  margin-right: 10px;\n  transition: color 0.3s ease;\n}\n.bi-arrow-left-circle:hover {\n  color: #d1d1d1;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}