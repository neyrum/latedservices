{"ast":null,"code":"import axios from \"@/plugins/axios\";\nexport default {\n  name: \"AdminRequests\",\n  data() {\n    return {\n      requests: [],\n      isLoading: false,\n      errorMessage: \"\",\n      // Variables para el modal de notificación\n      showNotificationModal: false,\n      modalUserId: null,\n      modalUserName: \"\",\n      modalMessage: \"\",\n      modalErrorMessage: \"\",\n      modalSuccessMessage: \"\"\n    };\n  },\n  created() {\n    this.fetchRequests();\n  },\n  methods: {\n    async fetchRequests() {\n      this.isLoading = true;\n      try {\n        const response = await axios.get(\"/requests\", {\n          headers: {\n            Authorization: \"Bearer \" + this.$store.getters[\"auth/token\"]\n          }\n        });\n        this.requests = response.data.data || response.data;\n      } catch (error) {\n        this.errorMessage = error.response?.data?.message || \"Error al cargar las solicitudes.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async updateRequestStatus(requestId, newStatus) {\n      try {\n        await axios.put(`/requests/${requestId}/status`, {\n          status: newStatus\n        }, {\n          headers: {\n            Authorization: \"Bearer \" + this.$store.getters[\"auth/token\"]\n          }\n        });\n        this.fetchRequests();\n      } catch (error) {\n        this.errorMessage = error.response?.data?.message || \"Error al actualizar solicitud.\";\n        console.error(\"Error al actualizar solicitud:\", error);\n      }\n    },\n    goToDetails(requestId) {\n      this.$router.push({\n        name: \"request-details\",\n        params: {\n          id: requestId\n        }\n      });\n    },\n    capitalizeStatus(status) {\n      if (!status) return \"\";\n      const statusMap = {\n        \"en_progreso\": \"Activo\"\n      };\n      return statusMap[status] || status.charAt(0).toUpperCase() + status.slice(1).toLowerCase();\n    },\n    canTransition(currentStatus, targetStatus) {\n      const transitions = {\n        pendiente: [\"aprobado\", \"rechazado\"],\n        aprobado: [\"en_progreso\"],\n        en_progreso: [\"completado\", \"cancelado\"],\n        completado: [],\n        cancelado: [],\n        rechazado: []\n      };\n      return transitions[currentStatus]?.includes(targetStatus) || false;\n    },\n    statusClass(status) {\n      const statusMap = {\n        pendiente: \"bg-warning text-dark\",\n        aprobado: \"bg-info text-white\",\n        rechazado: \"bg-danger text-white\",\n        en_progreso: \"bg-primary text-white\",\n        completado: \"bg-success text-white\",\n        cancelado: \"bg-secondary text-white\"\n      };\n      return statusMap[status] || \"bg-light\";\n    },\n    statusIcon(status) {\n      const iconMap = {\n        pendiente: \"fas fa-hourglass-start text-warning\",\n        aprobado: \"fas fa-check-circle text-info\",\n        rechazado: \"fas fa-times-circle text-danger\",\n        en_progreso: \"fas fa-spinner text-primary\",\n        completado: \"fas fa-check text-success\",\n        cancelado: \"fas fa-ban text-secondary\"\n      };\n      return iconMap[status] || \"fas fa-question-circle text-muted\";\n    },\n    openNotificationModal(request) {\n      if (request.client && request.client.id) {\n        this.modalUserId = request.client.id;\n        this.modalUserName = request.client.name || \"Usuario\";\n        this.modalMessage = \"\";\n        this.modalErrorMessage = \"\";\n        this.modalSuccessMessage = \"\";\n        this.showNotificationModal = true;\n      } else {\n        console.error(\"La solicitud no cuenta con un cliente asignado.\");\n      }\n    },\n    closeNotificationModal() {\n      this.showNotificationModal = false;\n    },\n    async sendNotification() {\n      try {\n        await axios.post(\"/notifications/send\", {\n          userId: this.modalUserId,\n          message: this.modalMessage\n        }, {\n          headers: {\n            Authorization: \"Bearer \" + this.$store.getters[\"auth/token\"]\n          }\n        });\n        this.modalSuccessMessage = \"Notificación enviada exitosamente.\";\n        setTimeout(() => {\n          this.closeNotificationModal();\n        }, 1500);\n      } catch (error) {\n        this.modalErrorMessage = error.response?.data?.message || \"Error al enviar la notificación.\";\n        console.error(\"Error en sendNotification:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","requests","isLoading","errorMessage","showNotificationModal","modalUserId","modalUserName","modalMessage","modalErrorMessage","modalSuccessMessage","created","fetchRequests","methods","response","get","headers","Authorization","$store","getters","error","message","updateRequestStatus","requestId","newStatus","put","status","console","goToDetails","$router","push","params","id","capitalizeStatus","statusMap","charAt","toUpperCase","slice","toLowerCase","canTransition","currentStatus","targetStatus","transitions","pendiente","aprobado","en_progreso","completado","cancelado","rechazado","includes","statusClass","statusIcon","iconMap","openNotificationModal","request","client","closeNotificationModal","sendNotification","post","userId","setTimeout"],"sources":["/home/lated/LatedServices/frontend/src/views/admin/AdminRequests.vue"],"sourcesContent":["<template>\n  <div class=\"admin-requests\">\n    <h3 class=\"dashboard-title\">Solicitudes Pendientes</h3>\n\n    <p v-if=\"isLoading\">Cargando solicitudes...</p>\n    <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\n\n    <table v-if=\"requests.length > 0\" class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>Cliente</th>\n          <th>Servicio</th>\n          <th>Estado</th>\n          <th>Fecha Preferida</th>\n          <th>Acciones</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"request in requests\" :key=\"request.id\">\n          <td>{{ request.id }}</td>\n          <td>{{ request.client?.name || \"Sin asignar\" }}</td>\n          <td>{{ request.service?.name }}</td>\n          <td :class=\"statusClass(request.status)\">\n            <i :class=\"statusIcon(request.status)\"></i> {{ capitalizeStatus(request.status) }}\n          </td>\n          <td>{{ new Date(request.preferredDate).toLocaleDateString() }}</td>\n          <td class=\"action-buttons\">\n            <!-- Botón de Aprobación -->\n            <button \n              class=\"icon-btn text-success\" \n              @click=\"updateRequestStatus(request.id, 'aprobado')\" \n              :disabled=\"!canTransition(request.status, 'aprobado')\">\n              <i class=\"fas fa-check-circle\"></i>\n              <span class=\"tooltip\">Aprobar</span>\n            </button>\n\n            <!-- Botón de Rechazo -->\n            <button \n              class=\"icon-btn text-danger\" \n              @click=\"updateRequestStatus(request.id, 'rechazado')\" \n              :disabled=\"!canTransition(request.status, 'rechazado')\">\n              <i class=\"fas fa-times-circle\"></i>\n              <span class=\"tooltip\">Rechazar</span>\n            </button>\n\n            <!-- Botón de Detalles -->\n            <button class=\"icon-btn text-info\" @click=\"goToDetails(request.id)\">\n              <i class=\"fas fa-eye\"></i>\n              <span class=\"tooltip\">Ver detalles</span>\n            </button>\n\n            <!-- Botón para enviar notificación -->\n            <button class=\"icon-btn text-primary\" @click=\"openNotificationModal(request)\">\n              <i class=\"fas fa-envelope\"></i>\n              <span class=\"tooltip\">Enviar notificación</span>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <p v-if=\"!isLoading && requests.length === 0\">No hay solicitudes pendientes.</p>\n\n    <!-- Modal para enviar notificación -->\n    <div v-if=\"showNotificationModal\" class=\"modal-overlay\" @click.self=\"closeNotificationModal\">\n      <div class=\"modal-content\">\n        <h4>Enviar Notificación al Usuario</h4>\n        <p v-if=\"modalUserName\">Usuario: {{ modalUserName }}</p>\n        <textarea v-model=\"modalMessage\" placeholder=\"Escribe tu mensaje aquí...\" rows=\"4\"></textarea>\n        <div class=\"modal-actions\">\n          <button class=\"btn btn-primary\" @click=\"sendNotification\">Enviar</button>\n          <button class=\"btn btn-secondary\" @click=\"closeNotificationModal\">Cancelar</button>\n        </div>\n        <p v-if=\"modalErrorMessage\" class=\"error-message\">{{ modalErrorMessage }}</p>\n        <p v-if=\"modalSuccessMessage\" class=\"success-message\">{{ modalSuccessMessage }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"@/plugins/axios\";\n\nexport default {\n  name: \"AdminRequests\",\n  data() {\n    return {\n      requests: [],\n      isLoading: false,\n      errorMessage: \"\",\n      // Variables para el modal de notificación\n      showNotificationModal: false,\n      modalUserId: null,\n      modalUserName: \"\",\n      modalMessage: \"\",\n      modalErrorMessage: \"\",\n      modalSuccessMessage: \"\"\n    };\n  },\n  created() {\n    this.fetchRequests();\n  },\n  methods: {\n    async fetchRequests() {\n      this.isLoading = true;\n      try {\n        const response = await axios.get(\"/requests\", {\n          headers: { Authorization: \"Bearer \" + this.$store.getters[\"auth/token\"] }\n        });\n        this.requests = response.data.data || response.data;\n      } catch (error) {\n        this.errorMessage = error.response?.data?.message || \"Error al cargar las solicitudes.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async updateRequestStatus(requestId, newStatus) {\n      try {\n        await axios.put(`/requests/${requestId}/status`, { status: newStatus }, {\n          headers: { Authorization: \"Bearer \" + this.$store.getters[\"auth/token\"] }\n        });\n        this.fetchRequests();\n      } catch (error) {\n        this.errorMessage =\n          error.response?.data?.message || \"Error al actualizar solicitud.\";\n        console.error(\"Error al actualizar solicitud:\", error);\n      }\n    },\n    goToDetails(requestId) {\n      this.$router.push({ name: \"request-details\", params: { id: requestId } });\n    },\n    capitalizeStatus(status) {\n      if (!status) return \"\";\n      const statusMap = { \"en_progreso\": \"Activo\" };\n      return statusMap[status] || status.charAt(0).toUpperCase() + status.slice(1).toLowerCase();\n    },\n    canTransition(currentStatus, targetStatus) {\n      const transitions = {\n        pendiente: [\"aprobado\", \"rechazado\"],\n        aprobado: [\"en_progreso\"],\n        en_progreso: [\"completado\", \"cancelado\"],\n        completado: [],\n        cancelado: [],\n        rechazado: []\n      };\n      return transitions[currentStatus]?.includes(targetStatus) || false;\n    },\n    statusClass(status) {\n      const statusMap = {\n        pendiente: \"bg-warning text-dark\",\n        aprobado: \"bg-info text-white\",\n        rechazado: \"bg-danger text-white\",\n        en_progreso: \"bg-primary text-white\",\n        completado: \"bg-success text-white\",\n        cancelado: \"bg-secondary text-white\"\n      };\n      return statusMap[status] || \"bg-light\";\n    },\n    statusIcon(status) {\n      const iconMap = {\n        pendiente: \"fas fa-hourglass-start text-warning\",\n        aprobado: \"fas fa-check-circle text-info\",\n        rechazado: \"fas fa-times-circle text-danger\",\n        en_progreso: \"fas fa-spinner text-primary\",\n        completado: \"fas fa-check text-success\",\n        cancelado: \"fas fa-ban text-secondary\"\n      };\n      return iconMap[status] || \"fas fa-question-circle text-muted\";\n    },\n    openNotificationModal(request) {\n      if (request.client && request.client.id) {\n        this.modalUserId = request.client.id;\n        this.modalUserName = request.client.name || \"Usuario\";\n        this.modalMessage = \"\";\n        this.modalErrorMessage = \"\";\n        this.modalSuccessMessage = \"\";\n        this.showNotificationModal = true;\n      } else {\n        console.error(\"La solicitud no cuenta con un cliente asignado.\");\n      }\n    },\n    closeNotificationModal() {\n      this.showNotificationModal = false;\n    },\n    async sendNotification() {\n      try {\n        await axios.post(\"/notifications/send\", {\n          userId: this.modalUserId,\n          message: this.modalMessage\n        }, {\n          headers: { Authorization: \"Bearer \" + this.$store.getters[\"auth/token\"] }\n        });\n        this.modalSuccessMessage = \"Notificación enviada exitosamente.\";\n        setTimeout(() => {\n          this.closeNotificationModal();\n        }, 1500);\n      } catch (error) {\n        this.modalErrorMessage = error.response?.data?.message || \"Error al enviar la notificación.\";\n        console.error(\"Error en sendNotification:\", error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.dashboard-title {\n  font-size: 22px;\n  font-weight: bold;\n  margin-bottom: 15px;\n}\n\n.table {\n  width: 100%;\n  margin-top: 20px;\n}\n\n.icon-btn {\n  background: none;\n  border: none;\n  font-size: 1.2rem;\n  padding: 5px;\n  cursor: pointer;\n  position: relative;\n  transition: transform 0.2s, opacity 0.3s;\n}\n\n.icon-btn:hover {\n  transform: scale(1.2);\n  opacity: 0.8;\n}\n\n.icon-btn:disabled {\n  color: gray !important;\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n\n.tooltip {\n  position: absolute;\n  bottom: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: rgba(0, 0, 0, 0.75);\n  color: #fff;\n  padding: 5px 10px;\n  font-size: 0.8rem;\n  white-space: nowrap;\n  border-radius: 4px;\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0.2s, opacity 0.2s;\n}\n\n.icon-btn:hover .tooltip {\n  visibility: visible;\n  opacity: 1;\n}\n\n.bg-warning {\n  background-color: #ffc107;\n}\n\n.bg-info {\n  background-color: #17a2b8;\n}\n\n.bg-danger {\n  background-color: #dc3545;\n}\n\n.bg-primary {\n  background-color: #007bff;\n}\n\n.bg-success {\n  background-color: #28a745;\n}\n\n.bg-secondary {\n  background-color: #6c757d;\n}\n\n.bg-light {\n  background-color: #f8f9fa;\n}\n\n.text-dark {\n  color: black;\n}\n\n.text-white {\n  color: white;\n}\n\n/* Modal Styles */\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0,0,0,0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 9999;\n}\n\n.modal-content {\n  background: #fff;\n  padding: 20px;\n  border-radius: 8px;\n  width: 300px;\n  text-align: center;\n}\n\n.modal-actions {\n  margin-top: 15px;\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n}\n\n.error-message {\n  color: #dc3545;\n}\n\n.success-message {\n  color: #28a745;\n}\n\n/* Opcional: Ajustes para la tabla y botones de acción */\n.action-buttons {\n  display: flex;\n  gap: 5px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}