{"ast":null,"code":"import axios from \"@/plugins/axios\";\nimport Navbar from \"@/components/Navbar.vue\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\nexport default {\n  name: \"AvailableServices\",\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      services: [],\n      requestedServices: [],\n      // Lista de servicios solicitados\n      selectedService: null,\n      // Servicio seleccionado para el modal\n      form: {\n        description: \"\",\n        priority: \"medium\"\n      },\n      errorMessage: \"\",\n      isLoading: true,\n      isSubmitting: false\n    };\n  },\n  async created() {\n    await this.fetchServices();\n  },\n  methods: {\n    async fetchServices() {\n      this.isLoading = true;\n      try {\n        const response = await axios.get(\"/services\");\n        this.services = response.data;\n      } catch (error) {\n        this.errorMessage = error.response?.data?.message || \"Error al cargar los servicios.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    openConfirmationModal(service) {\n      this.selectedService = service;\n      const modal = new bootstrap.Modal(document.getElementById(\"confirmationModal\"));\n      modal.show();\n    },\n    openRequestForm() {\n      const confirmationModal = bootstrap.Modal.getInstance(document.getElementById(\"confirmationModal\"));\n      confirmationModal.hide();\n      const requestFormModal = new bootstrap.Modal(document.getElementById(\"requestFormModal\"));\n      requestFormModal.show();\n    },\n    async submitRequest() {\n      this.isSubmitting = true;\n      try {\n        const response = await axios.post(\"/requests\", {\n          serviceId: this.selectedService.id,\n          description: this.form.description,\n          priority: this.form.priority\n        });\n        this.requestedServices.push({\n          id: response.data.id,\n          serviceName: this.selectedService.name,\n          status: \"Pendiente\"\n        });\n        const requestFormModal = bootstrap.Modal.getInstance(document.getElementById(\"requestFormModal\"));\n        requestFormModal.hide();\n      } catch (error) {\n        this.errorMessage = error.response?.data?.message || \"Error al enviar la solicitud.\";\n      } finally {\n        this.isSubmitting = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","Navbar","name","components","data","services","requestedServices","selectedService","form","description","priority","errorMessage","isLoading","isSubmitting","created","fetchServices","methods","response","get","error","message","openConfirmationModal","service","modal","bootstrap","Modal","document","getElementById","show","openRequestForm","confirmationModal","getInstance","hide","requestFormModal","submitRequest","post","serviceId","id","push","serviceName","status"],"sources":["/home/lated/LatedServices/frontend/src/views/client/AvailableServices.vue"],"sourcesContent":["<template>\n  <div class=\"content\">\n    <Navbar />\n    <div class=\"container mt-5\">\n      <h2 class=\"mb-4 text-center\">Servicios Disponibles</h2>\n\n      <!-- Mensaje de error -->\n      <div v-if=\"errorMessage\" class=\"alert alert-danger\" role=\"alert\">\n        {{ errorMessage }}\n      </div>\n\n      <!-- Mensaje de carga -->\n      <div v-if=\"isLoading\" class=\"text-center\">\n        <p>Cargando servicios...</p>\n      </div>\n\n      <!-- Mensaje cuando no hay servicios -->\n      <div v-if=\"!isLoading && services.length === 0 && !errorMessage\" class=\"alert alert-info\" role=\"alert\">\n        No tenemos servicios disponibles en este momento.\n      </div>\n\n      <!-- Lista de servicios -->\n      <div v-if=\"!isLoading && services.length > 0\" class=\"row\">\n        <div v-for=\"service in services\" :key=\"service.id\" class=\"col-md-4 mb-4\">\n          <div class=\"card h-100\">\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">{{ service.name }}</h5>\n              <p class=\"card-text\">{{ service.description }}</p>\n              <p class=\"card-text\"><strong>Precio:</strong> ${{ service.price }}</p>\n              <button class=\"btn btn-primary\" @click=\"openConfirmationModal(service)\">\n                Solicitar Servicio\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Modal de Confirmación -->\n      <div\n        class=\"modal fade\"\n        id=\"confirmationModal\"\n        tabindex=\"-1\"\n        aria-labelledby=\"confirmationModalLabel\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"confirmationModalLabel\">Confirmar Solicitud</h5>\n              <button\n                type=\"button\"\n                class=\"btn-close\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n              ></button>\n            </div>\n            <div class=\"modal-body\">\n              ¿Estás seguro de que deseas solicitar el servicio \"{{ selectedService?.name }}\"?\n            </div>\n            <div class=\"modal-footer\">\n              <button\n                type=\"button\"\n                class=\"btn btn-secondary\"\n                data-bs-dismiss=\"modal\"\n              >\n                Cancelar\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-primary\"\n                @click=\"openRequestForm\"\n              >\n                Sí, Solicitar\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Modal del Formulario -->\n      <div\n        class=\"modal fade\"\n        id=\"requestFormModal\"\n        tabindex=\"-1\"\n        aria-labelledby=\"requestFormModalLabel\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"requestFormModalLabel\">Formulario de Solicitud</h5>\n              <button\n                type=\"button\"\n                class=\"btn-close\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n              ></button>\n            </div>\n            <div class=\"modal-body\">\n              <form @submit.prevent=\"submitRequest\">\n                <div class=\"form-group\">\n                  <label for=\"description\">Descripción</label>\n                  <textarea\n                    id=\"description\"\n                    v-model=\"form.description\"\n                    class=\"form-control\"\n                    rows=\"4\"\n                    placeholder=\"Describe el servicio que necesitas\"\n                    required\n                  ></textarea>\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"priority\">Prioridad</label>\n                  <select\n                    id=\"priority\"\n                    v-model=\"form.priority\"\n                    class=\"form-control\"\n                    required\n                  >\n                    <option value=\"low\">Baja</option>\n                    <option value=\"medium\">Media</option>\n                    <option value=\"high\">Alta</option>\n                  </select>\n                </div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mt-3\"\n                  :disabled=\"isSubmitting\"\n                >\n                  {{ isSubmitting ? \"Enviando...\" : \"Enviar Solicitud\" }}\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Lista de Servicios Solicitados -->\n      <div v-if=\"requestedServices.length > 0\" class=\"mt-5\">\n        <h3 class=\"mb-4\">Servicios Solicitados</h3>\n        <ul class=\"list-group\">\n          <li\n            v-for=\"request in requestedServices\"\n            :key=\"request.id\"\n            class=\"list-group-item d-flex justify-content-between align-items-center\"\n          >\n            <span>{{ request.serviceName }}</span>\n            <span class=\"badge bg-primary\">{{ request.status }}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"@/plugins/axios\";\nimport Navbar from \"@/components/Navbar.vue\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\n\nexport default {\n  name: \"AvailableServices\",\n  components: { Navbar },\n  data() {\n    return {\n      services: [],\n      requestedServices: [], // Lista de servicios solicitados\n      selectedService: null, // Servicio seleccionado para el modal\n      form: {\n        description: \"\",\n        priority: \"medium\",\n      },\n      errorMessage: \"\",\n      isLoading: true,\n      isSubmitting: false,\n    };\n  },\n  async created() {\n    await this.fetchServices();\n  },\n  methods: {\n    async fetchServices() {\n      this.isLoading = true;\n      try {\n        const response = await axios.get(\"/services\");\n        this.services = response.data;\n      } catch (error) {\n        this.errorMessage =\n          error.response?.data?.message || \"Error al cargar los servicios.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    openConfirmationModal(service) {\n      this.selectedService = service;\n      const modal = new bootstrap.Modal(\n        document.getElementById(\"confirmationModal\")\n      );\n      modal.show();\n    },\n    openRequestForm() {\n      const confirmationModal = bootstrap.Modal.getInstance(\n        document.getElementById(\"confirmationModal\")\n      );\n      confirmationModal.hide();\n\n      const requestFormModal = new bootstrap.Modal(\n        document.getElementById(\"requestFormModal\")\n      );\n      requestFormModal.show();\n    },\n    async submitRequest() {\n      this.isSubmitting = true;\n      try {\n        const response = await axios.post(\"/requests\", {\n          serviceId: this.selectedService.id,\n          description: this.form.description,\n          priority: this.form.priority,\n        });\n        this.requestedServices.push({\n          id: response.data.id,\n          serviceName: this.selectedService.name,\n          status: \"Pendiente\",\n        });\n        const requestFormModal = bootstrap.Modal.getInstance(\n          document.getElementById(\"requestFormModal\")\n        );\n        requestFormModal.hide();\n      } catch (error) {\n        this.errorMessage =\n          error.response?.data?.message || \"Error al enviar la solicitud.\";\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.content {\n  margin-top: 70px;\n}\n.container {\n  max-width: 1200px;\n}\n.card {\n  border-radius: 0.25rem;\n  transition: transform 0.2s;\n}\n.card:hover {\n  transform: translateY(-5px);\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}